{"version":3,"sources":["../node_modules/tsparticles/dist/pjs.js","../node_modules/tsparticles/dist/ShapeDrawers/SquareDrawer.js","../node_modules/tsparticles/dist/Enums/Directions/OutModeDirection.js","../node_modules/tsparticles/dist/Enums/Directions/MoveDirection.js","../node_modules/tsparticles/dist/Enums/Directions/RotateDirection.js","../node_modules/tsparticles/dist/Enums/Directions/index.js","../node_modules/tsparticles/dist/Core/Particle/Vector.js","../node_modules/tsparticles/dist/Utils/NumberUtils.js","../node_modules/tsparticles/dist/Utils/Utils.js","../node_modules/tsparticles/dist/Utils/Constants.js","../node_modules/tsparticles/dist/Utils/ColorUtils.js","../node_modules/tsparticles/dist/Utils/CanvasUtils.js","../node_modules/tsparticles/dist/Utils/Range.js","../node_modules/tsparticles/dist/Utils/Circle.js","../node_modules/tsparticles/dist/Utils/Rectangle.js","../node_modules/tsparticles/dist/Utils/CircleWarp.js","../node_modules/tsparticles/dist/Enums/Modes/ClickMode.js","../node_modules/tsparticles/dist/Enums/Modes/DestroyMode.js","../node_modules/tsparticles/dist/Enums/Modes/DivMode.js","../node_modules/tsparticles/dist/Enums/Modes/HoverMode.js","../node_modules/tsparticles/dist/Enums/Modes/CollisionMode.js","../node_modules/tsparticles/dist/Enums/Modes/OutMode.js","../node_modules/tsparticles/dist/Enums/Modes/SizeMode.js","../node_modules/tsparticles/dist/Enums/Modes/ThemeMode.js","../node_modules/tsparticles/dist/Enums/Modes/index.js","../node_modules/tsparticles/dist/Enums/AnimationStatus.js","../node_modules/tsparticles/dist/Enums/Types/DestroyType.js","../node_modules/tsparticles/dist/Enums/Types/ProcessBubbleType.js","../node_modules/tsparticles/dist/Enums/Types/ShapeType.js","../node_modules/tsparticles/dist/Enums/Types/StartValueType.js","../node_modules/tsparticles/dist/Enums/Types/DivType.js","../node_modules/tsparticles/dist/Enums/Types/index.js","../node_modules/tsparticles/dist/Enums/InteractivityDetect.js","../node_modules/tsparticles/dist/Enums/index.js","../node_modules/tsparticles/dist/Utils/EventListeners.js","../node_modules/tsparticles/dist/Utils/Plugins.js","../node_modules/tsparticles/dist/Utils/Point.js","../node_modules/tsparticles/dist/Utils/QuadTree.js","../node_modules/tsparticles/dist/Utils/index.js","../node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","../node_modules/tsparticles/dist/ShapeDrawers/ImageDrawer.js","../node_modules/tsparticles/dist/ShapeDrawers/LineDrawer.js","../node_modules/tsparticles/dist/ShapeDrawers/CircleDrawer.js","../node_modules/tsparticles/dist/ShapeDrawers/PolygonDrawerBase.js","../node_modules/tsparticles/dist/ShapeDrawers/TriangleDrawer.js","../node_modules/tsparticles/dist/ShapeDrawers/StarDrawer.js","../node_modules/tsparticles/dist/ShapeDrawers/PolygonDrawer.js","../node_modules/tsparticles/dist/Core/Canvas.js","../node_modules/tsparticles/dist/Core/Particle/Updater.js","../node_modules/tsparticles/dist/Options/Classes/OptionsColor.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Links/LinksShadow.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Links/LinksTriangle.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Links/Links.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/Attract.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/Trail.js","../node_modules/tsparticles/dist/Options/Classes/Random.js","../node_modules/tsparticles/dist/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/Path/PathDelay.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/Path/Path.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Number/Density.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles/dist/Options/Classes/AnimationOptions.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Rotate/RotateAnimation.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Rotate/Rotate.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles/dist/Options/Classes/ColorAnimation.js","../node_modules/tsparticles/dist/Options/Classes/Particles/HslAnimation.js","../node_modules/tsparticles/dist/Options/Classes/Particles/AnimatableColor.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Bounce/BounceFactor.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Bounce/Bounce.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Twinkle/TwinkleValues.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Twinkle/Twinkle.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Life/LifeDelay.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Life/LifeDuration.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Life/Life.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Destroy/SplitFactor.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Destroy/SplitRate.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Destroy/Split.js","../node_modules/tsparticles/dist/Options/Classes/Particles/Destroy/Destroy.js","../node_modules/tsparticles/dist/Options/Classes/Particles/ParticlesOptions.js","../node_modules/tsparticles/dist/Core/Particle/Infecter.js","../node_modules/tsparticles/dist/Core/Particle/Mover.js","../node_modules/tsparticles/dist/Core/Particle.js","../node_modules/tsparticles/dist/Interactions/External/Grabber.js","../node_modules/tsparticles/dist/Interactions/External/Repulser.js","../node_modules/tsparticles/dist/Interactions/External/Bubbler.js","../node_modules/tsparticles/dist/Interactions/External/Connector.js","../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","../node_modules/tsparticles/dist/Interactions/Particles/Attractor.js","../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","../node_modules/tsparticles/dist/Interactions/Particles/Infecter.js","../node_modules/tsparticles/dist/Interactions/External/TrailMaker.js","../node_modules/tsparticles/dist/Interactions/External/Attractor.js","../node_modules/tsparticles/dist/Interactions/Particles/Lighter.js","../node_modules/tsparticles/dist/Interactions/External/Lighter.js","../node_modules/tsparticles/dist/Interactions/External/Bouncer.js","../node_modules/tsparticles/dist/Core/Particle/InteractionManager.js","../node_modules/tsparticles/dist/Core/Particles.js","../node_modules/tsparticles/dist/Core/Retina.js","../node_modules/tsparticles/dist/Core/FrameManager.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/BubbleBase.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/BubbleDiv.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Bubble.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/ConnectLinks.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Connect.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/GrabLinks.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Grab.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Remove.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Push.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/RepulseBase.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/RepulseDiv.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Repulse.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Slow.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Trail.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Attract.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/LightGradient.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/LightArea.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/LightShadow.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Light.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Bounce.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles/dist/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles/dist/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles/dist/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles/dist/Options/Classes/Background/Background.js","../node_modules/tsparticles/dist/Options/Classes/Infection/InfectionStage.js","../node_modules/tsparticles/dist/Options/Classes/Infection/Infection.js","../node_modules/tsparticles/dist/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles/dist/Options/Classes/Theme/Theme.js","../node_modules/tsparticles/dist/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles/dist/Options/Classes/Motion/MotionReduce.js","../node_modules/tsparticles/dist/Options/Classes/Motion/Motion.js","../node_modules/tsparticles/dist/Options/Classes/ManualParticle.js","../node_modules/tsparticles/dist/Options/Classes/Responsive.js","../node_modules/tsparticles/dist/Options/Classes/Options.js","../node_modules/tsparticles/dist/Core/Container.js","../node_modules/tsparticles/dist/Core/Loader.js","../node_modules/tsparticles/dist/main.slim.js","../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js","../node_modules/tsparticles/dist/Plugins/Absorbers/Options/Classes/AbsorberSize.js","../node_modules/tsparticles/dist/Plugins/Absorbers/Options/Classes/Absorber.js","../node_modules/tsparticles/dist/Plugins/Absorbers/Enums/AbsorberClickMode.js","../node_modules/tsparticles/dist/Plugins/Absorbers/Enums/index.js","../node_modules/tsparticles/dist/Plugins/Absorbers/Absorbers.js","../node_modules/tsparticles/dist/Plugins/Absorbers/AbsorbersPlugin.js","../node_modules/tsparticles/dist/Plugins/Emitters/Options/Classes/EmitterSize.js","../node_modules/tsparticles/dist/Plugins/Emitters/EmitterInstance.js","../node_modules/tsparticles/dist/Plugins/Emitters/Options/Classes/EmitterRate.js","../node_modules/tsparticles/dist/Plugins/Emitters/Options/Classes/EmitterLife.js","../node_modules/tsparticles/dist/Plugins/Emitters/Options/Classes/Emitter.js","../node_modules/tsparticles/dist/Plugins/Emitters/Enums/EmitterClickMode.js","../node_modules/tsparticles/dist/Plugins/Emitters/Enums/index.js","../node_modules/tsparticles/dist/Plugins/Emitters/Emitters.js","../node_modules/tsparticles/dist/Plugins/Emitters/EmittersPlugin.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Enums/InlineArrangement.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Enums/MoveType.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Enums/Type.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Enums/index.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Options/Classes/DrawStroke.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Options/Classes/Draw.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Options/Classes/Move.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Options/Classes/Inline.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Options/Classes/LocalSvg.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/Options/Classes/PolygonMask.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskPlugin.js","../node_modules/tsparticles/dist/main.js","../node_modules/tsparticles/dist/Types/RangeValue.js","../node_modules/tsparticles/dist/Types/RecursivePartial.js","../node_modules/tsparticles/dist/Types/ShapeData.js","../node_modules/tsparticles/dist/Types/ShapeDrawerFunctions.js","../node_modules/tsparticles/dist/Types/SingleOrMultiple.js","../node_modules/tsparticles/dist/Types/index.js","../node_modules/tsparticles/dist/index.js","index.ts"],"names":[],"mappings":"A+CAA,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ArFAA,AtBAA,ADAA,AEAA,ACAA,A2BAA,AhBAA,AIAA,AHAA,ACAA,ACAA,AEAA,ACAA,ACAA,ACAA,AEAA,AIAA,AHAA,ACAA,ACAA,AEAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,ADAA,AGAA,ADAA,AUAA,ADAA,AFAA,ACAA,AbAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,ADAA,AHAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AHAA,ACAA,AFAA,ADAA,AOAA,AMAA,ACAA,AHAA,ACAA,AFAA,ADAA,ADAA,AFAA,ASAA,ACAA,ACAA,ACAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A5IAA,AFAA,ACAA,AKAA,AHAA,A1CAA,A4CAA,ANAA,AKAA,A4IAA,ACAA,ACAA,ACAA,ACAA,ACAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,ACAA,ACAA,AzBAA,AEAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA;A+CCA,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ArFAA,AtBAA,ADAA,AEAA,ACAA,A2BAA,AhBAA,AIAA,AHAA,ACAA,ACAA,AEAA,ACAA,ACAA,ACAA,AEAA,AIAA,AHAA,ACAA,ACAA,AEAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,ADAA,AGAA,ADAA,AUAA,ADAA,AFAA,ACAA,AbAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,ADAA,AHAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AHAA,ACAA,AFAA,ADAA,AOAA,AMAA,ACAA,AHAA,ACAA,AFAA,ADAA,ADAA,AFAA,ASAA,ACAA,ACAA,ACAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A5IAA,AFAA,ACAA,AKAA,AHAA,A1CAA,A4CAA,ANAA,AKAA,A4IAA,ACAA,ACAA,ACAA,ACAA,ACAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,ACAA,ACAA,AzBAA,AEAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA;A+CCA,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ArFAA,AtBAA,ADAA,AEAA,ACAA,A2BAA,AhBAA,AIAA,AHAA,ACAA,ACAA,AEAA,ACAA,ACAA,ACAA,AEAA,AIAA,AHAA,ACAA,ACAA,AEAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,ADAA,AGAA,ADAA,AUAA,ADAA,AFAA,ACAA,AbAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,ADAA,AHAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AHAA,ACAA,AFAA,ADAA,AOAA,AMAA,ACAA,AHAA,ACAA,AFAA,ADAA,ADAA,AFAA,ASAA,ACAA,ACAA,ACAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A5IAA,AFAA,ACAA,AKAA,AHAA,A1CAA,A4CAA,ANAA,AKAA,A4IAA,ACAA,ACAA,ACAA,ACAA,ACAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,ACAA,ACAA,AzBAA,AEAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA;A+CCA,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ArFAA,AtBAA,ADAA,AEAA,ACAA,A2BAA,AhBAA,AIAA,AHAA,ACAA,ACAA,AEAA,ACAA,ACAA,ACAA,AEAA,AIAA,AHAA,ACAA,ACAA,AEAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,ADAA,AGAA,ADAA,AUAA,ADAA,AFAA,ACAA,AbAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,ADAA,AHAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AHAA,ACAA,AFAA,ADAA,AOAA,AMAA,ACAA,AHAA,ACAA,AFAA,ADAA,ADAA,AFAA,ASAA,ACAA,ACAA,ACAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A5IAA,AFAA,ACAA,AKAA,AHAA,A1CAA,A4CAA,ANAA,AKAA,AiJAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,ACAA,ACAA,AzBAA,AEAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA;A+CCA,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ArFAA,AtBAA,ADAA,AEAA,ACAA,A2BAA,AhBAA,AIAA,AHAA,ACAA,ACAA,AEAA,ACAA,ACAA,ACAA,AEAA,AIAA,AHAA,ACAA,ACAA,AEAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,ADAA,AGAA,ADAA,AUAA,ADAA,AFAA,ACAA,AbAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,ADAA,AHAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AHAA,ACAA,AFAA,ADAA,AOAA,AMAA,ACAA,AHAA,ACAA,AFAA,ADAA,ADAA,AFAA,ASAA,ACAA,ACAA,ACAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A5IAA,AFAA,ACAA,AKAA,AHAA,A1CAA,A4CAA,ANAA,AKAA,AiJAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,ACAA,ACAA,AzBAA,AEAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA;A+CCA,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ArFAA,AtBAA,ADAA,AEAA,ACAA,A2BAA,AhBAA,AIAA,AHAA,ACAA,ACAA,AEAA,ACAA,ACAA,ACAA,AEAA,AIAA,AHAA,ACAA,ACAA,AEAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,ADAA,AGAA,ADAA,AUAA,ADAA,AFAA,ACAA,AbAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,ADAA,AHAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AHAA,ACAA,AFAA,ADAA,AOAA,AMAA,ACAA,AHAA,ACAA,AFAA,ADAA,ADAA,AFAA,ASAA,ACAA,ACAA,ACAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A5IAA,AFAA,ACAA,AKAA,AHAA,A1CAA,A4CAA,ANAA,AKAA,AiJAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,ACAA,ACAA,AzBAA,AEAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA;A+CCA,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ArFAA,AtBAA,ADAA,AEAA,ACAA,A2BAA,AhBAA,AIAA,AHAA,ACAA,ACAA,AEAA,ACAA,ACAA,ACAA,AEAA,AIAA,AHAA,ACAA,ACAA,AEAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,ADAA,AGAA,ADAA,AUAA,ADAA,AFAA,ACAA,AbAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,ADAA,AHAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AHAA,ACAA,AFAA,ADAA,AOAA,AMAA,ACAA,AHAA,ACAA,AFAA,ADAA,ADAA,AFAA,ASAA,ACAA,ACAA,ACAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A5IAA,AFAA,ACAA,AKAA,AHAA,A1CAA,A4CAA,ANAA,AKAA,AiJAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,ACAA,ACAA,AzBAA,AEAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA,A+LNA,IAAA,aAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AhJOA,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ArFAA,AtBAA,ADAA,AEAA,ACAA,A2BAA,AhBAA,AIAA,AHAA,ACAA,ACAA,AEAA,ACAA,ACAA,ACAA,AEAA,AIAA,AHAA,ACAA,ACAA,AEAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,ADAA,AGAA,ADAA,AUAA,ADAA,AFAA,ACAA,AbAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,ADAA,AHAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AHAA,ACAA,AFAA,ADAA,AOAA,AMAA,ACAA,AHAA,ACAA,AFAA,ADAA,ADAA,AFAA,ASAA,ACAA,ACAA,ACAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A5IAA,AFAA,ACAA,AKAA,AHAA,A1CAA,A4CAA,ANAA,AKAA,AiJAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,ACAA,ACAA,AzBAA,AEAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA;A+CCA,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ArFAA,AtBAA,ADAA,AEAA,ACAA,A2BAA,AhBAA,AIAA,AHAA,ACAA,ACAA,AEAA,ACAA,ACAA,ACAA,AEAA,AIAA,AHAA,ACAA,ACAA,AEAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,ADAA,AGAA,ADAA,AUAA,ADAA,AFAA,ACAA,AbAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,ADAA,AHAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AFAA,AFAA,ADAA,AOAA,AMAA,ACAA,AFAA,AFAA,ADAA,ADAA,AFAA,ASAA,ACAA,ACAA,ACAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A5IAA,AFAA,ACAA,AKAA,AHAA,A1CAA,A4CAA,ANAA,AKAA,AiJAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,ACAA,ACAA,AzBAA,AEAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA,A+LLA,MAAM,CAAC,MAAP,GAAgB,YAAA;AhJMhB,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,A3GAA,ADAA,AEAA,ACAA,A2BAA,AhBAA,AIAA,AFAA,ACAA,AEAA,AEAA,ACAA,AEAA,ACAA,ACAA,ACAA,AEAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,ADAA,AGAA,ADAA,AUAA,ADAA,AFAA,ACAA,AbAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,ADAA,AHAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AFAA,AFAA,ADAA,AOAA,AMAA,ACAA,AFAA,AFAA,ADAA,ADAA,AFAA,ASAA,AEAA,ACAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A5IAA,AFAA,ACAA,AKAA,AHAA,A1CAA,A4CAA,ANAA,AKAA,AiJAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,ACAA,ACAA,AzBAA,AEAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA,A+LJI,EAAA,aAAA,CAAA,WAAA,CACK,IADL,CACU,sBADV,EACkC;AhJItC,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,A3GAA,ADAA,AGAA,AWAA,AGAA,AEAA,AGAA,AIAA,AGAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,ADAA,AGAA,ADAA,AUAA,ADAA,AFAA,ACAA,AbAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,ADAA,AHAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AFAA,AFAA,ADAA,AOAA,AMAA,ACAA,AFAA,AFAA,ADAA,ADAA,AFAA,ASAA,AEAA,ACAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A5IAA,AFAA,ACAA,AKAA,AHAA,A1CAA,A4CAA,ANAA,AKAA,AiJAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,ACAA,ACAA,AzBAA,AEAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA,A+LHgB,gBAAY,IADU;AhJKtC,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,A3GAA,AEAA,AWAA,AGAA,AEAA,AGAA,AIAA,AGAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,ADAA,AGAA,ADAA,AUAA,ADAA,AFAA,ACAA,AbAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,AJAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AFAA,AFAA,ADAA,AOAA,AMAA,ACAA,AFAA,AFAA,ADAA,ADAA,AFAA,ASAA,AGAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A5IAA,AFAA,ACAA,AKAA,AHAA,A1CAA,A4CAA,ANAA,AKAA,AiJAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,AEAA,AzBAA,AEAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA,A+LHgB,sBAAkB;AhJIlC,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,A3GAA,AEAA,AWAA,AGAA,AEAA,AGAA,AIAA,AGAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,ADAA,AGAA,ADAA,AUAA,ADAA,AdAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,AJAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AFAA,AFAA,ADAA,AOAA,AMAA,ACAA,AFAA,AFAA,ADAA,ADAA,AFAA,AYAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A5IAA,AFAA,ACAA,AKAA,AHAA,A1CAA,A4CAA,ANAA,AKAA,AiJAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,AEAA,AzBAA,AEAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA,A+LHoB,mBAAa,iBADC;AhJKlC,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,A3GAA,AEAA,AWAA,AGAA,AEAA,AGAA,AIAA,AGAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,AEAA,ADAA,AUAA,ADAA,AdAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,AJAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AFAA,AFAA,ADAA,AOAA,AMAA,ACAA,AFAA,AFAA,ADAA,ADAA,AFAA,AYAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A9IAA,ACAA,AKAA,AHAA,AEAA,ANAA,AKAA,AiJAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA,A+LHoB,eAAS;AhJI7B,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,A3GAA,AEAA,AcAA,AKAA,AIAA,AGAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,AEAA,ADAA,AUAA,ADAA,AdAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,AJAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AJAA,ADAA,AOAA,AMAA,ACAA,AJAA,ADAA,ADAA,AFAA,AYAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A9IAA,AMAA,AHAA,AEAA,ANAA,AKAA,AiJAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA,A+LHwB,iBAAS;AhJIjC,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,A3GAA,AgBAA,AKAA,AIAA,AGAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,ADAA,AGAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,AEAA,ADAA,AUAA,ADAA,AdAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,AJAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AJAA,ADAA,AOAA,AMAA,ACAA,AJAA,ADAA,ADAA,AFAA,AYAA,AEAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A9IAA,AMAA,AHAA,AEAA,ANAA,AKAA,AiJAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA,A+LH4B,mBAAS;AhJIrC,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,AtFAA,AIAA,AGAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,AEAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,AEAA,ADAA,AUAA,ADAA,AdAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,AJAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AJAA,ADAA,AOAA,AMAA,ACAA,AJAA,ADAA,ADAA,AFAA,AcAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A9IAA,AMAA,AHAA,AEAA,ANAA,AKAA,AiJAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,A8BAA,AwJAA,APAA,A7BAA,A1JAA,A+LLiC,SADJ;AhJO7B,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,AtFAA,AIAA,AGAA,AEAA,AuEAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AKAA,AjBAA,AFAA,ACAA,AGAA,AEAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,AEAA,ADAA,AUAA,ADAA,AdAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,AJAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AJAA,ADAA,AOAA,AMAA,ACAA,AJAA,ADAA,ADAA,AFAA,AcAA,ADAA,AGAA,ACAA,AFAA,AGAA,ACAA,ACAA,A9IAA,AMAA,AHAA,AEAA,ANAA,AKAA,AiJAA,AlLAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,A8BAA,AwJAA,ApCAA,A1JAA,A+LHwB,mBAAW;AhJInC,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,AtFAA,AgFAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AZAA,AFAA,ACAA,AGAA,AEAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AGAA,AEAA,ADAA,AUAA,ADAA,AdAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,AJAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AMAA,ADAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AJAA,ADAA,AOAA,AMAA,ACAA,AJAA,ADAA,ADAA,AFAA,AcAA,ADAA,AIAA,AFAA,AGAA,ACAA,ACAA,A9IAA,AMAA,AHAA,AEAA,ANAA,AKAA,AjCAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,A8BAA,AwJAA,ApCAA,A1JAA,A+LR6B,OAFK;AhJWlC,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,AtFAA,AgFAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AZAA,AFAA,ACAA,AGAA,AEAA,ADAA,AaAA,AFAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AKAA,ADAA,AUAA,ADAA,AdAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,AJAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AKAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AJAA,ADAA,AOAA,AMAA,ACAA,AJAA,ADAA,ADAA,AFAA,AcAA,ADAA,AIAA,AFAA,AGAA,ACAA,ACAA,A9IAA,AMAA,AHAA,AEAA,ANAA,AKAA,AjCAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,A8BAA,AwJAA,ApCAA,A1JAA,A+LHoB,gBAAU;AhJI9B,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,AtFAA,AgFAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AZAA,AFAA,ACAA,AGAA,AEAA,ADAA,AWAA,ADAA,AEAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,ADAA,ADAA,AIAA,AtGAA,A2BAA,AKAA,ADAA,AUAA,ADAA,AdAA,AWAA,AFAA,ACAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,AJAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AKAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AJAA,ADAA,AOAA,AMAA,ACAA,AJAA,ADAA,ADAA,AFAA,AcAA,ADAA,AIAA,AFAA,AGAA,ACAA,ACAA,A9IAA,AMAA,AHAA,AEAA,ANAA,AKAA,AjCAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,A8BAA,AwJAA,ApCAA,A1JAA,A+LZkC,KAFI;AhJetC,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AwEAA,AHAA,ADAA,A9BAA,ACAA,AGAA,ADAA,ADAA,AwBAA,APAA,AZAA,AFAA,ACAA,AGAA,AEAA,ADAA,AYAA,AGAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,AFAA,AIAA,AtGAA,A2BAA,AKAA,ADAA,AUAA,ADAA,AHAA,ADAA,AjCAA,AFAA,ACAA,AEAA,ASAA,AHAA,ACAA,ACAA,AHAA,AJAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AKAA,A3BAA,A+FAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AJAA,ADAA,AOAA,AMAA,ACAA,AJAA,AFAA,AFAA,AcAA,ADAA,AIAA,AFAA,AGAA,ACAA,ACAA,A9IAA,AMAA,AHAA,AEAA,ANAA,AKAA,AjCAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,A8BAA,AwJAA,ApCAA,A1JAA,A+LHgB,kBAAc;AhJI9B,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,ADAA,AjEAA,AqEAA,ADAA,A7BAA,AGAA,ADAA,ADAA,AwBAA,APAA,AZAA,AFAA,ACAA,AGAA,AEAA,ADAA,AeAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AmBAA,AEAA,AtGAA,A2BAA,AKAA,AQAA,AHAA,AlCAA,AFAA,ACAA,AEAA,ASAA,AFAA,ACAA,AHAA,AJAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AKAA,AoEAA,ALAA,ADAA,AxFAA,AmGAA,AKAA,ACAA,AJAA,ADAA,AOAA,AMAA,ACAA,AJAA,AJAA,AcAA,ADAA,AIAA,ACAA,ACAA,ACAA,A9IAA,AMAA,AHAA,AEAA,ANAA,AKAA,AjCAA,AEAA,AEAA,ALAA,ADAA,AyBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,A8BAA,AwJAA,ApCAA,AqCHoB,gBAAU,IADA;AhJK9B,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,AlEAA,AqEAA,ADAA,A7BAA,AGAA,ADAA,ADAA,AwBAA,APAA,AZAA,AFAA,ACAA,AGAA,AEAA,ADAA,AeAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AqBAA,A3EAA,AKAA,AQAA,AHAA,AlCAA,AFAA,ACAA,AEAA,ASAA,AFAA,ACAA,AHAA,AJAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AKAA,A+DAA,AzFAA,AmGAA,AKAA,ACAA,AJAA,ADAA,AOAA,AMAA,ACAA,AJAA,AJAA,AcAA,ADAA,AIAA,ACAA,ACAA,ACAA,A9IAA,AMAA,AHAA,AEAA,ANAA,AKAA,AjCAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,A8BAA,AwJAA,ApCAA,AqCHoB,gBAAU,CAAC;AhJI/B,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,AlEAA,AqEAA,ADAA,A7BAA,AGAA,ADAA,ADAA,AwBAA,APAA,AZAA,AFAA,ACAA,AGAA,AEAA,ADAA,AeAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AqBAA,A3EAA,AKAA,AQAA,ArCAA,AFAA,ACAA,AEAA,ASAA,AFAA,AFAA,AJAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AQAA,AKAA,A+DAA,AzFAA,AmGAA,AKAA,ACAA,AJAA,ADAA,AOAA,AMAA,ACAA,AJAA,AJAA,AcAA,ADAA,AIAA,ACAA,ACAA,ACAA,A9IAA,AMAA,AHAA,AEAA,ANAA,AKAA,AjCAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,A8BAA,AwJAA,ApCAA,AqCN8B,KAZQ;AhJmBtC,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,AlEAA,AqEAA,ADAA,A7BAA,AGAA,AFAA,AwBAA,APAA,AZAA,AFAA,ACAA,AGAA,AEAA,ADAA,AeAA,AZAA,ADAA,AIAA,AFAA,ACAA,AEAA,ACAA,AqBAA,A3EAA,AKAA,AQAA,ArCAA,AFAA,ACAA,AEAA,ASAA,AFAA,AFAA,AJAA,ASAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ADAA,AEAA,ALAA,AEAA,ADAA,AaAA,A1BAA,AmGAA,AKAA,ACAA,AJAA,ADAA,AOAA,AMAA,ACAA,AJAA,AJAA,AcAA,ADAA,AIAA,ACAA,ACAA,ACAA,A9IAA,AMAA,AHAA,AJAA,AKAA,AjCAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,A8BAA,AwJAA,ApCAA,AqCHgB,oBAAgB,IAhBM;AhJoBtC,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,AlEAA,AqEAA,ADAA,A7BAA,AGAA,AsBAA,AnBAA,AFAA,ACAA,AGAA,AEAA,ADAA,AeAA,ATAA,ADAA,AEAA,AsBAA,A3EAA,AKAA,AQAA,ArCAA,ADAA,AEAA,ASAA,ACAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ACAA,ALAA,AEAA,ADAA,AaAA,A1BAA,AmGAA,AKAA,ACAA,AJAA,ADAA,AOAA,AMAA,ACAA,AJAA,AJAA,AcAA,ADAA,AIAA,ACAA,ACAA,ACAA,A9IAA,AMAA,AHAA,AJAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,AsLAA,ApCAA,AqCHgB,gBAAY,EAjBU;AhJqBtC,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,AlEAA,AqEAA,ADAA,A7BAA,AGAA,AsBAA,AnBAA,AFAA,ACAA,AGAA,AEAA,ADAA,AeAA,ATAA,ADAA,AwBAA,A3EAA,AKAA,AQAA,ArCAA,ADAA,AEAA,ASAA,ACAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ACAA,ALAA,AEAA,ADAA,AaAA,AyEAA,AKAA,ACAA,AJAA,ADAA,AOAA,AMAA,ACAA,AJAA,AUAA,ADAA,AIAA,ACAA,ACAA,ACAA,A9IAA,AGAA,AJAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,AsLAA,ApCAA,AqCHgB,iBAAa;AhJI7B,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,ADAA,AlEAA,AqEAA,ADAA,A7BAA,AGAA,AsBAA,ArBAA,ACAA,AGAA,AEAA,ADAA,AeAA,AVAA,AwBAA,A3EAA,AKAA,A7BAA,ADAA,AEAA,ASAA,ACAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ACAA,ALAA,AEAA,ADAA,AaAA,AyEAA,AKAA,ACAA,AJAA,ADAA,AOAA,AMAA,ACAA,AJAA,AUAA,ADAA,AIAA,ACAA,ACAA,ACAA,A9IAA,AGAA,AJAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,AsLAA,ApCAA,AqCHoB,cAAQ,KADC;AhJK7B,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,AlCAA,A4EAA,AnEAA,AqEAA,ADAA,A7BAA,AGAA,AsBAA,ArBAA,ACAA,AGAA,AEAA,ADAA,AeAA,AVAA,AwBAA,A3EAA,AxBAA,ACAA,ASAA,ACAA,ACAA,AGAA,ADAA,AyBAA,AnBAA,ACAA,ALAA,AEAA,ADAA,AaAA,AyEAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AUAA,AIAA,ACAA,ACAA,A9IAA,AGAA,AJAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,AsLAA,ApCAA,AqCHoB,eAAS,CAFA;AhJM7B,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,A0CAA,AnEAA,AqEAA,A9BAA,AGAA,AsBAA,ArBAA,ACAA,AGAA,AEAA,AcAA,AVAA,AwBAA,A3EAA,AxBAA,ACAA,ASAA,ACAA,ACAA,AGAA,ADAA,AyBAA,AlBAA,ALAA,AEAA,ADAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AUAA,AIAA,ACAA,ACAA,A9IAA,AGAA,AJAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,AsLAA,ApCAA,AqCHoB,gBAAU,KAHD;AhJO7B,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,A0CAA,AnEAA,AqEAA,A9BAA,AGAA,AsBAA,ArBAA,ACAA,AGAA,AEAA,AcAA,AVAA,AwBAA,A3EAA,AxBAA,ACAA,ASAA,ACAA,ACAA,AGAA,ADAA,AyBAA,AlBAA,ALAA,AEAA,ADAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AUAA,AIAA,ACAA,ACAA,A9IAA,ADAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,AsLAA,ApCAA,AqCHoB,oBAAc,CAJL;AhJQ7B,AyGAA,AzCAA,A0CAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,A0CAA,AnEAA,AqEAA,A9BAA,AGAA,AsBAA,ArBAA,AIAA,AEAA,AcAA,AVAA,AwBAA,A3EAA,AxBAA,ACAA,ASAA,ACAA,ACAA,AGAA,ADAA,AyBAA,AlBAA,ALAA,AEAA,ADAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AUAA,AIAA,ACAA,ACAA,A9IAA,ADAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,AsLAA,ApCAA,AqCHoB,gBAAU;AhJI9B,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AGAA,ANAA,A0CAA,AnEAA,AqEAA,A9BAA,AGAA,AsBAA,ArBAA,AIAA,AEAA,AcAA,AVAA,AwBAA,A3EAA,AxBAA,ACAA,ASAA,ACAA,AIAA,ADAA,AyBAA,AlBAA,ALAA,AEAA,ADAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AUAA,AIAA,ACAA,ACAA,A9IAA,ADAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,AsLAA,ApCAA,AqCT6B,KAlBS;AhJ4BtC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,AWAA,AVAA,AOAA,AHAA,ACAA,ACAA,AHAA,A0CAA,AnEAA,AqEAA,A9BAA,AGAA,AsBAA,ArBAA,AIAA,AgBAA,AVAA,AwBAA,A3EAA,AxBAA,ACAA,ASAA,AIAA,AyBAA,AlBAA,ALAA,ACAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AUAA,AIAA,ACAA,ACAA,A9IAA,ADAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,AsLAA,ApCAA,AqCHgB,qBAAiB;AhJIjC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,ACAA,AOAA,AHAA,ACAA,ACAA,AHAA,A0CAA,AEAA,A9BAA,AGAA,AsBAA,ArBAA,AIAA,AgBAA,AVAA,AwBAA,AnGAA,ACAA,ASAA,AIAA,AyBAA,AlBAA,ALAA,ACAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AUAA,AIAA,ACAA,ACAA,A9IAA,ADAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,AkJAA,AqCHoB,mBAAa,QADA;AhJKjC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,ACAA,AOAA,AHAA,ACAA,ACAA,AHAA,A0CAA,AEAA,A9BAA,AGAA,AsBAA,ArBAA,AIAA,AgBAA,AVAA,AwBAA,AnGAA,ACAA,ASAA,AIAA,AyBAA,AlBAA,ALAA,ACAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AUAA,AIAA,ACAA,ACAA,A9IAA,ADAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,AkJAA,AqCHoB,gBAAU;AhJI9B,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,ACAA,AOAA,AFAA,ACAA,AHAA,A0CAA,AEAA,A9BAA,AGAA,AsBAA,ArBAA,AIAA,AgBAA,AVAA,AwBAA,AnGAA,ACAA,ASAA,AIAA,AyBAA,AlBAA,ALAA,ACAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AUAA,AIAA,ACAA,ACAA,A9IAA,ADAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,AkJAA,AqCHwB,mBAAW;AhJInC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,ACAA,AOAA,AFAA,ACAA,AHAA,A0CAA,AEAA,A9BAA,AGAA,AsBAA,ArBAA,AoBAA,AVAA,AwBAA,AnGAA,ACAA,ASAA,AIAA,AyBAA,AlBAA,ALAA,ACAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AcAA,ACAA,ACAA,A9IAA,ADAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,AvBAA,ANAA,AkJAA,AqCH4B,oBAAU,IADH;AhJKnC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,ACAA,AOAA,AFAA,ACAA,AHAA,A0CAA,AEAA,A9BAA,AGAA,AsBAA,ArBAA,AoBAA,AVAA,AwBAA,AnGAA,ACAA,ASAA,AIAA,AyBAA,AvBAA,ACAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AcAA,ACAA,ACAA,A9IAA,ADAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCH4B,kBAAQ;AhJIpC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,ACAA,AOAA,AFAA,ACAA,AHAA,AcAA,AGAA,AsBAA,ADAA,AcAA,AnGAA,ACAA,ASAA,AIAA,AyBAA,AvBAA,ACAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AcAA,ACAA,ACAA,A9IAA,ADAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCNmC,SADL;AhJQ9B,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,ACAA,AOAA,AFAA,ACAA,AHAA,AcAA,AGAA,AsBAA,ADAA,AcAA,AnGAA,ACAA,ASAA,AIAA,AyBAA,AvBAA,ACAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AcAA,ACAA,ACAA,A9IAA,ADAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCHwB,mBAAW;AhJInC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,ACAA,AKAA,ACAA,AHAA,AcAA,AGAA,AsBAA,ADAA,AcAA,AnGAA,ACAA,ASAA,AIAA,AyBAA,AvBAA,ACAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AcAA,ACAA,ACAA,A9IAA,ADAA,A5BAA,AEAA,AEAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCH4B,oBAAU,IADH;AhJKnC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,ACAA,AKAA,ACAA,AHAA,AcAA,AGAA,AqBAA,AcAA,AnGAA,AUAA,AIAA,AyBAA,AvBAA,ACAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AcAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCH4B,kBAAQ,QAFD;AhJMnC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,ACAA,AKAA,ACAA,AHAA,AcAA,AGAA,AqBAA,AcAA,AnGAA,AUAA,AIAA,AyBAA,AvBAA,ACAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AcAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCH4B,sBAAY;AhJIxC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,ACAA,AKAA,ACAA,AHAA,AcAA,AGAA,AqBAA,AcAA,AnGAA,AUAA,AIAA,AyBAA,AvBAA,ACAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AcAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCHgC,sBAAU,KADF;AhJKxC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,ACAA,AKAA,ACAA,AHAA,AcAA,AGAA,AmCAA,AnGAA,AUAA,AIAA,AyBAA,AvBAA,ACAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AcAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCHgC,qBAAS,CAFD;AhJMxC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,ACAA,AKAA,ACAA,AHAA,AcAA,AGAA,AmCAA,AnGAA,AUAA,AIAA,AyBAA,AvBAA,ACAA,AsFAA,AKAA,ACAA,AJAA,AMAA,AMAA,ACAA,AJAA,AcAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCHgC,sBAAU;AhJI1C,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,ACAA,AKAA,ACAA,AHAA,AcAA,AGAA,AmCAA,AnGAA,AUAA,AIAA,AyBAA,AvBAA,ACAA,AsFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AJAA,AcAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCPwC;AhJQxC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ACAA,AHAA,ACAA,AKAA,ACAA,AHAA,AcAA,AGAA,AmCAA,AnGAA,AUAA,AIAA,AyBAA,AvBAA,ACAA,AsFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AJAA,AcAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCXmC,SALL;AhJiB9B,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,AFAA,ACAA,AKAA,ACAA,AHAA,AcAA,AGAA,AmCAA,AnGAA,AUAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AJAA,AcAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCHwB,kBAAU;AhJIlC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,AFAA,ACAA,AKAA,ACAA,AHAA,AcAA,AGAA,AmCAA,AnGAA,AUAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AJAA,AcAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqClB8B,OAFG;AhJqBjC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,AFAA,ACAA,AKAA,ACAA,AHAA,AcAA,AGAA,AmCAA,AnGAA,AUAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AJAA,AcAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCHoB,eAAS;AhJI7B,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,AFAA,ACAA,AKAA,ACAA,AHAA,AcAA,AGAA,AmCAA,AnGAA,AUAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AJAA,AcAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCHwB,mBAAW;AhJInC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,AFAA,ACAA,AKAA,ACAA,AHAA,AcAA,AGAA,AmCAA,AnGAA,AUAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AUAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCH4B,sBAAY,GADL;AhJKnC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,AFAA,ACAA,AKAA,ACAA,AHAA,AcAA,AGAA,AmCAA,AnGAA,AUAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AUAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCH4B,sBAAY,GAFL;AhJMnC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,AFAA,ACAA,AKAA,ACAA,AHAA,AiBAA,AmCAA,AnGAA,AUAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AUAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCH4B,mBAAS;AhJIrC,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,AFAA,ACAA,AKAA,ACAA,AHAA,AiBAA,AmCAA,AnGAA,AUAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AUAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCPmC,SADN;AhJS7B,AyGAA,ACAA,A3DAA,AFAA,AgBAA,AfAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,AFAA,ACAA,AKAA,ACAA,AHAA,AiBAA,AmCAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AUAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCHwB,kBAAU;AhJIlC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AUAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCH4B,sBAAY,GADN;AhJKlC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AUAA,ACAA,A7IAA,ADAA,A5BAA,AIAA,ALAA,AwBAA,A3BAA,A4BAA,AEAA,A7BAA,AkJAA,AqCH4B,sBAAY,CAFN;AhJMlC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AUAA,ACAA,A7IAA,ADAA,A5BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCH4B,qBAAW,CAHL;AhJOlC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AUAA,ACAA,A7IAA,ADAA,A5BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCH4B,kBAAQ;AhJIpC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AUAA,ACAA,A7IAA,ADAA,A5BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCRkC,SANL;AhJe7B,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AUAA,ACAA,A7IAA,ADAA,A5BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCHwB,mBAAW;AhJInC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AUAA,ACAA,A7IAA,ADAA,A5BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCH4B,sBAAY,EADL;AhJKnC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AUAA,ACAA,A7IAA,ADAA,A5BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCH4B,mBAAS;AhJIrC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,ADAA,A5BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCHgC,uBAAW;AhJI3C,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,ADAA,A5BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCLqC,WAFF;AhJQnC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,ADAA,A5BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCH4B,oBAAU;AhJItC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,ADAA,A5BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCTmC,SAZN;AhJsB7B,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,ADAA,A5BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCHwB,gBAAQ;AhJIhC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,ADAA,A5BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCH4B,sBAAY,GADR;AhJKhC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,ADAA,A5BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCH4B,mBAAS;AhJIrC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCHgC,qBAAS,KADJ;AhJKrC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCHgC,uBAAW,KAFN;AhJMrC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCHgC,uBAAW;AhJI3C,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,A8BAA,A7BAA,AkJAA,AqCPqC;AhJQrC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCVgC,SAnBH;AhJ8B7B,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCHwB,iBAAS;AhJIjC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCH4B,kBAAQ;AhJIpC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCHgC,wBAAY;AhJI5C,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCHoC,uBAAS;AhJI7C,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ACAA,ANAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCHwC,yBAAS;AhJIjD,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ALAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCL6C,eADD;AhJO5C,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ALAA,AGAA,AVAA,ADAA,AKAA,AFAA,AoDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCHoC,sBAAQ;AhJI5C,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ALAA,AGAA,AVAA,ADAA,AKAA,AkDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCHwC,yBAAS;AhJIjD,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ALAA,AGAA,AVAA,ADAA,AKAA,AkDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCL4C;AhJM5C,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ALAA,AGAA,AVAA,ADAA,AKAA,AkDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCV4C,aADR;AhJYpC,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,ALAA,AGAA,AVAA,ADAA,AKAA,AkDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,ACAA,AEAA,AMAA,ACAA,AWAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCHgC,sBAAU;AhJI1C,AyGAA,ACAA,A3DAA,AFAA,ACAA,A7CAA,A1CAA,AuGAA,AZAA,ADAA,AKAA,AkDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,AGAA,AMAA,AYAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCboC,WADH;AhJejC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A1CAA,AuGAA,AZAA,ADAA,AKAA,AkDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,AGAA,AMAA,AYAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCH4B,oBAAU;AhJItC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A1CAA,AuGAA,AZAA,ADAA,AKAA,AkDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,AGAA,AMAA,AYAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCHgC,qBAAS;AhJIzC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A1CAA,AuGAA,AZAA,ADAA,AKAA,AkDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,AGAA,AMAA,AYAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCHoC,uBAAS;AhJI7C,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A1CAA,AuGAA,AZAA,ADAA,AKAA,AkDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,AGAA,AMAA,AYAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCLyC,aADH;AhJOtC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AKAA,AkDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,AGAA,AMAA,AYAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCHgC,sBAAU;AhJI1C,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AKAA,AkDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,AGAA,AMAA,AYAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCRsC;AhJStC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AKAA,AkDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,AGAA,AMAA,AYAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCrBiC,SA3BJ;AhJiD7B,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AKAA,AkDAA,AzFAA,A6BAA,AvBAA,AuFAA,AKAA,AGAA,AMAA,AYAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCHwB,gBAAQ;AhJIhC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AKAA,AkDAA,AzFAA,AMAA,AuFAA,AKAA,AGAA,AMAA,AYAA,A7IAA,A7BAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCH4B,sBAAY;AhJIxC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AKAA,AkDAA,AzFAA,AMAA,AuFAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCLgC,SA9CH;AhJoD7B,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AKAA,AkDAA,AzFAA,AMAA,AuFAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCHwB,kBAAU;AhJIlC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AKAA,AkDAA,AzFAA,AMAA,AuFAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A3BAA,ACAA,AkJAA,AqCH4B,sBAAY;AhJIxC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AKAA,AkDAA,AzFAA,AMAA,AuFAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AkJAA,AqCLkC,SAjDL;AhJuD7B,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,AMAA,AuFAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AkJAA,AqCHwB,mBAAW;AhJInC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AkJAA,AqCH4B,sBAAY,GADL;AhJKnC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AkJAA,AqCH4B,sBAAY,GAFL;AhJMnC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AkJAA,AqCH4B,mBAAS;AhJIrC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AkJAA,AqCPmC,SApDN;AhJ4D7B,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AkJAA,AqCHwB,gBAAQ;AhJIhC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AkJAA,AqCH4B,oBAAU,CADN;AhJKhC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AkJAA,AqCH4B,oBAAU;AhJItC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AkJAA,AqCNgC,SAzDH;AhJgE7B,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AkJAA,AqCHwB,iBAAS;AhJIjC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AkJAA,AqCH4B,mBAAS,CADJ;AhJKjC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AkJAA,AqCH4B,sBAAY;AhJIxC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AKAA,AGAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLNiC;AhJOjC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLpE6B;AhJqE7B,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLvFiC,KAzBK;AhJiHtC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgB,uBAAmB,EA9GG;AhJkHtC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgB,cAAU;AhJI1B,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoB,iBAAW,KADL;AhJK1B,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoB,gBAAU;AhJI9B,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,kBAAU,CADJ;AhJK9B,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AzFAA,A6FAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,iBAAS;AhJIjC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AIAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLN8B;AhJO9B,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AIAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLT0B,KA/GY;AhJyHtC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AIAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgB,iBAAa;AhJI7B,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AIAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoB,gBAAU;AhJI9B,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AIAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,sBAAc;AhJItC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AIAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,oBAAU;AhJItC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AIAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,sBAAU,KADJ;AhJKtC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AIAA,AQAA,AMAA,AYAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,4BAAgB;AhJIhD,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AYAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLNsC,WADA;AhJQtC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,ADAA,AuDAA,AYAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,mBAAS;AhJIrC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AsDAA,AYAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLTsC,SADR;AhJW9B,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AsDAA,AYAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,oBAAY;AhJIpC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AsDAA,AYAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,oBAAU;AhJItC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AsDAA,AYAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,sBAAU,KADJ;AhJKtC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AsDAA,AYAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,4BAAgB;AhJIhD,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AsDAA,AYAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLNsC,WADF;AhJQpC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AsDAA,AYAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,mBAAS;AhJIrC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AsDAA,AYAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLToC;AhJUpC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AsDAA,AYAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLlB8B,OADD;AhJoB7B,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AsDAA,AYAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoB,oBAAc;AhJIlC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,kBAAU;AhJIlC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,wBAAc;AhJI1C,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,sBAAU;AhJI1C,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoC,wBAAU,KADJ;AhJK1C,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoC,8BAAgB;AhJIpD,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLN0C,aADA;AhJQ1C,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,qBAAS;AhJIzC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLT0C,WADR;AhJWlC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,sBAAY;AhJIxC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,sBAAU;AhJI1C,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoC,wBAAU,KADJ;AhJK1C,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoC,8BAAgB;AhJIpD,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLN0C,aADF;AhJQxC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,qBAAS;AhJIzC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLTwC;AhJUxC,AyGAA,ACAA,A3DAA,ADAA,A7CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLlBkC,SADA;AhJoBlC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,kBAAU,KAjBA;AhJqBlC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,gBAAQ,QAlBE;AhJsBlC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,mBAAW;AhJInC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,oBAAU,IADH;AhJKnC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,qBAAW;AhJIvC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLNmC;AhJOnC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuL1BkC,OAjBL;AhJ4C7B,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoB,eAAS;AhJI7B,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,iBAAS,SADJ;AhJK7B,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,qBAAa;AhJIrC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,eAAK;AhJIjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,qBAAS,CADR;AhJKjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,sBAAU,KAFT;AhJMjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,sBAAU,CAHT;AhJOjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,qBAAS,CAJR;AhJQjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,oBAAQ;AhJIxC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLTiC,WADI;AhJWrC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,eAAK;AhJIjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,qBAAS,CADR;AhJKjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,sBAAU,KAFT;AhJMjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,sBAAU,CAHT;AhJOjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,qBAAS,CAJR;AhJQjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,oBAAQ;AhJIxC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLTiC,WARI;AhJkBrC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,eAAK;AhJIjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,qBAAS,CADR;AhJKjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,sBAAU,KAFT;AhJMjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,sBAAU,CAHT;AhJOjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,qBAAS,CAJR;AhJQjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,oBAAQ;AhJIxC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLTiC;AhJUjC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLzBqC;AhJ0BrC,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuL5B6B,OAzCA;AhJsE7B,AyGAA,ACAA,A3DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoB,iBAAW;AhJI/B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,iBAAS;AhJIjC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,mBAAS,CADJ;AhJKjC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,oBAAU;AhJItC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,sBAAU;AhJI1C,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoC,wBAAU,KADJ;AhJK1C,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoC,8BAAgB;AhJIpD,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLN0C,aADJ;AhJQtC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,qBAAS;AhJIzC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLTsC,WAFL;AhJYjC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,kBAAQ;AhJIpC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,sBAAU;AhJI1C,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoC,wBAAU,KADJ;AhJK1C,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoC,8BAAgB;AhJIpD,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLN0C,aADN;AhJQpC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,qBAAS;AhJIzC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoC,qBAAO,CADF;AhJKzC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoC,qBAAO;AhJI3C,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLNyC;AhJOzC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLZoC;AhJapC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLtBiC;AhJuBjC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLxB+B,OAnEF;AhJ4F7B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoB,cAAQ;AhJI5B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,iBAAS,CADL;AhJK5B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,iBAAS;AhJIjC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,oBAAU;AhJItC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,sBAAU,KADJ;AhJKtC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,4BAAgB;AhJIhD,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLNsC,WADL;AhJQjC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AkEAA,AkBAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,mBAAS,CALJ;AhJSjC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,kBAAQ;AhJIpC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLViC,SAFL;AhJa5B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,oBAAY;AhJIpC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,oBAAU;AhJItC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,sBAAU,KADJ;AhJKtC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,4BAAgB;AhJIhD,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLNsC,WADF;AhJQpC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,mBAAS,CALD;AhJSpC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,kBAAQ;AhJIpC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLVoC;AhJWpC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLrB4B,OAzFC;AhJ+G7B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoB,eAAS;AhJI7B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,iBAAS,KADJ;AhJK7B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,iBAAS;AhJIjC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,mBAAS;AhJIrC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLLiC,SAFJ;AhJQ7B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,mBAAW,KALN;AhJS7B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,oBAAY,GANP;AhJU7B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,kBAAU,KAPL;AhJW7B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,qBAAa,CARR;AhJY7B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,mBAAW,GATN;AhJa7B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,kBAAU;AhJIlC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,kBAAQ,CADF;AhJKlC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,mBAAS;AhJIrC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,qBAAS;AhJIzC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLLqC,WAFH;AhJQlC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,oBAAU;AhJItC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLTkC,SAVL;AhJoB7B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,qBAAa;AhJIrC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,oBAAU,KADD;AhJKrC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,uBAAa;AhJIzC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLNqC,SAjBR;AhJwB7B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,iBAAS,CArBJ;AhJyB7B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,gBAAQ;AhJIhC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuL1B6B,OA5GA;AhJuI7B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHoB,cAAQ;AhJI5B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,iBAAS;AhJIjC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,oBAAU,EADL;AhJKjC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,mBAAS;AhJIrC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLNiC,SADL;AhJQ5B,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,mBAAW;AhJInC,AyGAA,A1DAA,A9CAA,A6DAA,AZAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,oBAAU,KADH;AhJKnC,AyGAA,A1DAA,A9CAA,AiDAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,oBAAU;AhJItC,AyGAA,A1DAA,A9CAA,AiDAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,iBAAK,GADC;AhJKtC,AyGAA,A1DAA,A9CAA,AiDAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHgC,iBAAK;AhJIrC,AyGAA,A1DAA,A9CAA,AiDAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLNsC;AhJOtC,AyGAA,A1DAA,A9CAA,AiDAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLTmC,SALP;AhJe5B,AyGAA,A1DAA,A9CAA,AiDAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,iBAAS,CAZL;AhJgB5B,AyGAA,A1DAA,A9CAA,AiDAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,oBAAY,CAbR;AhJiB5B,AyGAA,A1DAA,A9CAA,AiDAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,qBAAa,MAdT;AhJkB5B,AyGAA,A1DAA,A9CAA,AiDAA,AoFAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,iBAAS,CAfL;AhJmB5B,AyGAA,A1DAA,A9CAA,AqIAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,kBAAU,IAhBN;AhJoB5B,AyGAA,A1DAA,A9CAA,AqIAA,A1KAA,ADAA,AwBAA,A1BAA,AuLHwB,mBAAW;AhJInC,AyGAA,A1DAA,A9CAA,AqIAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,0BAAgB,IADT;AhJKnC,AyGAA,A1DAA,A9CAA,AqIAA,A1KAA,ADAA,AwBAA,A1BAA,AuLH4B,oBAAU,KAFH;AhJMnC,AyGAA,A1DAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLH4B,sBAAY;AhJIxC,AyGAA,A1DAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLPmC,SAjBP;AhJyB5B,AyGAA,A1DAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHwB,gBAAQ;AhJIhC,AyGAA,A1DAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLH4B,mBAAS,IADL;AhJKhC,AyGAA,A1DAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLH4B,mBAAS;AhJIrC,AyGAA,A1DAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHgC,sBAAU;AhJI1C,AyGAA,A1DAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHoC,wBAAU,KADJ;AhJK1C,AyGAA,A1DAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHoC,8BAAgB;AhJIpD,AyGAA,A1DAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLN0C,aADL;AhJQrC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHgC,qBAAS;AhJIzC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLTqC,WAFL;AhJYhC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLH4B,oBAAU;AhJItC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLbgC,SAtBJ;AhJoC5B,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHwB,oBAAY;AhJIpC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLH4B,qBAAW,KADH;AhJKpC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLH4B,oBAAU,KAFF;AhJMpC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLH4B,kBAAQ,KAHA;AhJOpC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLH4B,mBAAS,KAJD;AhJQpC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLH4B,iBAAO;AhJInC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLToC,SAjCR;AhJ2C5B,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHwB,kBAAU,IAxCN;AhJ4C5B,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHwB,gBAAQ,KAzCJ;AhJ6C5B,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHwB,iBAAS,CA1CL;AhJ8C5B,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHwB,oBAAY,KA3CR;AhJ+C5B,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHwB,iBAAS;AhJIjC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLH4B,oBAAU,KADL;AhJKjC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLH4B,oBAAU,EAFL;AhJMjC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLH4B,uBAAa;AhJIzC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHgC,qBAAS;AhJIzC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLLyC;AhJMzC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLTiC,SA5CL;AhJsD5B,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHwB,mBAAW,KAnDP;AhJuD5B,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHwB,gBAAQ;AhJIhC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLxD4B,OApIC;AhJ6L7B,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHoB,gBAAU;AhJI9B,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A1BAA,AuLHwB,mBAAW;AhJInC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A6JH4B,oBAAU,IADH;AhJKnC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A6JH4B,kBAAQ,GAFD;AhJMnC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A6JH4B,oBAAU;AhJItC,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A6JPmC,SADL;AhJS9B,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A6JHwB,iBAAS,CANH;AhJU9B,A+CAA,A9CAA,AqIAA,A3KAA,AwBAA,A6JHwB,iBAAS;AhJIjC,A+CAA,A9CAA,AqIAA,A3KAA,AqLX8B,OA1LD;AhJsM7B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHoB,iBAAW;AhJI/B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHwB,kBAAU;AhJIlC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,oBAAU,IADJ;AhJKlC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,0BAAgB;AhJI5C,A+CAA,A9CAA,AqIAA,A3KAA,AqLNkC,SADH;AhJQ/B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHwB,iBAAS;AhJIjC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,iBAAO,CADF;AhJKjC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,iBAAO;AhJInC,A+CAA,A9CAA,AqIAA,A3KAA,AqLNiC,SALF;AhJY/B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHwB,qBAAa;AhJIrC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,mBAAS,CADA;AhJKrC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,oBAAU,IAFD;AhJMrC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,mBAAS,CAHA;AhJOrC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,kBAAQ,KAJC;AhJQrC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,qBAAW,MALF;AhJSrC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,0BAAgB,CANP;AhJUrC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,wBAAc;AhJI1C,A+CAA,A9CAA,AqIAA,A3KAA,AqLXqC;AhJYrC,A+CAA,A9CAA,AqIAA,A3KAA,AqLrB+B,OAnMF;AhJyN7B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHoB,0BAAoB,KAtNX;AhJ0N7B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHoB,gBAAU;AhJI9B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHwB,kBAAU;AhJIlC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,oBAAU,KADJ;AhJKlC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,0BAAgB;AhJI5C,A+CAA,A9CAA,AqIAA,A3KAA,AqLNkC,SADJ;AhJQ9B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHwB,iBAAS,CALH;AhJS9B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHwB,qBAAa;AhJIrC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,oBAAU,KADD;AhJKrC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,mBAAS,CAFA;AhJMrC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,kBAAQ;AhJIpC,A+CAA,A9CAA,AqIAA,A3KAA,AqLPqC,SANP;AhJc9B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHwB,qBAAa,WAXP;AhJe9B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHwB,gBAAQ;AhJIhC,A+CAA,A9CAA,AqIAA,A3KAA,AqLhB8B,OAvND;AhJwO7B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHoB,gBAAU;AhJI9B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHwB,gBAAQ,CADF;AhJK9B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHwB,iBAAS;AhJIjC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,mBAAS;AhJIrC,A+CAA,A9CAA,AqIAA,A3KAA,AqLLiC,SAFH;AhJQ9B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHwB,kBAAU,KALJ;AhJS9B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHwB,kBAAU;AhJIlC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,eAAK,CADC;AhJKlC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,eAAK;AhJIjC,A+CAA,A9CAA,AqIAA,A3KAA,AqLNkC;AhJOlC,A+CAA,A9CAA,AqIAA,A3KAA,AqLb8B,OArOD;AhJmP7B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHoB,eAAS;AhJI7B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHwB,mBAAW,EADN;AhJK7B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHwB,gBAAQ;AhJIhC,A+CAA,A9CAA,AqIAA,A3KAA,AqLN6B,OAhPA;AhJuP7B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHoB,cAAQ;AhJI5B,A+CAA,A9CAA,AqIAA,A3KAA,AqLHwB,kBAAU;AhJIlC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,oBAAU,IADJ;AhJKlC,A+CAA,A9CAA,AqIAA,A3KAA,AqLH4B,0BAAgB;AjGI5C,A9CAA,AqIAA,A3KAA,AqLNkC,SADN;AjGQ5B,A9CAA,AqIAA,A3KAA,AqLHwB,iBAAS;AjGIjC,A9CAA,AqIAA,A3KAA,AqLH4B,iBAAO,CADF;AjGKjC,A9CAA,AqIAA,A3KAA,AqLH4B,iBAAO;AjGInC,A9CAA,AqIAA,A3KAA,AqLNiC,SALL;AjGY5B,A9CAA,AqIAA,A3KAA,AqLHwB,qBAAa;AjGIrC,A9CAA,AqIAA,A3KAA,AqLH4B,mBAAS,CADA;AjGKrC,A9CAA,AqIAA,A3KAA,AqLH4B,oBAAU,KAFD;AjGMrC,A9CAA,AqIAA,A3KAA,AqLH4B,mBAAS,CAHA;AjGOrC,A9CAA,AqIAA,A3KAA,AqLH4B,kBAAQ,KAJC;AjGQrC,A9CAA,AqIAA,A3KAA,AqLH4B,qBAAW,MALF;AjGSrC,A9CAA,AqIAA,A3KAA,AqLH4B,0BAAgB,GANP;AjGUrC,A9CAA,AqIAA,A3KAA,AqLH4B,wBAAc;AjGI1C,A9CAA,AqIAA,A3KAA,AqLXqC;AjGYrC,A9CAA,AqIAA,A3KAA,AqLrB4B,OApPC;AjG0Q7B,A9CAA,AqIAA,A3KAA,AqLHoB,gBAAU;AjGI9B,A9CAA,AqIAA,A3KAA,AqLHwB,iBAAS;AjGIjC,A9CAA,AqIAA,A3KAA,AqLL8B,OAvQD;AjG6Q7B,A9CAA,AqIAA,A3KAA,AqLHoB,iBAAW;AjGI/B,A9CAA,AqIAA,A3KAA,AqLHwB,iBAAS;AjGIjC,A9CAA,AqIAA,A3KAA,AqLH4B,oBAAU,KADL;AjGKjC,A9CAA,AqIAA,A3KAA,AqLH4B,uBAAa,IAFR;AjGMjC,A9CAA,AqIAA,A3KAA,AqLH4B,qBAAW;AjGIvC,A9CAA,AqIAA,A3KAA,AqLPiC,SADF;AjGS/B,A9CAA,AqIAA,A3KAA,AqLHwB,qBAAa;AjGIrC,A9CAA,AqIAA,A3KAA,AqLH4B,oBAAU,KADD;AjGKrC,A9CAA,AqIAA,A3KAA,AqLH4B,uBAAa,IAFJ;AjGMrC,A9CAA,AqIAA,A3KAA,AqLH4B,qBAAW;AjGIvC,A9CAA,AqIAA,A3KAA,AqLPqC;AjGQrC,A9CAA,AqIAA,A3KAA,AqLd+B;AjGe/B,A9CAA,AqIAA,A3KAA,AqLzR6B,KAtHS;AjGgZtC,A9CAA,AqIAA,A3KAA,AqLHgB,mBAAe,IA7YO;AjGiZtC,A9CAA,AqIAA,A3KAA,AqLHgB,8BAA0B,IA9YJ;AjGkZtC,A9CAA,AqIAA,A3KAA,AqLHgB,kBAAc,EA/YQ;AjGmZtC,A9CAA,AqIAA,A3KAA,AqLHgB,cAAU;AjGI1B,A9CAA,AqIAA,A3KAA,AqLpZsC,GADlC,EAmZK,KAnZL,CAmZW,UAAC,KAAD,EAAM;AjGGrB,A9CAA,AqIAA,A3KAA,AqLFY,IAAA,OAAO,CAAC,KAAR,CAAc,KAAd;AjGGZ,A9CAA,AqIAA,A3KAA,AqLFS,GArZL;AjGwZJ,A9CAA,AqIAA,A3KAA,AqLFC,CAxZD;AjG2ZA,A9CAA,AqIAA,A3KAA;AoFCA,A9CAA,AqIAA,A3KAA;AoFCA,A9CAA,AqIAA,A3KAA;AoFCA,A9CAA,AqIAA,A3KAA;AoFCA,A9CAA,AqIAA,A3KAA;AoFCA,A9CAA,AqIAA,A3KAA;AoFCA,A9CAA,AqIAA,A3KAA;AoFCA,A9CAA,AqIAA,A3KAA;AoFCA,A9CAA,AqIAA,A3KAA;AoFCA,A9CAA,AqIAA,A3KAA;AoFCA,A9CAA,AqIAA,A3KAA;AoFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA,AuFAA;AvFCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initPjs = void 0;\nconst initPjs = (main) => {\n    const particlesJS = (tagId, options) => {\n        return main.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        main.loadJSON(tagId, pathConfigJson).then((container) => {\n            if (container) {\n                callback(container);\n            }\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        main.setOnClickHandler(callback);\n    };\n    const pJSDom = main.dom();\n    return { particlesJS, pJSDom };\n};\nexports.initPjs = initPjs;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SquareDrawer = void 0;\nclass SquareDrawer {\n    getSidesCount() {\n        return 4;\n    }\n    draw(context, particle, radius) {\n        context.rect(-radius, -radius, radius * 2, radius * 2);\n    }\n}\nexports.SquareDrawer = SquareDrawer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutModeDirection = void 0;\nvar OutModeDirection;\n(function (OutModeDirection) {\n    OutModeDirection[\"bottom\"] = \"bottom\";\n    OutModeDirection[\"left\"] = \"left\";\n    OutModeDirection[\"right\"] = \"right\";\n    OutModeDirection[\"top\"] = \"top\";\n})(OutModeDirection = exports.OutModeDirection || (exports.OutModeDirection = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MoveDirection = void 0;\nvar MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n})(MoveDirection = exports.MoveDirection || (exports.MoveDirection = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RotateDirection = void 0;\nvar RotateDirection;\n(function (RotateDirection) {\n    RotateDirection[\"clockwise\"] = \"clockwise\";\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    RotateDirection[\"random\"] = \"random\";\n})(RotateDirection = exports.RotateDirection || (exports.RotateDirection = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./MoveDirection\"), exports);\n__exportStar(require(\"./RotateDirection\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Vector = void 0;\nclass Vector {\n    constructor(x, y) {\n        let defX, defY;\n        if (y === undefined) {\n            if (typeof x === \"number\") {\n                throw new Error(\"tsParticles - Vector not initialized correctly\");\n            }\n            const coords = x;\n            [defX, defY] = [coords.x, coords.y];\n        }\n        else {\n            [defX, defY] = [x, y];\n        }\n        this.x = defX;\n        this.y = defY;\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    add(v) {\n        return Vector.create(this.x + v.x, this.y + v.y);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n    }\n    sub(v) {\n        return Vector.create(this.x - v.x, this.y - v.y);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n    }\n    mult(n) {\n        return Vector.create(this.x * n, this.y * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n    }\n    div(n) {\n        return Vector.create(this.x / n, this.y / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    getLengthSq() {\n        return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    manhattanDistanceTo(v) {\n        return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n    copy() {\n        return Vector.clone(this);\n    }\n    setTo(velocity) {\n        this.x = velocity.x;\n        this.y = velocity.y;\n    }\n    rotate(angle) {\n        return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\nexports.Vector = Vector;\nVector.origin = Vector.create(0, 0);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberUtils = void 0;\nconst Directions_1 = require(\"../Enums/Directions\");\nconst Vector_1 = require(\"../Core/Particle/Vector\");\nclass NumberUtils {\n    static clamp(num, min, max) {\n        return Math.min(Math.max(num, min), max);\n    }\n    static mix(comp1, comp2, weight1, weight2) {\n        return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n    }\n    static randomInRange(r) {\n        const max = NumberUtils.getRangeMax(r);\n        let min = NumberUtils.getRangeMin(r);\n        if (max === min) {\n            min = 0;\n        }\n        return Math.random() * (max - min) + min;\n    }\n    static getRangeValue(value) {\n        return typeof value === \"number\" ? value : NumberUtils.randomInRange(value);\n    }\n    static getRangeMin(value) {\n        return typeof value === \"number\" ? value : value.min;\n    }\n    static getRangeMax(value) {\n        return typeof value === \"number\" ? value : value.max;\n    }\n    static setRangeValue(source, value) {\n        if (source === value || (value === undefined && typeof source === \"number\")) {\n            return source;\n        }\n        const min = NumberUtils.getRangeMin(source), max = NumberUtils.getRangeMax(source);\n        return value !== undefined\n            ? {\n                min: Math.min(min, value),\n                max: Math.max(max, value),\n            }\n            : NumberUtils.setRangeValue(min, max);\n    }\n    static getValue(options) {\n        const random = options.random;\n        const { enable, minimumValue } = typeof random === \"boolean\" ? { enable: random, minimumValue: 0 } : random;\n        return enable\n            ? NumberUtils.getRangeValue(NumberUtils.setRangeValue(options.value, minimumValue))\n            : NumberUtils.getRangeValue(options.value);\n    }\n    static getDistances(pointA, pointB) {\n        const dx = pointA.x - pointB.x;\n        const dy = pointA.y - pointB.y;\n        return { dx: dx, dy: dy, distance: Math.sqrt(dx * dx + dy * dy) };\n    }\n    static getDistance(pointA, pointB) {\n        return NumberUtils.getDistances(pointA, pointB).distance;\n    }\n    static getParticleBaseVelocity(direction) {\n        const baseVelocity = Vector_1.Vector.origin;\n        baseVelocity.length = 1;\n        switch (direction) {\n            case Directions_1.MoveDirection.top:\n                baseVelocity.angle = -Math.PI / 2;\n                break;\n            case Directions_1.MoveDirection.topRight:\n                baseVelocity.angle = -Math.PI / 4;\n                break;\n            case Directions_1.MoveDirection.right:\n                baseVelocity.angle = 0;\n                break;\n            case Directions_1.MoveDirection.bottomRight:\n                baseVelocity.angle = Math.PI / 4;\n                break;\n            case Directions_1.MoveDirection.bottom:\n                baseVelocity.angle = Math.PI / 2;\n                break;\n            case Directions_1.MoveDirection.bottomLeft:\n                baseVelocity.angle = (3 * Math.PI) / 4;\n                break;\n            case Directions_1.MoveDirection.left:\n                baseVelocity.angle = Math.PI;\n                break;\n            case Directions_1.MoveDirection.topLeft:\n                baseVelocity.angle = (-3 * Math.PI) / 4;\n                break;\n            case Directions_1.MoveDirection.none:\n            default:\n                baseVelocity.angle = Math.random() * Math.PI * 2;\n                break;\n        }\n        return baseVelocity;\n    }\n    static rotateVelocity(velocity, angle) {\n        return {\n            horizontal: velocity.horizontal * Math.cos(angle) - velocity.vertical * Math.sin(angle),\n            vertical: velocity.horizontal * Math.sin(angle) + velocity.vertical * Math.cos(angle),\n        };\n    }\n    static collisionVelocity(v1, v2, m1, m2) {\n        return Vector_1.Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n    }\n}\nexports.NumberUtils = NumberUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Utils = void 0;\nconst OutModeDirection_1 = require(\"../Enums/Directions/OutModeDirection\");\nconst NumberUtils_1 = require(\"./NumberUtils\");\nfunction rectSideBounce(pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor) {\n    const res = { bounced: false };\n    if (pOtherSide.min >= rectOtherSide.min &&\n        pOtherSide.min <= rectOtherSide.max &&\n        pOtherSide.max >= rectOtherSide.min &&\n        pOtherSide.max <= rectOtherSide.max) {\n        if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n            (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n            res.velocity = velocity * -factor;\n            res.bounced = true;\n        }\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    if (selectors instanceof Array) {\n        for (const selector of selectors) {\n            if (element.matches(selector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    else {\n        return element.matches(selectors);\n    }\n}\nclass Utils {\n    static isSsr() {\n        return typeof window === \"undefined\" || !window;\n    }\n    static get animate() {\n        return Utils.isSsr()\n            ? (callback) => setTimeout(callback)\n            : (callback) => (window.requestAnimationFrame ||\n                window.webkitRequestAnimationFrame ||\n                window.mozRequestAnimationFrame ||\n                window.oRequestAnimationFrame ||\n                window.msRequestAnimationFrame ||\n                window.setTimeout)(callback);\n    }\n    static get cancelAnimation() {\n        return Utils.isSsr()\n            ? (handle) => clearTimeout(handle)\n            : (handle) => (window.cancelAnimationFrame ||\n                window.webkitCancelRequestAnimationFrame ||\n                window.mozCancelRequestAnimationFrame ||\n                window.oCancelRequestAnimationFrame ||\n                window.msCancelRequestAnimationFrame ||\n                window.clearTimeout)(handle);\n    }\n    static isInArray(value, array) {\n        return value === array || (array instanceof Array && array.indexOf(value) > -1);\n    }\n    static loadFont(character) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield document.fonts.load(`${character.weight} 36px '${character.font}'`);\n            }\n            catch (_a) {\n            }\n        });\n    }\n    static arrayRandomIndex(array) {\n        return Math.floor(Math.random() * array.length);\n    }\n    static itemFromArray(array, index, useIndex = true) {\n        const fixedIndex = index !== undefined && useIndex ? index % array.length : Utils.arrayRandomIndex(array);\n        return array[fixedIndex];\n    }\n    static isPointInside(point, size, radius, direction) {\n        return Utils.areBoundsInside(Utils.calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size, direction);\n    }\n    static areBoundsInside(bounds, size, direction) {\n        let inside = true;\n        if (!direction || direction === OutModeDirection_1.OutModeDirection.bottom) {\n            inside = bounds.top < size.height;\n        }\n        if (inside && (!direction || direction === OutModeDirection_1.OutModeDirection.left)) {\n            inside = bounds.right > 0;\n        }\n        if (inside && (!direction || direction === OutModeDirection_1.OutModeDirection.right)) {\n            inside = bounds.left < size.width;\n        }\n        if (inside && (!direction || direction === OutModeDirection_1.OutModeDirection.top)) {\n            inside = bounds.bottom > 0;\n        }\n        return inside;\n    }\n    static calculateBounds(point, radius) {\n        return {\n            bottom: point.y + radius,\n            left: point.x - radius,\n            right: point.x + radius,\n            top: point.y - radius,\n        };\n    }\n    static loadImage(source) {\n        return new Promise((resolve, reject) => {\n            if (!source) {\n                reject(\"Error tsParticles - No image.src\");\n                return;\n            }\n            const image = {\n                source: source,\n                type: source.substr(source.length - 3),\n            };\n            const img = new Image();\n            img.addEventListener(\"load\", () => {\n                image.element = img;\n                resolve(image);\n            });\n            img.addEventListener(\"error\", () => {\n                reject(`Error tsParticles - loading image: ${source}`);\n            });\n            img.src = source;\n        });\n    }\n    static downloadSvgImage(source) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!source) {\n                throw new Error(\"Error tsParticles - No image.src\");\n            }\n            const image = {\n                source: source,\n                type: source.substr(source.length - 3),\n            };\n            if (image.type !== \"svg\") {\n                return Utils.loadImage(source);\n            }\n            const response = yield fetch(image.source);\n            if (!response.ok) {\n                throw new Error(\"Error tsParticles - Image not found\");\n            }\n            image.svgData = yield response.text();\n            return image;\n        });\n    }\n    static deepExtend(destination, ...sources) {\n        for (const source of sources) {\n            if (source === undefined || source === null) {\n                continue;\n            }\n            if (typeof source !== \"object\") {\n                destination = source;\n                continue;\n            }\n            const sourceIsArray = Array.isArray(source);\n            if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n                destination = [];\n            }\n            else if (!sourceIsArray &&\n                (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n                destination = {};\n            }\n            for (const key in source) {\n                if (key === \"__proto__\") {\n                    continue;\n                }\n                const sourceDict = source;\n                const value = sourceDict[key];\n                const isObject = typeof value === \"object\";\n                const destDict = destination;\n                destDict[key] =\n                    isObject && Array.isArray(value)\n                        ? value.map((v) => Utils.deepExtend(destDict[key], v))\n                        : Utils.deepExtend(destDict[key], value);\n            }\n        }\n        return destination;\n    }\n    static isDivModeEnabled(mode, divs) {\n        return divs instanceof Array\n            ? !!divs.find((t) => t.enable && Utils.isInArray(mode, t.mode))\n            : Utils.isInArray(mode, divs.mode);\n    }\n    static divModeExecute(mode, divs, callback) {\n        if (divs instanceof Array) {\n            for (const div of divs) {\n                const divMode = div.mode;\n                const divEnabled = div.enable;\n                if (divEnabled && Utils.isInArray(mode, divMode)) {\n                    Utils.singleDivModeExecute(div, callback);\n                }\n            }\n        }\n        else {\n            const divMode = divs.mode;\n            const divEnabled = divs.enable;\n            if (divEnabled && Utils.isInArray(mode, divMode)) {\n                Utils.singleDivModeExecute(divs, callback);\n            }\n        }\n    }\n    static singleDivModeExecute(div, callback) {\n        const selectors = div.selectors;\n        if (selectors instanceof Array) {\n            for (const selector of selectors) {\n                callback(selector, div);\n            }\n        }\n        else {\n            callback(selectors, div);\n        }\n    }\n    static divMode(divs, element) {\n        if (!element || !divs) {\n            return;\n        }\n        if (divs instanceof Array) {\n            return divs.find((d) => checkSelector(element, d.selectors));\n        }\n        else if (checkSelector(element, divs.selectors)) {\n            return divs;\n        }\n    }\n    static circleBounceDataFromParticle(p) {\n        return {\n            position: p.getPosition(),\n            radius: p.getRadius(),\n            mass: p.getMass(),\n            velocity: p.velocity,\n            factor: {\n                horizontal: NumberUtils_1.NumberUtils.getValue(p.options.bounce.horizontal),\n                vertical: NumberUtils_1.NumberUtils.getValue(p.options.bounce.vertical),\n            },\n        };\n    }\n    static circleBounce(p1, p2) {\n        const xVelocityDiff = p1.velocity.x;\n        const yVelocityDiff = p1.velocity.y;\n        const pos1 = p1.position;\n        const pos2 = p2.position;\n        const xDist = pos2.x - pos1.x;\n        const yDist = pos2.y - pos1.y;\n        if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n            const angle = -Math.atan2(pos2.y - pos1.y, pos2.x - pos1.x);\n            const m1 = p1.mass;\n            const m2 = p2.mass;\n            const u1 = p1.velocity.rotate(angle);\n            const u2 = p2.velocity.rotate(angle);\n            const v1 = NumberUtils_1.NumberUtils.collisionVelocity(u1, u2, m1, m2);\n            const v2 = NumberUtils_1.NumberUtils.collisionVelocity(u2, u1, m1, m2);\n            const vFinal1 = v1.rotate(-angle);\n            const vFinal2 = v2.rotate(-angle);\n            p1.velocity.x = vFinal1.x * p1.factor.horizontal;\n            p1.velocity.y = vFinal1.y * p1.factor.vertical;\n            p2.velocity.x = vFinal2.x * p2.factor.horizontal;\n            p2.velocity.y = vFinal2.y * p2.factor.vertical;\n        }\n    }\n    static rectBounce(particle, divBounds) {\n        const pPos = particle.getPosition();\n        const size = particle.getRadius();\n        const bounds = Utils.calculateBounds(pPos, size);\n        const resH = rectSideBounce({\n            min: bounds.left,\n            max: bounds.right,\n        }, {\n            min: bounds.top,\n            max: bounds.bottom,\n        }, {\n            min: divBounds.left,\n            max: divBounds.right,\n        }, {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        }, particle.velocity.x, NumberUtils_1.NumberUtils.getValue(particle.options.bounce.horizontal));\n        if (resH.bounced) {\n            if (resH.velocity !== undefined) {\n                particle.velocity.x = resH.velocity;\n            }\n            if (resH.position !== undefined) {\n                particle.position.x = resH.position;\n            }\n        }\n        const resV = rectSideBounce({\n            min: bounds.top,\n            max: bounds.bottom,\n        }, {\n            min: bounds.left,\n            max: bounds.right,\n        }, {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        }, {\n            min: divBounds.left,\n            max: divBounds.right,\n        }, particle.velocity.y, NumberUtils_1.NumberUtils.getValue(particle.options.bounce.vertical));\n        if (resV.bounced) {\n            if (resV.velocity !== undefined) {\n                particle.velocity.y = resV.velocity;\n            }\n            if (resV.position !== undefined) {\n                particle.position.y = resV.position;\n            }\n        }\n    }\n}\nexports.Utils = Utils;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Constants = void 0;\nclass Constants {\n}\nexports.Constants = Constants;\nConstants.canvasClass = \"tsparticles-canvas-el\";\nConstants.randomColorValue = \"random\";\nConstants.midColorValue = \"mid\";\nConstants.touchEndEvent = \"touchend\";\nConstants.mouseDownEvent = \"mousedown\";\nConstants.mouseUpEvent = \"mouseup\";\nConstants.mouseMoveEvent = \"mousemove\";\nConstants.touchStartEvent = \"touchstart\";\nConstants.touchMoveEvent = \"touchmove\";\nConstants.mouseLeaveEvent = \"mouseleave\";\nConstants.mouseOutEvent = \"mouseout\";\nConstants.touchCancelEvent = \"touchcancel\";\nConstants.resizeEvent = \"resize\";\nConstants.visibilityChangeEvent = \"visibilitychange\";\nConstants.noPolygonDataLoaded = \"No polygon data loaded.\";\nConstants.noPolygonFound = \"No polygon found, you need to specify SVG url in config.\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorUtils = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst Constants_1 = require(\"./Constants\");\nconst NumberUtils_1 = require(\"./NumberUtils\");\nfunction hue2rgb(p, q, t) {\n    let tCalc = t;\n    if (tCalc < 0) {\n        tCalc += 1;\n    }\n    if (tCalc > 1) {\n        tCalc -= 1;\n    }\n    if (tCalc < 1 / 6) {\n        return p + (q - p) * 6 * tCalc;\n    }\n    if (tCalc < 1 / 2) {\n        return q;\n    }\n    if (tCalc < 2 / 3) {\n        return p + (q - p) * (2 / 3 - tCalc) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    if (input.startsWith(\"rgb\")) {\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n    else if (input.startsWith(\"hsl\")) {\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? ColorUtils.hslaToRgba({\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n    else if (input.startsWith(\"hsv\")) {\n        const regex = /hsva?\\(\\s*(\\d+)°\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? ColorUtils.hsvaToRgba({\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                s: parseInt(result[2], 10),\n                v: parseInt(result[3], 10),\n            })\n            : undefined;\n    }\n    else {\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n        const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n            return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n        });\n        const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n        const result = regex.exec(hexFixed);\n        return result\n            ? {\n                a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n                b: parseInt(result[3], 16),\n                g: parseInt(result[2], 16),\n                r: parseInt(result[1], 16),\n            }\n            : undefined;\n    }\n}\nclass ColorUtils {\n    static colorToRgb(input, index, useIndex = true) {\n        var _a, _b, _c;\n        if (input === undefined) {\n            return;\n        }\n        const color = typeof input === \"string\" ? { value: input } : input;\n        let res;\n        if (typeof color.value === \"string\") {\n            if (color.value === Constants_1.Constants.randomColorValue) {\n                res = ColorUtils.getRandomRgbColor();\n            }\n            else {\n                res = ColorUtils.stringToRgb(color.value);\n            }\n        }\n        else {\n            if (color.value instanceof Array) {\n                const colorSelected = Utils_1.Utils.itemFromArray(color.value, index, useIndex);\n                res = ColorUtils.colorToRgb({ value: colorSelected });\n            }\n            else {\n                const colorValue = color.value;\n                const rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n                if (rgbColor.r !== undefined) {\n                    res = rgbColor;\n                }\n                else {\n                    const hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n                    if (hslColor.h !== undefined && hslColor.l !== undefined) {\n                        res = ColorUtils.hslToRgb(hslColor);\n                    }\n                    else {\n                        const hsvColor = (_c = colorValue.hsv) !== null && _c !== void 0 ? _c : color.value;\n                        if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n                            res = ColorUtils.hsvToRgb(hsvColor);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    static colorToHsl(color, index, useIndex = true) {\n        const rgb = ColorUtils.colorToRgb(color, index, useIndex);\n        return rgb !== undefined ? ColorUtils.rgbToHsl(rgb) : undefined;\n    }\n    static rgbToHsl(color) {\n        const r1 = color.r / 255;\n        const g1 = color.g / 255;\n        const b1 = color.b / 255;\n        const max = Math.max(r1, g1, b1);\n        const min = Math.min(r1, g1, b1);\n        const res = {\n            h: 0,\n            l: (max + min) / 2,\n            s: 0,\n        };\n        if (max != min) {\n            res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n            res.h =\n                r1 === max\n                    ? (g1 - b1) / (max - min)\n                    : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n        }\n        res.l *= 100;\n        res.s *= 100;\n        res.h *= 60;\n        if (res.h < 0) {\n            res.h += 360;\n        }\n        return res;\n    }\n    static stringToAlpha(input) {\n        var _a;\n        return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n    }\n    static stringToRgb(input) {\n        return stringToRgba(input);\n    }\n    static hslToRgb(hsl) {\n        const result = { b: 0, g: 0, r: 0 };\n        const hslPercent = {\n            h: hsl.h / 360,\n            l: hsl.l / 100,\n            s: hsl.s / 100,\n        };\n        if (hslPercent.s === 0) {\n            result.b = hslPercent.l;\n            result.g = hslPercent.l;\n            result.r = hslPercent.l;\n        }\n        else {\n            const q = hslPercent.l < 0.5\n                ? hslPercent.l * (1 + hslPercent.s)\n                : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n            const p = 2 * hslPercent.l - q;\n            result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n            result.g = hue2rgb(p, q, hslPercent.h);\n            result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n        }\n        result.r = Math.floor(result.r * 255);\n        result.g = Math.floor(result.g * 255);\n        result.b = Math.floor(result.b * 255);\n        return result;\n    }\n    static hslaToRgba(hsla) {\n        const rgbResult = ColorUtils.hslToRgb(hsla);\n        return {\n            a: hsla.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static hslToHsv(hsl) {\n        const l = hsl.l / 100, sl = hsl.s / 100;\n        const v = l + sl * Math.min(l, 1 - l), sv = !v ? 0 : 2 * (1 - l / v);\n        return {\n            h: hsl.h,\n            s: sv * 100,\n            v: v * 100,\n        };\n    }\n    static hslaToHsva(hsla) {\n        const hsvResult = ColorUtils.hslToHsv(hsla);\n        return {\n            a: hsla.a,\n            h: hsvResult.h,\n            s: hsvResult.s,\n            v: hsvResult.v,\n        };\n    }\n    static hsvToHsl(hsv) {\n        const v = hsv.v / 100, sv = hsv.s / 100;\n        const l = v * (1 - sv / 2), sl = l === 0 || l === 1 ? 0 : (v - l) / Math.min(l, 1 - l);\n        return {\n            h: hsv.h,\n            l: l * 100,\n            s: sl * 100,\n        };\n    }\n    static hsvaToHsla(hsva) {\n        const hslResult = ColorUtils.hsvToHsl(hsva);\n        return {\n            a: hsva.a,\n            h: hslResult.h,\n            l: hslResult.l,\n            s: hslResult.s,\n        };\n    }\n    static hsvToRgb(hsv) {\n        const result = { b: 0, g: 0, r: 0 };\n        const hsvPercent = {\n            h: hsv.h / 60,\n            s: hsv.s / 100,\n            v: hsv.v / 100,\n        };\n        const c = hsvPercent.v * hsvPercent.s, x = c * (1 - Math.abs((hsvPercent.h % 2) - 1));\n        let tempRgb;\n        if (hsvPercent.h >= 0 && hsvPercent.h <= 1) {\n            tempRgb = {\n                r: c,\n                g: x,\n                b: 0,\n            };\n        }\n        else if (hsvPercent.h > 1 && hsvPercent.h <= 2) {\n            tempRgb = {\n                r: x,\n                g: c,\n                b: 0,\n            };\n        }\n        else if (hsvPercent.h > 2 && hsvPercent.h <= 3) {\n            tempRgb = {\n                r: 0,\n                g: c,\n                b: x,\n            };\n        }\n        else if (hsvPercent.h > 3 && hsvPercent.h <= 4) {\n            tempRgb = {\n                r: 0,\n                g: x,\n                b: c,\n            };\n        }\n        else if (hsvPercent.h > 4 && hsvPercent.h <= 5) {\n            tempRgb = {\n                r: x,\n                g: 0,\n                b: c,\n            };\n        }\n        else if (hsvPercent.h > 5 && hsvPercent.h <= 6) {\n            tempRgb = {\n                r: c,\n                g: 0,\n                b: x,\n            };\n        }\n        if (tempRgb) {\n            const m = hsvPercent.v - c;\n            result.r = Math.floor((tempRgb.r + m) * 255);\n            result.g = Math.floor((tempRgb.g + m) * 255);\n            result.b = Math.floor((tempRgb.b + m) * 255);\n        }\n        return result;\n    }\n    static hsvaToRgba(hsva) {\n        const rgbResult = ColorUtils.hsvToRgb(hsva);\n        return {\n            a: hsva.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static rgbToHsv(rgb) {\n        const rgbPercent = {\n            r: rgb.r / 255,\n            g: rgb.g / 255,\n            b: rgb.b / 255,\n        }, xMax = Math.max(rgbPercent.r, rgbPercent.g, rgbPercent.b), xMin = Math.min(rgbPercent.r, rgbPercent.g, rgbPercent.b), v = xMax, c = xMax - xMin;\n        let h = 0;\n        if (v === rgbPercent.r) {\n            h = 60 * ((rgbPercent.g - rgbPercent.b) / c);\n        }\n        else if (v === rgbPercent.g) {\n            h = 60 * (2 + (rgbPercent.b - rgbPercent.r) / c);\n        }\n        else if (v === rgbPercent.b) {\n            h = 60 * (4 + (rgbPercent.r - rgbPercent.g) / c);\n        }\n        const s = !v ? 0 : c / v;\n        return {\n            h,\n            s: s * 100,\n            v: v * 100,\n        };\n    }\n    static rgbaToHsva(rgba) {\n        const hsvResult = ColorUtils.rgbToHsv(rgba);\n        return {\n            a: rgba.a,\n            h: hsvResult.h,\n            s: hsvResult.s,\n            v: hsvResult.v,\n        };\n    }\n    static getRandomRgbColor(min) {\n        const fixedMin = min !== null && min !== void 0 ? min : 0;\n        return {\n            b: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n            g: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n            r: Math.floor(NumberUtils_1.NumberUtils.randomInRange(NumberUtils_1.NumberUtils.setRangeValue(fixedMin, 256))),\n        };\n    }\n    static getStyleFromRgb(color, opacity) {\n        return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static getStyleFromHsl(color, opacity) {\n        return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static getStyleFromHsv(color, opacity) {\n        return ColorUtils.getStyleFromHsl(ColorUtils.hsvToHsl(color), opacity);\n    }\n    static mix(color1, color2, size1, size2) {\n        let rgb1 = color1;\n        let rgb2 = color2;\n        if (rgb1.r === undefined) {\n            rgb1 = ColorUtils.hslToRgb(color1);\n        }\n        if (rgb2.r === undefined) {\n            rgb2 = ColorUtils.hslToRgb(color2);\n        }\n        return {\n            b: NumberUtils_1.NumberUtils.mix(rgb1.b, rgb2.b, size1, size2),\n            g: NumberUtils_1.NumberUtils.mix(rgb1.g, rgb2.g, size1, size2),\n            r: NumberUtils_1.NumberUtils.mix(rgb1.r, rgb2.r, size1, size2),\n        };\n    }\n    static replaceColorSvg(image, color, opacity) {\n        if (!image.svgData) {\n            return \"\";\n        }\n        const svgXml = image.svgData;\n        const rgbHex = /#([0-9A-F]{3,6})/gi;\n        return svgXml.replace(rgbHex, () => ColorUtils.getStyleFromHsl(color, opacity));\n    }\n    static getLinkColor(p1, p2, linkColor) {\n        var _a, _b;\n        if (linkColor === Constants_1.Constants.randomColorValue) {\n            return ColorUtils.getRandomRgbColor();\n        }\n        else if (linkColor === \"mid\") {\n            const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor();\n            const destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n            if (sourceColor && destColor && p2) {\n                return ColorUtils.mix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n            }\n            else {\n                const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n                if (hslColor) {\n                    return ColorUtils.hslToRgb(hslColor);\n                }\n            }\n        }\n        else {\n            return linkColor;\n        }\n    }\n    static getLinkRandomColor(optColor, blink, consent) {\n        const color = typeof optColor === \"string\" ? optColor : optColor.value;\n        if (color === Constants_1.Constants.randomColorValue) {\n            if (consent) {\n                return ColorUtils.colorToRgb({\n                    value: color,\n                });\n            }\n            else if (blink) {\n                return Constants_1.Constants.randomColorValue;\n            }\n            else {\n                return Constants_1.Constants.midColorValue;\n            }\n        }\n        else {\n            return ColorUtils.colorToRgb({\n                value: color,\n            });\n        }\n    }\n    static getHslFromAnimation(animation) {\n        return animation !== undefined\n            ? {\n                h: animation.h.value,\n                s: animation.s.value,\n                l: animation.l.value,\n            }\n            : undefined;\n    }\n}\nexports.ColorUtils = ColorUtils;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CanvasUtils = void 0;\nconst ColorUtils_1 = require(\"./ColorUtils\");\nconst NumberUtils_1 = require(\"./NumberUtils\");\nfunction drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nfunction drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nclass CanvasUtils {\n    static paintBase(context, dimension, baseColor) {\n        context.save();\n        context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n        context.fillRect(0, 0, dimension.width, dimension.height);\n        context.restore();\n    }\n    static clear(context, dimension) {\n        context.clearRect(0, 0, dimension.width, dimension.height);\n    }\n    static drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n        let drawn = false;\n        if (NumberUtils_1.NumberUtils.getDistance(begin, end) <= maxDistance) {\n            drawLine(context, begin, end);\n            drawn = true;\n        }\n        else if (warp) {\n            let pi1;\n            let pi2;\n            const endNE = {\n                x: end.x - canvasSize.width,\n                y: end.y,\n            };\n            const d1 = NumberUtils_1.NumberUtils.getDistances(begin, endNE);\n            if (d1.distance <= maxDistance) {\n                const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n                pi1 = { x: 0, y: yi };\n                pi2 = { x: canvasSize.width, y: yi };\n            }\n            else {\n                const endSW = {\n                    x: end.x,\n                    y: end.y - canvasSize.height,\n                };\n                const d2 = NumberUtils_1.NumberUtils.getDistances(begin, endSW);\n                if (d2.distance <= maxDistance) {\n                    const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                    const xi = -yi / (d2.dy / d2.dx);\n                    pi1 = { x: xi, y: 0 };\n                    pi2 = { x: xi, y: canvasSize.height };\n                }\n                else {\n                    const endSE = {\n                        x: end.x - canvasSize.width,\n                        y: end.y - canvasSize.height,\n                    };\n                    const d3 = NumberUtils_1.NumberUtils.getDistances(begin, endSE);\n                    if (d3.distance <= maxDistance) {\n                        const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                        const xi = -yi / (d3.dy / d3.dx);\n                        pi1 = { x: xi, y: yi };\n                        pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                    }\n                }\n            }\n            if (pi1 && pi2) {\n                drawLine(context, begin, pi1);\n                drawLine(context, end, pi2);\n                drawn = true;\n            }\n        }\n        if (!drawn) {\n            return;\n        }\n        context.lineWidth = width;\n        if (backgroundMask) {\n            context.globalCompositeOperation = composite;\n        }\n        context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\n        if (shadow.enable) {\n            const shadowColor = ColorUtils_1.ColorUtils.colorToRgb(shadow.color);\n            if (shadowColor) {\n                context.shadowBlur = shadow.blur;\n                context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\n            }\n        }\n        context.stroke();\n    }\n    static drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n        drawTriangle(context, pos1, pos2, pos3);\n        if (backgroundMask) {\n            context.globalCompositeOperation = composite;\n        }\n        context.fillStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorTriangle, opacityTriangle);\n        context.fill();\n    }\n    static drawConnectLine(context, width, lineStyle, begin, end) {\n        context.save();\n        drawLine(context, begin, end);\n        context.lineWidth = width;\n        context.strokeStyle = lineStyle;\n        context.stroke();\n        context.restore();\n    }\n    static gradient(context, p1, p2, opacity) {\n        const gradStop = Math.floor(p2.getRadius() / p1.getRadius());\n        const color1 = p1.getFillColor();\n        const color2 = p2.getFillColor();\n        if (!color1 || !color2) {\n            return;\n        }\n        const sourcePos = p1.getPosition();\n        const destPos = p2.getPosition();\n        const midRgb = ColorUtils_1.ColorUtils.mix(color1, color2, p1.getRadius(), p2.getRadius());\n        const grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n        grad.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromHsl(color1, opacity));\n        grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.ColorUtils.getStyleFromRgb(midRgb, opacity));\n        grad.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromHsl(color2, opacity));\n        return grad;\n    }\n    static drawGrabLine(context, width, begin, end, colorLine, opacity) {\n        context.save();\n        drawLine(context, begin, end);\n        context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\n        context.lineWidth = width;\n        context.stroke();\n        context.restore();\n    }\n    static drawLight(container, context, mousePos) {\n        const lightOptions = container.actualOptions.interactivity.modes.light.area;\n        context.beginPath();\n        context.arc(mousePos.x, mousePos.y, lightOptions.radius, 0, 2 * Math.PI);\n        const gradientAmbientLight = context.createRadialGradient(mousePos.x, mousePos.y, 0, mousePos.x, mousePos.y, lightOptions.radius);\n        const gradient = lightOptions.gradient;\n        const gradientRgb = {\n            start: ColorUtils_1.ColorUtils.colorToRgb(gradient.start),\n            stop: ColorUtils_1.ColorUtils.colorToRgb(gradient.stop),\n        };\n        if (!gradientRgb.start || !gradientRgb.stop) {\n            return;\n        }\n        gradientAmbientLight.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromRgb(gradientRgb.start));\n        gradientAmbientLight.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromRgb(gradientRgb.stop));\n        context.fillStyle = gradientAmbientLight;\n        context.fill();\n    }\n    static drawParticleShadow(container, context, particle, mousePos) {\n        const pos = particle.getPosition();\n        const shadowOptions = container.actualOptions.interactivity.modes.light.shadow;\n        context.save();\n        const radius = particle.getRadius();\n        const sides = particle.sides;\n        const full = (Math.PI * 2) / sides;\n        const angle = -particle.rotate.value + Math.PI / 4;\n        const factor = 1;\n        const dots = [];\n        for (let i = 0; i < sides; i++) {\n            dots.push({\n                x: pos.x + radius * Math.sin(angle + full * i) * factor,\n                y: pos.y + radius * Math.cos(angle + full * i) * factor,\n            });\n        }\n        const points = [];\n        const shadowLength = shadowOptions.length;\n        for (const dot of dots) {\n            const dotAngle = Math.atan2(mousePos.y - dot.y, mousePos.x - dot.x);\n            const endX = dot.x + shadowLength * Math.sin(-dotAngle - Math.PI / 2);\n            const endY = dot.y + shadowLength * Math.cos(-dotAngle - Math.PI / 2);\n            points.push({\n                endX: endX,\n                endY: endY,\n                startX: dot.x,\n                startY: dot.y,\n            });\n        }\n        const shadowRgb = ColorUtils_1.ColorUtils.colorToRgb(shadowOptions.color);\n        if (!shadowRgb) {\n            return;\n        }\n        const shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowRgb);\n        for (let i = points.length - 1; i >= 0; i--) {\n            const n = i == points.length - 1 ? 0 : i + 1;\n            context.beginPath();\n            context.moveTo(points[i].startX, points[i].startY);\n            context.lineTo(points[n].startX, points[n].startY);\n            context.lineTo(points[n].endX, points[n].endY);\n            context.lineTo(points[i].endX, points[i].endY);\n            context.fillStyle = shadowColor;\n            context.fill();\n        }\n        context.restore();\n    }\n    static drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow) {\n        const pos = particle.getPosition();\n        context.save();\n        context.translate(pos.x, pos.y);\n        context.beginPath();\n        const angle = particle.rotate.value + (particle.options.rotate.path ? particle.velocity.angle : 0);\n        if (angle !== 0) {\n            context.rotate(angle);\n        }\n        if (backgroundMask) {\n            context.globalCompositeOperation = composite;\n        }\n        const shadowColor = particle.shadowColor;\n        if (shadow.enable && shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\n            context.shadowOffsetX = shadow.offset.x;\n            context.shadowOffsetY = shadow.offset.y;\n        }\n        if (fillColorValue) {\n            context.fillStyle = fillColorValue;\n        }\n        const stroke = particle.stroke;\n        context.lineWidth = particle.strokeWidth;\n        if (strokeColorValue) {\n            context.strokeStyle = strokeColorValue;\n        }\n        CanvasUtils.drawShape(container, context, particle, radius, opacity, delta);\n        if (stroke.width > 0) {\n            context.stroke();\n        }\n        if (particle.close) {\n            context.closePath();\n        }\n        if (particle.fill) {\n            context.fill();\n        }\n        context.restore();\n        context.save();\n        context.translate(pos.x, pos.y);\n        if (angle !== 0) {\n            context.rotate(angle);\n        }\n        if (backgroundMask) {\n            context.globalCompositeOperation = composite;\n        }\n        CanvasUtils.drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n        context.restore();\n    }\n    static drawShape(container, context, particle, radius, opacity, delta) {\n        if (!particle.shape) {\n            return;\n        }\n        const drawer = container.drawers.get(particle.shape);\n        if (!drawer) {\n            return;\n        }\n        drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n    }\n    static drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n        if (!particle.shape) {\n            return;\n        }\n        const drawer = container.drawers.get(particle.shape);\n        if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n            return;\n        }\n        drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n    }\n    static drawPlugin(context, plugin, delta) {\n        if (plugin.draw !== undefined) {\n            context.save();\n            plugin.draw(context, delta);\n            context.restore();\n        }\n    }\n}\nexports.CanvasUtils = CanvasUtils;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Range = void 0;\nclass Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\nexports.Range = Range;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Circle = void 0;\nconst Range_1 = require(\"./Range\");\nclass Circle extends Range_1.Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        const d = Math.pow(point.x - this.position.x, 2) + Math.pow(point.y - this.position.y, 2);\n        return d <= this.radius * this.radius;\n    }\n    intersects(range) {\n        const rect = range;\n        const circle = range;\n        const pos1 = this.position;\n        const pos2 = range.position;\n        const xDist = Math.abs(pos2.x - pos1.x);\n        const yDist = Math.abs(pos2.y - pos1.y);\n        const r = this.radius;\n        if (circle.radius !== undefined) {\n            const rSum = r + circle.radius;\n            const dist = Math.sqrt(xDist * xDist + yDist + yDist);\n            return rSum > dist;\n        }\n        else if (rect.size !== undefined) {\n            const w = rect.size.width;\n            const h = rect.size.height;\n            const edges = Math.pow(xDist - w, 2) + Math.pow(yDist - h, 2);\n            if (xDist > r + w || yDist > r + h) {\n                return false;\n            }\n            if (xDist <= w || yDist <= h) {\n                return true;\n            }\n            return edges <= r * r;\n        }\n        return false;\n    }\n}\nexports.Circle = Circle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Rectangle = void 0;\nconst Range_1 = require(\"./Range\");\nclass Rectangle extends Range_1.Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width;\n        const h = this.size.height;\n        const pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        const rect = range;\n        const circle = range;\n        const w = this.size.width;\n        const h = this.size.height;\n        const pos1 = this.position;\n        const pos2 = range.position;\n        if (circle.radius !== undefined) {\n            return circle.intersects(this);\n        }\n        else if (rect.size !== undefined) {\n            const size2 = rect.size;\n            const w2 = size2.width;\n            const h2 = size2.height;\n            return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n        }\n        return false;\n    }\n}\nexports.Rectangle = Rectangle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CircleWarp = void 0;\nconst Rectangle_1 = require(\"./Rectangle\");\nconst Circle_1 = require(\"./Circle\");\nclass CircleWarp extends Circle_1.Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = {\n            height: canvasSize.height,\n            width: canvasSize.width,\n        };\n    }\n    contains(point) {\n        if (super.contains(point)) {\n            return true;\n        }\n        const posNE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y,\n        };\n        if (super.contains(posNE)) {\n            return true;\n        }\n        const posSE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y - this.canvasSize.height,\n        };\n        if (super.contains(posSE)) {\n            return true;\n        }\n        const posSW = {\n            x: point.x,\n            y: point.y - this.canvasSize.height,\n        };\n        return super.contains(posSW);\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range;\n        const circle = range;\n        const newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle_1.Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle_1.Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\nexports.CircleWarp = CircleWarp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClickMode = void 0;\nvar ClickMode;\n(function (ClickMode) {\n    ClickMode[\"attract\"] = \"attract\";\n    ClickMode[\"bubble\"] = \"bubble\";\n    ClickMode[\"push\"] = \"push\";\n    ClickMode[\"remove\"] = \"remove\";\n    ClickMode[\"repulse\"] = \"repulse\";\n    ClickMode[\"pause\"] = \"pause\";\n    ClickMode[\"trail\"] = \"trail\";\n})(ClickMode = exports.ClickMode || (exports.ClickMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DestroyMode = void 0;\nvar DestroyMode;\n(function (DestroyMode) {\n    DestroyMode[\"none\"] = \"none\";\n    DestroyMode[\"split\"] = \"split\";\n})(DestroyMode = exports.DestroyMode || (exports.DestroyMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DivMode = void 0;\nvar DivMode;\n(function (DivMode) {\n    DivMode[\"bounce\"] = \"bounce\";\n    DivMode[\"bubble\"] = \"bubble\";\n    DivMode[\"repulse\"] = \"repulse\";\n})(DivMode = exports.DivMode || (exports.DivMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HoverMode = void 0;\nvar HoverMode;\n(function (HoverMode) {\n    HoverMode[\"attract\"] = \"attract\";\n    HoverMode[\"bounce\"] = \"bounce\";\n    HoverMode[\"bubble\"] = \"bubble\";\n    HoverMode[\"connect\"] = \"connect\";\n    HoverMode[\"grab\"] = \"grab\";\n    HoverMode[\"light\"] = \"light\";\n    HoverMode[\"repulse\"] = \"repulse\";\n    HoverMode[\"slow\"] = \"slow\";\n    HoverMode[\"trail\"] = \"trail\";\n})(HoverMode = exports.HoverMode || (exports.HoverMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollisionMode = void 0;\nvar CollisionMode;\n(function (CollisionMode) {\n    CollisionMode[\"absorb\"] = \"absorb\";\n    CollisionMode[\"bounce\"] = \"bounce\";\n    CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode = exports.CollisionMode || (exports.CollisionMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutMode = void 0;\nvar OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"bounceHorizontal\"] = \"bounce-horizontal\";\n    OutMode[\"bounceVertical\"] = \"bounce-vertical\";\n    OutMode[\"none\"] = \"none\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n    OutMode[\"split\"] = \"split\";\n})(OutMode = exports.OutMode || (exports.OutMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SizeMode = void 0;\nvar SizeMode;\n(function (SizeMode) {\n    SizeMode[\"precise\"] = \"precise\";\n    SizeMode[\"percent\"] = \"percent\";\n})(SizeMode = exports.SizeMode || (exports.SizeMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ThemeMode = void 0;\nvar ThemeMode;\n(function (ThemeMode) {\n    ThemeMode[\"any\"] = \"any\";\n    ThemeMode[\"dark\"] = \"dark\";\n    ThemeMode[\"light\"] = \"light\";\n})(ThemeMode = exports.ThemeMode || (exports.ThemeMode = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./ClickMode\"), exports);\n__exportStar(require(\"./DestroyMode\"), exports);\n__exportStar(require(\"./DivMode\"), exports);\n__exportStar(require(\"./HoverMode\"), exports);\n__exportStar(require(\"./CollisionMode\"), exports);\n__exportStar(require(\"./OutMode\"), exports);\n__exportStar(require(\"./SizeMode\"), exports);\n__exportStar(require(\"./ThemeMode\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnimationStatus = void 0;\nvar AnimationStatus;\n(function (AnimationStatus) {\n    AnimationStatus[AnimationStatus[\"increasing\"] = 0] = \"increasing\";\n    AnimationStatus[AnimationStatus[\"decreasing\"] = 1] = \"decreasing\";\n})(AnimationStatus = exports.AnimationStatus || (exports.AnimationStatus = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DestroyType = void 0;\nvar DestroyType;\n(function (DestroyType) {\n    DestroyType[\"none\"] = \"none\";\n    DestroyType[\"max\"] = \"max\";\n    DestroyType[\"min\"] = \"min\";\n})(DestroyType = exports.DestroyType || (exports.DestroyType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProcessBubbleType = void 0;\nvar ProcessBubbleType;\n(function (ProcessBubbleType) {\n    ProcessBubbleType[\"color\"] = \"color\";\n    ProcessBubbleType[\"opacity\"] = \"opacity\";\n    ProcessBubbleType[\"size\"] = \"size\";\n})(ProcessBubbleType = exports.ProcessBubbleType || (exports.ProcessBubbleType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShapeType = void 0;\nvar ShapeType;\n(function (ShapeType) {\n    ShapeType[\"char\"] = \"char\";\n    ShapeType[\"character\"] = \"character\";\n    ShapeType[\"circle\"] = \"circle\";\n    ShapeType[\"edge\"] = \"edge\";\n    ShapeType[\"image\"] = \"image\";\n    ShapeType[\"images\"] = \"images\";\n    ShapeType[\"line\"] = \"line\";\n    ShapeType[\"polygon\"] = \"polygon\";\n    ShapeType[\"square\"] = \"square\";\n    ShapeType[\"star\"] = \"star\";\n    ShapeType[\"triangle\"] = \"triangle\";\n})(ShapeType = exports.ShapeType || (exports.ShapeType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StartValueType = void 0;\nvar StartValueType;\n(function (StartValueType) {\n    StartValueType[\"max\"] = \"max\";\n    StartValueType[\"min\"] = \"min\";\n    StartValueType[\"random\"] = \"random\";\n})(StartValueType = exports.StartValueType || (exports.StartValueType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DivType = void 0;\nvar DivType;\n(function (DivType) {\n    DivType[\"circle\"] = \"circle\";\n    DivType[\"rectangle\"] = \"rectangle\";\n})(DivType = exports.DivType || (exports.DivType = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./DestroyType\"), exports);\n__exportStar(require(\"./ProcessBubbleType\"), exports);\n__exportStar(require(\"./ShapeType\"), exports);\n__exportStar(require(\"./StartValueType\"), exports);\n__exportStar(require(\"./DivType\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InteractivityDetect = void 0;\nvar InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect = exports.InteractivityDetect || (exports.InteractivityDetect = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Directions\"), exports);\n__exportStar(require(\"./Modes\"), exports);\n__exportStar(require(\"./AnimationStatus\"), exports);\n__exportStar(require(\"./Types\"), exports);\n__exportStar(require(\"./InteractivityDetect\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventListeners = void 0;\nconst Enums_1 = require(\"../Enums\");\nconst Constants_1 = require(\"./Constants\");\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nclass EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchStartHandler = (e) => this.mouseTouchMove(e);\n        this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchEndHandler = () => this.mouseTouchFinish();\n        this.mouseLeaveHandler = () => this.mouseTouchFinish();\n        this.touchCancelHandler = () => this.mouseTouchFinish();\n        this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n        this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n        this.mouseDownHandler = () => this.mouseDown();\n        this.visibilityChangeHandler = () => this.handleVisibilityChange();\n        this.resizeHandler = () => this.handleWindowResize();\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    manageListeners(add) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const detectType = options.interactivity.detectsOn;\n        let mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n        if (detectType === Enums_1.InteractivityDetect.window) {\n            container.interactivity.element = window;\n            mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n        }\n        else if (detectType === Enums_1.InteractivityDetect.parent && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n            }\n            else {\n                manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n            }\n            manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n        }\n        if (document) {\n            manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n        }\n    }\n    handleWindowResize() {\n        var _a;\n        (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize();\n    }\n    handleVisibilityChange() {\n        const container = this.container;\n        const options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw();\n            }\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container;\n        const options = container.actualOptions;\n        if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"mouse\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === Enums_1.InteractivityDetect.parent) {\n                const source = mouseEvent.target;\n                const target = mouseEvent.currentTarget;\n                const canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect();\n                    const targetRect = target.getBoundingClientRect();\n                    const canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                if (mouseEvent.target === container.canvas.element) {\n                    pos = {\n                        x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                        y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                    };\n                }\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e;\n            const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n            const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (interactivity === undefined) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchClick(e) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.clickPositionValid !== undefined) {\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    doMouseTouchClick(e) {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (this.canPush) {\n            const mousePos = container.interactivity.mouse.position;\n            if (mousePos) {\n                container.interactivity.mouse.clickPosition = {\n                    x: mousePos.x,\n                    y: mousePos.y,\n                };\n            }\n            else {\n                return;\n            }\n            container.interactivity.mouse.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            if (onClick.mode instanceof Array) {\n                for (const mode of onClick.mode) {\n                    this.handleClickMode(mode);\n                }\n            }\n            else {\n                this.handleClickMode(onClick.mode);\n            }\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const pushNb = options.interactivity.modes.push.quantity;\n        const removeNb = options.interactivity.modes.remove.quantity;\n        switch (mode) {\n            case Enums_1.ClickMode.push: {\n                if (pushNb > 0) {\n                    container.particles.push(pushNb, container.interactivity.mouse);\n                }\n                break;\n            }\n            case Enums_1.ClickMode.remove:\n                container.particles.removeQuantity(removeNb);\n                break;\n            case Enums_1.ClickMode.bubble:\n                container.bubble.clicking = true;\n                break;\n            case Enums_1.ClickMode.repulse:\n                container.repulse.clicking = true;\n                container.repulse.count = 0;\n                for (const particle of container.repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                container.repulse.particles = [];\n                container.repulse.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.repulse.clicking = false;\n                    }\n                }, options.interactivity.modes.repulse.duration * 1000);\n                break;\n            case Enums_1.ClickMode.attract:\n                container.attract.clicking = true;\n                container.attract.count = 0;\n                for (const particle of container.attract.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                container.attract.particles = [];\n                container.attract.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.attract.clicking = false;\n                    }\n                }, options.interactivity.modes.attract.duration * 1000);\n                break;\n            case Enums_1.ClickMode.pause:\n                if (container.getAnimationStatus()) {\n                    container.pause();\n                }\n                else {\n                    container.play();\n                }\n                break;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n}\nexports.EventListeners = EventListeners;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Plugins = void 0;\nconst plugins = [];\nconst presets = new Map();\nconst drawers = new Map();\nconst pathGenerators = new Map();\nclass Plugins {\n    static getPlugin(plugin) {\n        return plugins.find((t) => t.id === plugin);\n    }\n    static addPlugin(plugin) {\n        if (!Plugins.getPlugin(plugin.id)) {\n            plugins.push(plugin);\n        }\n    }\n    static getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    static loadOptions(options, sourceOptions) {\n        for (const plugin of plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    static getPreset(preset) {\n        return presets.get(preset);\n    }\n    static addPreset(presetKey, options) {\n        if (!Plugins.getPreset(presetKey)) {\n            presets.set(presetKey, options);\n        }\n    }\n    static addShapeDrawer(type, drawer) {\n        if (!Plugins.getShapeDrawer(type)) {\n            drawers.set(type, drawer);\n        }\n    }\n    static getShapeDrawer(type) {\n        return drawers.get(type);\n    }\n    static getSupportedShapes() {\n        return drawers.keys();\n    }\n    static getPathGenerator(type) {\n        return pathGenerators.get(type);\n    }\n    static addPathGenerator(type, pathGenerator) {\n        if (!Plugins.getPathGenerator(type)) {\n            pathGenerators.set(type, pathGenerator);\n        }\n    }\n}\nexports.Plugins = Plugins;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Point = void 0;\nclass Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\nexports.Point = Point;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QuadTree = void 0;\nconst Rectangle_1 = require(\"./Rectangle\");\nconst Circle_1 = require(\"./Circle\");\nconst CircleWarp_1 = require(\"./CircleWarp\");\nclass QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this.points = [];\n        this.divided = false;\n    }\n    subdivide() {\n        const x = this.rectangle.position.x;\n        const y = this.rectangle.position.y;\n        const w = this.rectangle.size.width;\n        const h = this.rectangle.size.height;\n        const capacity = this.capacity;\n        this.northEast = new QuadTree(new Rectangle_1.Rectangle(x, y, w / 2, h / 2), capacity);\n        this.northWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this.southEast = new QuadTree(new Rectangle_1.Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this.southWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this.divided = true;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this.points.length < this.capacity) {\n            this.points.push(point);\n            return true;\n        }\n        if (!this.divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    queryCircle(position, radius) {\n        return this.query(new Circle_1.Circle(position.x, position.y, radius));\n    }\n    queryCircleWarp(position, radius, containerOrSize) {\n        const container = containerOrSize;\n        const size = containerOrSize;\n        return this.query(new CircleWarp_1.CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n    }\n    queryRectangle(position, size) {\n        return this.query(new Rectangle_1.Rectangle(position.x, position.y, size.width, size.height));\n    }\n    query(range, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        else {\n            for (const p of this.points) {\n                if (!range.contains(p.position)) {\n                    continue;\n                }\n                res.push(p.particle);\n            }\n            if (this.divided) {\n                (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n                (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n                (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n                (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n            }\n        }\n        return res;\n    }\n}\nexports.QuadTree = QuadTree;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./CanvasUtils\"), exports);\n__exportStar(require(\"./Circle\"), exports);\n__exportStar(require(\"./CircleWarp\"), exports);\n__exportStar(require(\"./ColorUtils\"), exports);\n__exportStar(require(\"./Constants\"), exports);\n__exportStar(require(\"./EventListeners\"), exports);\n__exportStar(require(\"./NumberUtils\"), exports);\n__exportStar(require(\"./Plugins\"), exports);\n__exportStar(require(\"./Point\"), exports);\n__exportStar(require(\"./QuadTree\"), exports);\n__exportStar(require(\"./Range\"), exports);\n__exportStar(require(\"./Rectangle\"), exports);\n__exportStar(require(\"./Utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextDrawer = void 0;\nconst Utils_1 = require(\"../Utils\");\nconst Enums_1 = require(\"../Enums\");\nclass TextDrawer {\n    getSidesCount() {\n        return 12;\n    }\n    init(container) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = container.actualOptions;\n            if (Utils_1.Utils.isInArray(Enums_1.ShapeType.char, options.particles.shape.type) ||\n                Utils_1.Utils.isInArray(Enums_1.ShapeType.character, options.particles.shape.type)) {\n                const shapeOptions = ((_a = options.particles.shape.options[Enums_1.ShapeType.character]) !== null && _a !== void 0 ? _a : options.particles.shape.options[Enums_1.ShapeType.char]);\n                if (shapeOptions instanceof Array) {\n                    for (const character of shapeOptions) {\n                        yield Utils_1.Utils.loadFont(character);\n                    }\n                }\n                else {\n                    if (shapeOptions !== undefined) {\n                        yield Utils_1.Utils.loadFont(shapeOptions);\n                    }\n                }\n            }\n        });\n    }\n    draw(context, particle, radius) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text =\n                textData instanceof Array ? Utils_1.Utils.itemFromArray(textData, particle.randomIndexData) : textData;\n        }\n        const text = textParticle.text;\n        const style = character.style;\n        const weight = character.weight;\n        const size = Math.round(radius) * 2;\n        const font = character.font;\n        const fill = particle.fill;\n        const offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n    }\n}\nexports.TextDrawer = TextDrawer;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageDrawer = void 0;\nconst Utils_1 = require(\"../Utils\");\nconst Enums_1 = require(\"../Enums\");\nclass ImageDrawer {\n    constructor() {\n        this.images = [];\n    }\n    getSidesCount() {\n        return 12;\n    }\n    getImages(container) {\n        const containerImages = this.images.filter((t) => t.id === container.id);\n        if (!containerImages.length) {\n            this.images.push({\n                id: container.id,\n                images: [],\n            });\n            return this.getImages(container);\n        }\n        return containerImages[0];\n    }\n    addImage(container, image) {\n        const containerImages = this.getImages(container);\n        containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n    init(container) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = container.actualOptions;\n            const shapeOptions = options.particles.shape;\n            if (!Utils_1.Utils.isInArray(Enums_1.ShapeType.image, shapeOptions.type) &&\n                !Utils_1.Utils.isInArray(Enums_1.ShapeType.images, shapeOptions.type)) {\n                return;\n            }\n            const imageOptions = (_a = shapeOptions.options[Enums_1.ShapeType.images]) !== null && _a !== void 0 ? _a : shapeOptions.options[Enums_1.ShapeType.image];\n            if (imageOptions instanceof Array) {\n                for (const optionsImage of imageOptions) {\n                    yield this.loadImageShape(container, optionsImage);\n                }\n            }\n            else {\n                yield this.loadImageShape(container, imageOptions);\n            }\n        });\n    }\n    destroy() {\n        this.images = [];\n    }\n    loadImageShape(container, imageShape) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const image = imageShape.replaceColor\n                    ? yield Utils_1.Utils.downloadSvgImage(imageShape.src)\n                    : yield Utils_1.Utils.loadImage(imageShape.src);\n                if (image) {\n                    this.addImage(container, image);\n                }\n            }\n            catch (_a) {\n                console.warn(`tsParticles error - ${imageShape.src} not found`);\n            }\n        });\n    }\n    draw(context, particle, radius, opacity) {\n        var _a, _b;\n        if (!context) {\n            return;\n        }\n        const image = particle.image;\n        const element = (_a = image === null || image === void 0 ? void 0 : image.data) === null || _a === void 0 ? void 0 : _a.element;\n        if (!element) {\n            return;\n        }\n        const ratio = (_b = image === null || image === void 0 ? void 0 : image.ratio) !== null && _b !== void 0 ? _b : 1;\n        const pos = {\n            x: -radius,\n            y: -radius,\n        };\n        if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n            context.globalAlpha = opacity;\n        }\n        context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n            context.globalAlpha = 1;\n        }\n    }\n}\nexports.ImageDrawer = ImageDrawer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LineDrawer = void 0;\nclass LineDrawer {\n    getSidesCount() {\n        return 1;\n    }\n    draw(context, particle, radius) {\n        context.moveTo(0, -radius / 2);\n        context.lineTo(0, radius / 2);\n    }\n}\nexports.LineDrawer = LineDrawer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CircleDrawer = void 0;\nclass CircleDrawer {\n    getSidesCount() {\n        return 12;\n    }\n    draw(context, particle, radius) {\n        context.arc(0, 0, radius, 0, Math.PI * 2, false);\n    }\n}\nexports.CircleDrawer = CircleDrawer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolygonDrawerBase = void 0;\nclass PolygonDrawerBase {\n    getSidesCount(particle) {\n        var _a, _b;\n        const polygon = particle.shapeData;\n        return (_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5;\n    }\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius);\n        const side = this.getSidesData(particle, radius);\n        const sideCount = side.count.numerator * side.count.denominator;\n        const decimalSides = side.count.numerator / side.count.denominator;\n        const interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\n        const interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n}\nexports.PolygonDrawerBase = PolygonDrawerBase;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TriangleDrawer = void 0;\nconst PolygonDrawerBase_1 = require(\"./PolygonDrawerBase\");\nclass TriangleDrawer extends PolygonDrawerBase_1.PolygonDrawerBase {\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n}\nexports.TriangleDrawer = TriangleDrawer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StarDrawer = void 0;\nclass StarDrawer {\n    getSidesCount(particle) {\n        var _a, _b;\n        const star = particle.shapeData;\n        return (_b = (_a = star === null || star === void 0 ? void 0 : star.sides) !== null && _a !== void 0 ? _a : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _b !== void 0 ? _b : 5;\n    }\n    draw(context, particle, radius) {\n        var _a;\n        const star = particle.shapeData;\n        const sides = this.getSidesCount(particle);\n        const inset = (_a = star === null || star === void 0 ? void 0 : star.inset) !== null && _a !== void 0 ? _a : 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n}\nexports.StarDrawer = StarDrawer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolygonDrawer = void 0;\nconst PolygonDrawerBase_1 = require(\"./PolygonDrawerBase\");\nclass PolygonDrawer extends PolygonDrawerBase_1.PolygonDrawerBase {\n    getSidesData(particle, radius) {\n        var _a, _b;\n        const polygon = particle.shapeData;\n        const sides = (_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n    getCenter(particle, radius) {\n        const sides = this.getSidesCount(particle);\n        return {\n            x: -radius / (sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n}\nexports.PolygonDrawer = PolygonDrawer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nconst Utils_1 = require(\"../Utils\");\nclass Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        this.resize();\n        const options = this.container.actualOptions;\n        const element = this.element;\n        if (element) {\n            if (options.fullScreen.enable) {\n                this.originalStyle = Utils_1.Utils.deepExtend({}, element.style);\n                element.style.position = \"fixed\";\n                element.style.zIndex = options.fullScreen.zIndex.toString(10);\n                element.style.top = \"0\";\n                element.style.left = \"0\";\n                element.style.width = \"100%\";\n                element.style.height = \"100%\";\n            }\n            else {\n                element.style.position = (_b = (_a = this.originalStyle) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : \"\";\n                element.style.zIndex = (_d = (_c = this.originalStyle) === null || _c === void 0 ? void 0 : _c.zIndex) !== null && _d !== void 0 ? _d : \"\";\n                element.style.top = (_f = (_e = this.originalStyle) === null || _e === void 0 ? void 0 : _e.top) !== null && _f !== void 0 ? _f : \"\";\n                element.style.left = (_h = (_g = this.originalStyle) === null || _g === void 0 ? void 0 : _g.left) !== null && _h !== void 0 ? _h : \"\";\n                element.style.width = (_k = (_j = this.originalStyle) === null || _j === void 0 ? void 0 : _j.width) !== null && _k !== void 0 ? _k : \"\";\n                element.style.height = (_m = (_l = this.originalStyle) === null || _l === void 0 ? void 0 : _l.height) !== null && _m !== void 0 ? _m : \"\";\n            }\n        }\n        const cover = options.backgroundMask.cover;\n        const color = cover.color;\n        const trail = options.particles.move.trail;\n        const coverRgb = Utils_1.ColorUtils.colorToRgb(color);\n        this.coverColor =\n            coverRgb !== undefined\n                ? {\n                    r: coverRgb.r,\n                    g: coverRgb.g,\n                    b: coverRgb.b,\n                    a: cover.opacity,\n                }\n                : undefined;\n        this.trailFillColor = Utils_1.ColorUtils.colorToRgb(trail.fillColor);\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Utils_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = Utils_1.Utils.deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        if (this.context) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        if (!this.context) {\n            return;\n        }\n        if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n            this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.coverColor, this.coverColor.a));\n        }\n        else {\n            this.paintBase();\n        }\n    }\n    clear() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else if (this.context) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    }\n    windowResize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        this.resize();\n        container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        const pxRatio = container.retina.pixelRatio;\n        const size = container.canvas.size;\n        const oldSize = {\n            width: size.width,\n            height: size.height,\n        };\n        size.width = this.element.offsetWidth * pxRatio;\n        size.height = this.element.offsetHeight * pxRatio;\n        this.element.width = size.width;\n        this.element.height = size.height;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawConnectLine(p1, p2) {\n        var _a;\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        const lineStyle = this.lineStyle(p1, p2);\n        if (!lineStyle) {\n            return;\n        }\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        Utils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        var _a;\n        const container = this.container;\n        const ctx = container.canvas.context;\n        if (!ctx) {\n            return;\n        }\n        const beginPos = particle.getPosition();\n        Utils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n    }\n    drawParticleShadow(particle, mousePos) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawParticleShadow(this.container, this.context, particle, mousePos);\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link1.destination;\n        const p3 = link2.destination;\n        const triangleOptions = p1.options.links.triangles;\n        const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const pos3 = p3.getPosition();\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        if (Utils_1.NumberUtils.getDistance(pos1, pos2) > container.retina.linksDistance ||\n            Utils_1.NumberUtils.getDistance(pos3, pos2) > container.retina.linksDistance ||\n            Utils_1.NumberUtils.getDistance(pos3, pos1) > container.retina.linksDistance) {\n            return;\n        }\n        let colorTriangle = Utils_1.ColorUtils.colorToRgb(triangleOptions.color);\n        if (!colorTriangle) {\n            const linksOptions = p1.options.links;\n            const linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors.get(linksOptions.id)\n                : container.particles.linksColor;\n            colorTriangle = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n        }\n        if (!colorTriangle) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n    }\n    drawLinkLine(p1, link) {\n        var _a, _b;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link.destination;\n        let opacity = link.opacity;\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        let colorLine;\n        const twinkle = p1.options.twinkle.lines;\n        if (twinkle.enable) {\n            const twinkleFreq = twinkle.frequency;\n            const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n            const twinkling = Math.random() < twinkleFreq;\n            if (twinkling && twinkleRgb !== undefined) {\n                colorLine = twinkleRgb;\n                opacity = twinkle.opacity;\n            }\n        }\n        if (!colorLine) {\n            const linksOptions = p1.options.links;\n            const linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors.get(linksOptions.id)\n                : container.particles.linksColor;\n            colorLine = Utils_1.ColorUtils.getLinkColor(p1, p2, linkColor);\n        }\n        if (!colorLine) {\n            return;\n        }\n        const width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n        const maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n        Utils_1.CanvasUtils.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d;\n        if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n            return;\n        }\n        const pfColor = particle.getFillColor();\n        const psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        const options = this.container.actualOptions;\n        const pOptions = particle.options;\n        const twinkle = pOptions.twinkle.particles;\n        const twinkleFreq = twinkle.frequency;\n        const twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n        const twinkling = twinkle.enable && Math.random() < twinkleFreq;\n        const radius = particle.getRadius();\n        const opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n        const infectionStage = particle.infecter.infectionStage;\n        const infection = options.infection;\n        const infectionStages = infection.stages;\n        const infectionColor = infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n        const infectionRgb = Utils_1.ColorUtils.colorToRgb(infectionColor);\n        const fColor = twinkling && twinkleRgb !== undefined\n            ? twinkleRgb\n            : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : (pfColor ? Utils_1.ColorUtils.hslToRgb(pfColor) : undefined);\n        const sColor = twinkling && twinkleRgb !== undefined\n            ? twinkleRgb\n            : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : (psColor ? Utils_1.ColorUtils.hslToRgb(psColor) : undefined);\n        const fillColorValue = fColor !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(fColor, opacity) : undefined;\n        if (!this.context || (!fillColorValue && !sColor)) {\n            return;\n        }\n        const strokeColorValue = sColor !== undefined\n            ? Utils_1.ColorUtils.getStyleFromRgb(sColor, (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity)\n            : fillColorValue;\n        this.drawParticleLinks(particle);\n        if (radius > 0) {\n            Utils_1.CanvasUtils.drawParticle(this.container, this.context, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius, opacity, particle.options.shadow);\n        }\n    }\n    drawParticleLinks(particle) {\n        if (!this.context) {\n            return;\n        }\n        const container = this.container;\n        const particles = container.particles;\n        const pOptions = particle.options;\n        if (particle.links.length > 0) {\n            this.context.save();\n            const p1Links = particle.links.filter((l) => {\n                const linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n                return linkFreq <= pOptions.links.frequency;\n            });\n            for (const link of p1Links) {\n                const p2 = link.destination;\n                if (pOptions.links.triangles.enable) {\n                    const links = p1Links.map((l) => l.destination);\n                    const vertices = p2.links.filter((t) => {\n                        const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                        return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n                    });\n                    if (vertices.length) {\n                        for (const vertex of vertices) {\n                            const p3 = vertex.destination;\n                            const triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n                            if (triangleFreq > pOptions.links.triangles.frequency) {\n                                continue;\n                            }\n                            this.drawLinkTriangle(particle, link, vertex);\n                        }\n                    }\n                }\n                if (link.opacity > 0 && container.retina.linksWidth > 0) {\n                    this.drawLinkLine(particle, link);\n                }\n            }\n            this.context.restore();\n        }\n    }\n    drawPlugin(plugin, delta) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawPlugin(this.context, plugin, delta);\n    }\n    drawLight(mousePos) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawLight(this.container, this.context, mousePos);\n    }\n    paintBase(baseColor) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n    }\n    lineStyle(p1, p2) {\n        if (!this.context) {\n            return;\n        }\n        const options = this.container.actualOptions;\n        const connectOptions = options.interactivity.modes.connect;\n        return Utils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.links.opacity);\n    }\n    initBackground() {\n        const options = this.container.actualOptions;\n        const background = options.background;\n        const element = this.element;\n        const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = Utils_1.ColorUtils.colorToRgb(background.color);\n            elementStyle.backgroundColor = color ? Utils_1.ColorUtils.getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n}\nexports.Canvas = Canvas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Updater = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nconst OutModeDirection_1 = require(\"../../Enums/Directions/OutModeDirection\");\nfunction bounceHorizontal(data) {\n    if (data.outMode === Enums_1.OutMode.bounce ||\n        data.outMode === Enums_1.OutMode.bounceHorizontal ||\n        data.outMode === \"bounceHorizontal\" ||\n        data.outMode === Enums_1.OutMode.split) {\n        const velocity = data.particle.velocity.x;\n        let bounced = false;\n        if ((data.direction === OutModeDirection_1.OutModeDirection.right && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n            (data.direction === OutModeDirection_1.OutModeDirection.left && data.bounds.left <= 0 && velocity < 0)) {\n            const newVelocity = Utils_1.NumberUtils.getValue(data.particle.options.bounce.horizontal);\n            data.particle.velocity.x *= -newVelocity;\n            bounced = true;\n        }\n        if (!bounced) {\n            return;\n        }\n        const minPos = data.offset.x + data.size;\n        if (data.bounds.right >= data.canvasSize.width) {\n            data.particle.position.x = data.canvasSize.width - minPos;\n        }\n        else if (data.bounds.left <= 0) {\n            data.particle.position.x = minPos;\n        }\n        if (data.outMode === Enums_1.OutMode.split) {\n            data.particle.destroy();\n        }\n    }\n}\nfunction bounceVertical(data) {\n    if (data.outMode === Enums_1.OutMode.bounce ||\n        data.outMode === Enums_1.OutMode.bounceVertical ||\n        data.outMode === \"bounceVertical\" ||\n        data.outMode === Enums_1.OutMode.split) {\n        const velocity = data.particle.velocity.y;\n        let bounced = false;\n        if ((data.direction === OutModeDirection_1.OutModeDirection.bottom &&\n            data.bounds.bottom >= data.canvasSize.height &&\n            velocity > 0) ||\n            (data.direction === OutModeDirection_1.OutModeDirection.top && data.bounds.top <= 0 && velocity < 0)) {\n            const newVelocity = Utils_1.NumberUtils.getValue(data.particle.options.bounce.vertical);\n            data.particle.velocity.y *= -newVelocity;\n            bounced = true;\n        }\n        if (!bounced) {\n            return;\n        }\n        const minPos = data.offset.y + data.size;\n        if (data.bounds.bottom >= data.canvasSize.height) {\n            data.particle.position.y = data.canvasSize.height - minPos;\n        }\n        else if (data.bounds.top <= 0) {\n            data.particle.position.y = minPos;\n        }\n        if (data.outMode === Enums_1.OutMode.split) {\n            data.particle.destroy();\n        }\n    }\n}\nfunction checkDestroy(particle, destroy, value, minValue, maxValue) {\n    switch (destroy) {\n        case Enums_1.DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case Enums_1.DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nclass Updater {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    update(delta) {\n        if (this.particle.destroyed) {\n            return;\n        }\n        this.updateLife(delta);\n        if (this.particle.destroyed || this.particle.spawning) {\n            return;\n        }\n        this.updateOpacity(delta);\n        this.updateSize(delta);\n        this.updateAngle(delta);\n        this.updateColor(delta);\n        this.updateStrokeColor(delta);\n        this.updateOutModes(delta);\n    }\n    updateLife(delta) {\n        const particle = this.particle;\n        let justSpawned = false;\n        if (particle.spawning) {\n            particle.lifeDelayTime += delta.value;\n            if (particle.lifeDelayTime >= particle.lifeDelay) {\n                justSpawned = true;\n                particle.spawning = false;\n                particle.lifeDelayTime = 0;\n                particle.lifeTime = 0;\n            }\n        }\n        if (particle.lifeDuration === -1) {\n            return;\n        }\n        if (!particle.spawning) {\n            if (justSpawned) {\n                particle.lifeTime = 0;\n            }\n            else {\n                particle.lifeTime += delta.value;\n            }\n            if (particle.lifeTime >= particle.lifeDuration) {\n                particle.lifeTime = 0;\n                if (particle.livesRemaining > 0) {\n                    particle.livesRemaining--;\n                }\n                if (particle.livesRemaining === 0) {\n                    particle.destroy();\n                    return;\n                }\n                const canvasSize = this.container.canvas.size;\n                particle.position.x = Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(0, canvasSize.width));\n                particle.position.y = Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(0, canvasSize.height));\n                particle.spawning = true;\n                particle.lifeDelayTime = 0;\n                particle.lifeTime = 0;\n                particle.reset();\n                const lifeOptions = particle.options.life;\n                particle.lifeDelay = Utils_1.NumberUtils.getValue(lifeOptions.delay) * 1000;\n                particle.lifeDuration = Utils_1.NumberUtils.getValue(lifeOptions.duration) * 1000;\n            }\n        }\n    }\n    updateOpacity(delta) {\n        var _a, _b;\n        const particle = this.particle;\n        const opacityOpt = particle.options.opacity;\n        const opacityAnim = opacityOpt.animation;\n        const minValue = Utils_1.NumberUtils.getRangeMin(opacityOpt.value);\n        const maxValue = Utils_1.NumberUtils.getRangeMax(opacityOpt.value);\n        if (!particle.destroyed &&\n            opacityAnim.enable &&\n            (opacityAnim.count <= 0 || particle.loops.size < opacityAnim.count)) {\n            switch (particle.opacity.status) {\n                case Enums_1.AnimationStatus.increasing:\n                    if (particle.opacity.value >= maxValue) {\n                        particle.opacity.status = Enums_1.AnimationStatus.decreasing;\n                        particle.loops.opacity++;\n                    }\n                    else {\n                        particle.opacity.value += ((_a = particle.opacity.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n                    }\n                    break;\n                case Enums_1.AnimationStatus.decreasing:\n                    if (particle.opacity.value <= minValue) {\n                        particle.opacity.status = Enums_1.AnimationStatus.increasing;\n                        particle.loops.opacity++;\n                    }\n                    else {\n                        particle.opacity.value -= ((_b = particle.opacity.velocity) !== null && _b !== void 0 ? _b : 0) * delta.factor;\n                    }\n                    break;\n            }\n            checkDestroy(particle, opacityAnim.destroy, particle.opacity.value, minValue, maxValue);\n            if (!particle.destroyed) {\n                particle.opacity.value = Utils_1.NumberUtils.clamp(particle.opacity.value, minValue, maxValue);\n            }\n        }\n    }\n    updateSize(delta) {\n        var _a;\n        const container = this.container;\n        const particle = this.particle;\n        const sizeOpt = particle.options.size;\n        const sizeAnim = sizeOpt.animation;\n        const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n        const minValue = Utils_1.NumberUtils.getRangeMin(sizeOpt.value) * container.retina.pixelRatio;\n        const maxValue = Utils_1.NumberUtils.getRangeMax(sizeOpt.value) * container.retina.pixelRatio;\n        if (!particle.destroyed && sizeAnim.enable && (sizeAnim.count <= 0 || particle.loops.size < sizeAnim.count)) {\n            switch (particle.size.status) {\n                case Enums_1.AnimationStatus.increasing:\n                    if (particle.size.value >= maxValue) {\n                        particle.size.status = Enums_1.AnimationStatus.decreasing;\n                        particle.loops.size++;\n                    }\n                    else {\n                        particle.size.value += sizeVelocity;\n                    }\n                    break;\n                case Enums_1.AnimationStatus.decreasing:\n                    if (particle.size.value <= minValue) {\n                        particle.size.status = Enums_1.AnimationStatus.increasing;\n                        particle.loops.size++;\n                    }\n                    else {\n                        particle.size.value -= sizeVelocity;\n                    }\n            }\n            checkDestroy(particle, sizeAnim.destroy, particle.size.value, minValue, maxValue);\n            if (!particle.destroyed) {\n                particle.size.value = Utils_1.NumberUtils.clamp(particle.size.value, minValue, maxValue);\n            }\n        }\n    }\n    updateAngle(delta) {\n        var _a;\n        const particle = this.particle;\n        const rotate = particle.options.rotate;\n        const rotateAnimation = rotate.animation;\n        const speed = ((_a = particle.rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n        const max = 2 * Math.PI;\n        if (rotateAnimation.enable) {\n            switch (particle.rotate.status) {\n                case Enums_1.AnimationStatus.increasing:\n                    particle.rotate.value += speed;\n                    if (particle.rotate.value > max) {\n                        particle.rotate.value -= max;\n                    }\n                    break;\n                case Enums_1.AnimationStatus.decreasing:\n                default:\n                    particle.rotate.value -= speed;\n                    if (particle.rotate.value < 0) {\n                        particle.rotate.value += max;\n                    }\n                    break;\n            }\n        }\n    }\n    updateColor(delta) {\n        var _a, _b, _c;\n        const particle = this.particle;\n        const animationOptions = particle.options.color.animation;\n        if (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h) !== undefined) {\n            this.updateColorValue(particle, delta, particle.color.h, animationOptions.h, 360, false);\n        }\n        if (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s) !== undefined) {\n            this.updateColorValue(particle, delta, particle.color.s, animationOptions.s, 100, true);\n        }\n        if (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l) !== undefined) {\n            this.updateColorValue(particle, delta, particle.color.l, animationOptions.l, 100, true);\n        }\n    }\n    updateStrokeColor(delta) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        const particle = this.particle;\n        if (!particle.stroke.color) {\n            return;\n        }\n        const animationOptions = particle.stroke.color.animation;\n        const valueAnimations = animationOptions;\n        if (valueAnimations.enable !== undefined) {\n            const hue = (_b = (_a = particle.strokeColor) === null || _a === void 0 ? void 0 : _a.h) !== null && _b !== void 0 ? _b : (_c = particle.color) === null || _c === void 0 ? void 0 : _c.h;\n            if (hue) {\n                this.updateColorValue(particle, delta, hue, valueAnimations, 360, false);\n            }\n        }\n        else {\n            const hslAnimations = animationOptions;\n            const h = (_e = (_d = particle.strokeColor) === null || _d === void 0 ? void 0 : _d.h) !== null && _e !== void 0 ? _e : (_f = particle.color) === null || _f === void 0 ? void 0 : _f.h;\n            if (h) {\n                this.updateColorValue(particle, delta, h, hslAnimations.h, 360, false);\n            }\n            const s = (_h = (_g = particle.strokeColor) === null || _g === void 0 ? void 0 : _g.s) !== null && _h !== void 0 ? _h : (_j = particle.color) === null || _j === void 0 ? void 0 : _j.s;\n            if (s) {\n                this.updateColorValue(particle, delta, s, hslAnimations.s, 100, true);\n            }\n            const l = (_l = (_k = particle.strokeColor) === null || _k === void 0 ? void 0 : _k.l) !== null && _l !== void 0 ? _l : (_m = particle.color) === null || _m === void 0 ? void 0 : _m.l;\n            if (l) {\n                this.updateColorValue(particle, delta, l, hslAnimations.l, 100, true);\n            }\n        }\n    }\n    updateColorValue(particle, delta, value, valueAnimation, max, decrease) {\n        var _a;\n        const colorValue = value;\n        if (!colorValue || !valueAnimation.enable) {\n            return;\n        }\n        const offset = Utils_1.NumberUtils.randomInRange(valueAnimation.offset);\n        const velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6;\n        if (!decrease || colorValue.status === Enums_1.AnimationStatus.increasing) {\n            colorValue.value += velocity;\n            if (decrease && colorValue.value > max) {\n                colorValue.status = Enums_1.AnimationStatus.decreasing;\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n        else {\n            colorValue.value -= velocity;\n            if (colorValue.value < 0) {\n                colorValue.status = Enums_1.AnimationStatus.increasing;\n                colorValue.value += colorValue.value;\n            }\n        }\n        if (colorValue.value > max) {\n            colorValue.value %= max;\n        }\n    }\n    updateOutModes(delta) {\n        var _a, _b, _c, _d;\n        const outModes = this.particle.options.move.outModes;\n        this.updateOutMode(delta, (_a = outModes.bottom) !== null && _a !== void 0 ? _a : outModes.default, OutModeDirection_1.OutModeDirection.bottom);\n        this.updateOutMode(delta, (_b = outModes.left) !== null && _b !== void 0 ? _b : outModes.default, OutModeDirection_1.OutModeDirection.left);\n        this.updateOutMode(delta, (_c = outModes.right) !== null && _c !== void 0 ? _c : outModes.default, OutModeDirection_1.OutModeDirection.right);\n        this.updateOutMode(delta, (_d = outModes.top) !== null && _d !== void 0 ? _d : outModes.default, OutModeDirection_1.OutModeDirection.top);\n    }\n    updateOutMode(delta, outMode, direction) {\n        const container = this.container;\n        const particle = this.particle;\n        switch (outMode) {\n            case Enums_1.OutMode.bounce:\n            case Enums_1.OutMode.bounceVertical:\n            case Enums_1.OutMode.bounceHorizontal:\n            case \"bounceVertical\":\n            case \"bounceHorizontal\":\n            case Enums_1.OutMode.split:\n                this.updateBounce(delta, direction, outMode);\n                break;\n            case Enums_1.OutMode.destroy:\n                if (!Utils_1.Utils.isPointInside(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n                    container.particles.remove(particle, true);\n                }\n                break;\n            case Enums_1.OutMode.out:\n                if (!Utils_1.Utils.isPointInside(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n                    this.fixOutOfCanvasPosition(direction);\n                }\n                break;\n            case Enums_1.OutMode.none:\n                this.bounceNone(direction);\n                break;\n        }\n    }\n    fixOutOfCanvasPosition(direction) {\n        const container = this.container;\n        const particle = this.particle;\n        const wrap = particle.options.move.warp;\n        const canvasSize = container.canvas.size;\n        const newPos = {\n            bottom: canvasSize.height + particle.getRadius() - particle.offset.y,\n            left: -particle.getRadius() - particle.offset.x,\n            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n            top: -particle.getRadius() - particle.offset.y,\n        };\n        const sizeValue = particle.getRadius();\n        const nextBounds = Utils_1.Utils.calculateBounds(particle.position, sizeValue);\n        if (direction === OutModeDirection_1.OutModeDirection.right && nextBounds.left > canvasSize.width - particle.offset.x) {\n            particle.position.x = newPos.left;\n            if (!wrap) {\n                particle.position.y = Math.random() * canvasSize.height;\n            }\n        }\n        else if (direction === OutModeDirection_1.OutModeDirection.left && nextBounds.right < -particle.offset.x) {\n            particle.position.x = newPos.right;\n            if (!wrap) {\n                particle.position.y = Math.random() * canvasSize.height;\n            }\n        }\n        if (direction === OutModeDirection_1.OutModeDirection.bottom && nextBounds.top > canvasSize.height - particle.offset.y) {\n            if (!wrap) {\n                particle.position.x = Math.random() * canvasSize.width;\n            }\n            particle.position.y = newPos.top;\n        }\n        else if (direction === OutModeDirection_1.OutModeDirection.top && nextBounds.bottom < -particle.offset.y) {\n            if (!wrap) {\n                particle.position.x = Math.random() * canvasSize.width;\n            }\n            particle.position.y = newPos.bottom;\n        }\n    }\n    updateBounce(delta, direction, outMode) {\n        const container = this.container;\n        const particle = this.particle;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = Utils_1.Utils.calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n    bounceNone(direction) {\n        const particle = this.particle;\n        if (particle.options.move.distance) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity;\n        const container = this.container;\n        if (!gravityOptions.enable) {\n            if (!Utils_1.Utils.isPointInside(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((gravityOptions.acceleration >= 0 &&\n                position.y > container.canvas.size.height &&\n                direction === OutModeDirection_1.OutModeDirection.bottom) ||\n                (gravityOptions.acceleration < 0 && position.y < 0 && direction === OutModeDirection_1.OutModeDirection.top)) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\nexports.Updater = Updater;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsColor = void 0;\nclass OptionsColor {\n    constructor() {\n        this.value = \"#fff\";\n    }\n    static create(source, data) {\n        const color = source !== null && source !== void 0 ? source : new OptionsColor();\n        if (data !== undefined) {\n            color.load(typeof data === \"string\" ? { value: data } : data);\n        }\n        return color;\n    }\n    load(data) {\n        if ((data === null || data === void 0 ? void 0 : data.value) === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\nexports.OptionsColor = OptionsColor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinksShadow = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor_1.OptionsColor();\n        this.enable = false;\n        this.color.value = \"#00ff00\";\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\nexports.LinksShadow = LinksShadow;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinksTriangle = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\nexports.LinksTriangle = LinksTriangle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Links = void 0;\nconst LinksShadow_1 = require(\"./LinksShadow\");\nconst LinksTriangle_1 = require(\"./LinksTriangle\");\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor_1.OptionsColor();\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow_1.LinksShadow();\n        this.triangles = new LinksTriangle_1.LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\nexports.Links = Links;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attract = void 0;\nclass Attract {\n    constructor() {\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = (_b = (_a = data.rotate) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = (_d = (_c = data.rotate) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\nexports.Attract = Attract;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Trail = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass Trail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fillColor = new OptionsColor_1.OptionsColor();\n        this.fillColor.value = \"#000000\";\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.fillColor = OptionsColor_1.OptionsColor.create(this.fillColor, data.fillColor);\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\nexports.Trail = Trail;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Random = void 0;\nclass Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\nexports.Random = Random;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueWithRandom = void 0;\nconst Random_1 = require(\"./Random\");\nconst Utils_1 = require(\"../../Utils\");\nclass ValueWithRandom {\n    constructor() {\n        this.random = new Random_1.Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (typeof data.random === \"boolean\") {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = Utils_1.NumberUtils.setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexports.ValueWithRandom = ValueWithRandom;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PathDelay = void 0;\nconst ValueWithRandom_1 = require(\"../../../ValueWithRandom\");\nclass PathDelay extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n    }\n}\nexports.PathDelay = PathDelay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Path = void 0;\nconst PathDelay_1 = require(\"./PathDelay\");\nclass Path {\n    constructor() {\n        this.clamp = true;\n        this.delay = new PathDelay_1.PathDelay();\n        this.enable = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n    }\n}\nexports.Path = Path;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MoveAngle = void 0;\nclass MoveAngle {\n    constructor() {\n        this.offset = 45;\n        this.value = 90;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = data.offset;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\nexports.MoveAngle = MoveAngle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MoveGravity = void 0;\nclass MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = data.acceleration;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\nexports.MoveGravity = MoveGravity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutModes = void 0;\nconst Modes_1 = require(\"../../../../Enums/Modes\");\nclass OutModes {\n    constructor() {\n        this.default = Modes_1.OutMode.out;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = (_a = data.bottom) !== null && _a !== void 0 ? _a : data.default;\n        this.left = (_b = data.left) !== null && _b !== void 0 ? _b : data.default;\n        this.right = (_c = data.right) !== null && _c !== void 0 ? _c : data.default;\n        this.top = (_d = data.top) !== null && _d !== void 0 ? _d : data.default;\n    }\n}\nexports.OutModes = OutModes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Move = void 0;\nconst Attract_1 = require(\"./Attract\");\nconst Enums_1 = require(\"../../../../Enums\");\nconst Trail_1 = require(\"./Trail\");\nconst Path_1 = require(\"./Path/Path\");\nconst MoveAngle_1 = require(\"./MoveAngle\");\nconst MoveGravity_1 = require(\"./MoveGravity\");\nconst OutModes_1 = require(\"./OutModes\");\nconst Utils_1 = require(\"../../../../Utils\");\nclass Move {\n    constructor() {\n        this.angle = new MoveAngle_1.MoveAngle();\n        this.attract = new Attract_1.Attract();\n        this.decay = 0;\n        this.distance = 0;\n        this.direction = Enums_1.MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity_1.MoveGravity();\n        this.path = new Path_1.Path();\n        this.outModes = new OutModes_1.OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.straight = false;\n        this.trail = new Trail_1.Trail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(value) {\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            if (typeof data.angle === \"number\") {\n                this.angle.value = data.angle;\n            }\n            else {\n                this.angle.load(data.angle);\n            }\n        }\n        this.attract.load(data.attract);\n        if (data.decay !== undefined) {\n            this.decay = data.decay;\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.drift !== undefined) {\n            this.drift = Utils_1.NumberUtils.setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outMode = (_a = data.outMode) !== null && _a !== void 0 ? _a : data.out_mode;\n        if (data.outModes !== undefined || outMode !== undefined) {\n            if (typeof data.outModes === \"string\" || (data.outModes === undefined && outMode !== undefined)) {\n                this.outModes.load({\n                    default: (_b = data.outModes) !== null && _b !== void 0 ? _b : outMode,\n                });\n            }\n            else {\n                this.outModes.load(data.outModes);\n            }\n        }\n        this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = Utils_1.NumberUtils.setRangeValue(data.speed);\n        }\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\nexports.Move = Move;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Density = void 0;\nclass Density {\n    constructor() {\n        this.enable = false;\n        this.area = 800;\n        this.factor = 1000;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const area = (_a = data.area) !== null && _a !== void 0 ? _a : data.value_area;\n        if (area !== undefined) {\n            this.area = area;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n    }\n}\nexports.Density = Density;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParticlesNumber = void 0;\nconst Density_1 = require(\"./Density\");\nclass ParticlesNumber {\n    constructor() {\n        this.density = new Density_1.Density();\n        this.limit = 0;\n        this.value = 100;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = (_a = data.limit) !== null && _a !== void 0 ? _a : data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\nexports.ParticlesNumber = ParticlesNumber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnimationOptions = void 0;\nclass AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexports.AnimationOptions = AnimationOptions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OpacityAnimation = void 0;\nconst Types_1 = require(\"../../../../Enums/Types\");\nconst AnimationOptions_1 = require(\"../../AnimationOptions\");\nclass OpacityAnimation extends AnimationOptions_1.AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = Types_1.DestroyType.none;\n        this.enable = false;\n        this.minimumValue = 0;\n        this.speed = 2;\n        this.startValue = Types_1.StartValueType.random;\n        this.sync = false;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        super.load(data);\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.opacity_min;\n        if (minimumValue !== undefined) {\n            this.minimumValue = minimumValue;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexports.OpacityAnimation = OpacityAnimation;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Opacity = void 0;\nconst OpacityAnimation_1 = require(\"./OpacityAnimation\");\nconst ValueWithRandom_1 = require(\"../../ValueWithRandom\");\nconst Utils_1 = require(\"../../../../Utils\");\nclass Opacity extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation_1.OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = Utils_1.NumberUtils.setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\nexports.Opacity = Opacity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Shape = void 0;\nconst Enums_1 = require(\"../../../../Enums\");\nconst Utils_1 = require(\"../../../../Utils\");\nclass Shape {\n    constructor() {\n        this.options = {};\n        this.type = Enums_1.ShapeType.circle;\n    }\n    get image() {\n        var _a;\n        return ((_a = this.options[Enums_1.ShapeType.image]) !== null && _a !== void 0 ? _a : this.options[Enums_1.ShapeType.images]);\n    }\n    set image(value) {\n        this.options[Enums_1.ShapeType.image] = value;\n        this.options[Enums_1.ShapeType.images] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get images() {\n        return this.image instanceof Array ? this.image : [this.image];\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    get character() {\n        var _a;\n        return ((_a = this.options[Enums_1.ShapeType.character]) !== null && _a !== void 0 ? _a : this.options[Enums_1.ShapeType.char]);\n    }\n    set character(value) {\n        this.options[Enums_1.ShapeType.character] = value;\n        this.options[Enums_1.ShapeType.char] = value;\n    }\n    get polygon() {\n        var _a;\n        return ((_a = this.options[Enums_1.ShapeType.polygon]) !== null && _a !== void 0 ? _a : this.options[Enums_1.ShapeType.star]);\n    }\n    set polygon(value) {\n        this.options[Enums_1.ShapeType.polygon] = value;\n        this.options[Enums_1.ShapeType.star] = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item !== undefined) {\n                    this.options[shape] = Utils_1.Utils.deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, Enums_1.ShapeType.character, Enums_1.ShapeType.char, true);\n        this.loadShape(data.polygon, Enums_1.ShapeType.polygon, Enums_1.ShapeType.star, false);\n        this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, Enums_1.ShapeType.image, Enums_1.ShapeType.images, true);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n    loadShape(item, mainKey, altKey, altOverride) {\n        var _a, _b, _c, _d;\n        if (item === undefined) {\n            return;\n        }\n        if (item instanceof Array) {\n            if (!(this.options[mainKey] instanceof Array)) {\n                this.options[mainKey] = [];\n                if (!this.options[altKey] || altOverride) {\n                    this.options[altKey] = [];\n                }\n            }\n            this.options[mainKey] = Utils_1.Utils.deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : [], item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = Utils_1.Utils.deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : [], item);\n            }\n        }\n        else {\n            if (this.options[mainKey] instanceof Array) {\n                this.options[mainKey] = {};\n                if (!this.options[altKey] || altOverride) {\n                    this.options[altKey] = {};\n                }\n            }\n            this.options[mainKey] = Utils_1.Utils.deepExtend((_c = this.options[mainKey]) !== null && _c !== void 0 ? _c : {}, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = Utils_1.Utils.deepExtend((_d = this.options[altKey]) !== null && _d !== void 0 ? _d : {}, item);\n            }\n        }\n    }\n}\nexports.Shape = Shape;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SizeAnimation = void 0;\nconst Enums_1 = require(\"../../../../Enums\");\nconst AnimationOptions_1 = require(\"../../AnimationOptions\");\nclass SizeAnimation extends AnimationOptions_1.AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = Enums_1.DestroyType.none;\n        this.enable = false;\n        this.minimumValue = 0;\n        this.speed = 5;\n        this.startValue = Enums_1.StartValueType.random;\n        this.sync = false;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        super.load(data);\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.size_min;\n        if (minimumValue !== undefined) {\n            this.minimumValue = minimumValue;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexports.SizeAnimation = SizeAnimation;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Size = void 0;\nconst SizeAnimation_1 = require(\"./SizeAnimation\");\nconst ValueWithRandom_1 = require(\"../../ValueWithRandom\");\nconst Utils_1 = require(\"../../../../Utils\");\nclass Size extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation_1.SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = Utils_1.NumberUtils.setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\nexports.Size = Size;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RotateAnimation = void 0;\nclass RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexports.RotateAnimation = RotateAnimation;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Rotate = void 0;\nconst RotateAnimation_1 = require(\"./RotateAnimation\");\nconst Enums_1 = require(\"../../../../Enums\");\nconst ValueWithRandom_1 = require(\"../../ValueWithRandom\");\nclass Rotate extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation_1.RotateAnimation();\n        this.direction = Enums_1.RotateDirection.clockwise;\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\nexports.Rotate = Rotate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Shadow = void 0;\nconst OptionsColor_1 = require(\"../OptionsColor\");\nclass Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor_1.OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000000\";\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\nexports.Shadow = Shadow;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorAnimation = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.sync = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = Utils_1.NumberUtils.setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexports.ColorAnimation = ColorAnimation;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HslAnimation = void 0;\nconst ColorAnimation_1 = require(\"../ColorAnimation\");\nclass HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation_1.ColorAnimation();\n        this.s = new ColorAnimation_1.ColorAnimation();\n        this.l = new ColorAnimation_1.ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\nexports.HslAnimation = HslAnimation;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnimatableColor = void 0;\nconst OptionsColor_1 = require(\"../OptionsColor\");\nconst HslAnimation_1 = require(\"./HslAnimation\");\nclass AnimatableColor extends OptionsColor_1.OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation_1.HslAnimation();\n    }\n    static create(source, data) {\n        const color = source !== null && source !== void 0 ? source : new AnimatableColor();\n        if (data !== undefined) {\n            color.load(typeof data === \"string\" ? { value: data } : data);\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\nexports.AnimatableColor = AnimatableColor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Stroke = void 0;\nconst AnimatableColor_1 = require(\"./AnimatableColor\");\nclass Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor_1.AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\nexports.Stroke = Stroke;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BounceFactor = void 0;\nconst ValueWithRandom_1 = require(\"../../ValueWithRandom\");\nclass BounceFactor extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\nexports.BounceFactor = BounceFactor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bounce = void 0;\nconst BounceFactor_1 = require(\"./BounceFactor\");\nclass Bounce {\n    constructor() {\n        this.horizontal = new BounceFactor_1.BounceFactor();\n        this.vertical = new BounceFactor_1.BounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\nexports.Bounce = Bounce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollisionsOverlap = void 0;\nclass CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\nexports.CollisionsOverlap = CollisionsOverlap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collisions = void 0;\nconst Enums_1 = require(\"../../../../Enums\");\nconst Bounce_1 = require(\"../Bounce/Bounce\");\nconst CollisionsOverlap_1 = require(\"./CollisionsOverlap\");\nclass Collisions {\n    constructor() {\n        this.bounce = new Bounce_1.Bounce();\n        this.enable = false;\n        this.mode = Enums_1.CollisionMode.bounce;\n        this.overlap = new CollisionsOverlap_1.CollisionsOverlap();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\nexports.Collisions = Collisions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TwinkleValues = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\nexports.TwinkleValues = TwinkleValues;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Twinkle = void 0;\nconst TwinkleValues_1 = require(\"./TwinkleValues\");\nclass Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues_1.TwinkleValues();\n        this.particles = new TwinkleValues_1.TwinkleValues();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\nexports.Twinkle = Twinkle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LifeDelay = void 0;\nconst ValueWithRandom_1 = require(\"../../ValueWithRandom\");\nclass LifeDelay extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexports.LifeDelay = LifeDelay;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LifeDuration = void 0;\nconst ValueWithRandom_1 = require(\"../../ValueWithRandom\");\nclass LifeDuration extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexports.LifeDuration = LifeDuration;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Life = void 0;\nconst LifeDelay_1 = require(\"./LifeDelay\");\nconst LifeDuration_1 = require(\"./LifeDuration\");\nclass Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay_1.LifeDelay();\n        this.duration = new LifeDuration_1.LifeDuration();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\nexports.Life = Life;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SplitFactor = void 0;\nconst ValueWithRandom_1 = require(\"../../ValueWithRandom\");\nclass SplitFactor extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\nexports.SplitFactor = SplitFactor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SplitRate = void 0;\nconst ValueWithRandom_1 = require(\"../../ValueWithRandom\");\nclass SplitRate extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\nexports.SplitRate = SplitRate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Split = void 0;\nconst SplitFactor_1 = require(\"./SplitFactor\");\nconst SplitRate_1 = require(\"./SplitRate\");\nconst Utils_1 = require(\"../../../../Utils\");\nclass Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor_1.SplitFactor();\n        this.rate = new SplitRate_1.SplitRate();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        if (data.particles !== undefined) {\n            this.particles = Utils_1.Utils.deepExtend({}, data.particles);\n        }\n    }\n}\nexports.Split = Split;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Destroy = void 0;\nconst Enums_1 = require(\"../../../../Enums\");\nconst Split_1 = require(\"./Split\");\nclass Destroy {\n    constructor() {\n        this.mode = Enums_1.DestroyMode.none;\n        this.split = new Split_1.Split();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.split.load(data.split);\n    }\n}\nexports.Destroy = Destroy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParticlesOptions = void 0;\nconst Links_1 = require(\"./Links/Links\");\nconst Move_1 = require(\"./Move/Move\");\nconst ParticlesNumber_1 = require(\"./Number/ParticlesNumber\");\nconst Opacity_1 = require(\"./Opacity/Opacity\");\nconst Shape_1 = require(\"./Shape/Shape\");\nconst Size_1 = require(\"./Size/Size\");\nconst Rotate_1 = require(\"./Rotate/Rotate\");\nconst Shadow_1 = require(\"./Shadow\");\nconst Stroke_1 = require(\"./Stroke\");\nconst Collisions_1 = require(\"./Collisions/Collisions\");\nconst Twinkle_1 = require(\"./Twinkle/Twinkle\");\nconst AnimatableColor_1 = require(\"./AnimatableColor\");\nconst Life_1 = require(\"./Life/Life\");\nconst Bounce_1 = require(\"./Bounce/Bounce\");\nconst Destroy_1 = require(\"./Destroy/Destroy\");\nclass ParticlesOptions {\n    constructor() {\n        this.bounce = new Bounce_1.Bounce();\n        this.collisions = new Collisions_1.Collisions();\n        this.color = new AnimatableColor_1.AnimatableColor();\n        this.destroy = new Destroy_1.Destroy();\n        this.life = new Life_1.Life();\n        this.links = new Links_1.Links();\n        this.move = new Move_1.Move();\n        this.number = new ParticlesNumber_1.ParticlesNumber();\n        this.opacity = new Opacity_1.Opacity();\n        this.reduceDuplicates = false;\n        this.rotate = new Rotate_1.Rotate();\n        this.shadow = new Shadow_1.Shadow();\n        this.shape = new Shape_1.Shape();\n        this.size = new Size_1.Size();\n        this.stroke = new Stroke_1.Stroke();\n        this.twinkle = new Twinkle_1.Twinkle();\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        if (data === undefined) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color = AnimatableColor_1.AnimatableColor.create(this.color, data.color);\n        this.destroy.load(data.destroy);\n        this.life.load(data.life);\n        const links = (_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked;\n        if (links !== undefined) {\n            this.links.load(links);\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.rotate.load(data.rotate);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.twinkle.load(data.twinkle);\n        const collisions = (_d = (_c = data.move) === null || _c === void 0 ? void 0 : _c.collisions) !== null && _d !== void 0 ? _d : (_e = data.move) === null || _e === void 0 ? void 0 : _e.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        const strokeToLoad = (_f = data.stroke) !== null && _f !== void 0 ? _f : (_g = data.shape) === null || _g === void 0 ? void 0 : _g.stroke;\n        if (strokeToLoad === undefined) {\n            return;\n        }\n        if (strokeToLoad instanceof Array) {\n            this.stroke = strokeToLoad.map((s) => {\n                const tmp = new Stroke_1.Stroke();\n                tmp.load(s);\n                return tmp;\n            });\n        }\n        else {\n            if (this.stroke instanceof Array) {\n                this.stroke = new Stroke_1.Stroke();\n            }\n            this.stroke.load(strokeToLoad);\n        }\n    }\n}\nexports.ParticlesOptions = ParticlesOptions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Infecter = void 0;\nclass Infecter {\n    constructor(container) {\n        this.container = container;\n    }\n    startInfection(stage) {\n        const options = this.container.actualOptions;\n        const stages = options.infection.stages;\n        const stagesCount = stages.length;\n        if (stage > stagesCount || stage < 0) {\n            return;\n        }\n        this.infectionDelay = 0;\n        this.infectionDelayStage = stage;\n    }\n    updateInfectionStage(stage) {\n        const options = this.container.actualOptions;\n        const stagesCount = options.infection.stages.length;\n        if (stage > stagesCount || stage < 0 || (this.infectionStage !== undefined && this.infectionStage > stage)) {\n            return;\n        }\n        this.infectionStage = stage;\n        this.infectionTime = 0;\n    }\n    updateInfection(delta) {\n        const options = this.container.actualOptions;\n        const infection = options.infection;\n        const stages = options.infection.stages;\n        const stagesCount = stages.length;\n        if (this.infectionDelay !== undefined && this.infectionDelayStage !== undefined) {\n            const stage = this.infectionDelayStage;\n            if (stage > stagesCount || stage < 0) {\n                return;\n            }\n            if (this.infectionDelay > infection.delay * 1000) {\n                this.infectionStage = stage;\n                this.infectionTime = 0;\n                delete this.infectionDelay;\n                delete this.infectionDelayStage;\n            }\n            else {\n                this.infectionDelay += delta;\n            }\n        }\n        else {\n            delete this.infectionDelay;\n            delete this.infectionDelayStage;\n        }\n        if (this.infectionStage !== undefined && this.infectionTime !== undefined) {\n            const infectionStage = stages[this.infectionStage];\n            if (infectionStage.duration !== undefined && infectionStage.duration >= 0) {\n                if (this.infectionTime > infectionStage.duration * 1000) {\n                    this.nextInfectionStage();\n                }\n                else {\n                    this.infectionTime += delta;\n                }\n            }\n            else {\n                this.infectionTime += delta;\n            }\n        }\n        else {\n            delete this.infectionStage;\n            delete this.infectionTime;\n        }\n    }\n    nextInfectionStage() {\n        const options = this.container.actualOptions;\n        const stagesCount = options.infection.stages.length;\n        if (stagesCount <= 0 || this.infectionStage === undefined) {\n            return;\n        }\n        this.infectionTime = 0;\n        if (stagesCount <= ++this.infectionStage) {\n            if (options.infection.cure) {\n                delete this.infectionStage;\n                delete this.infectionTime;\n                return;\n            }\n            else {\n                this.infectionStage = 0;\n                this.infectionTime = 0;\n            }\n        }\n    }\n}\nexports.Infecter = Infecter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mover = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nclass Mover {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    move(delta) {\n        const particle = this.particle;\n        particle.bubble.inRange = false;\n        particle.links = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (particle.destroyed) {\n                break;\n            }\n            if (plugin.particleUpdate) {\n                plugin.particleUpdate(particle, delta);\n            }\n        }\n        if (particle.destroyed) {\n            return;\n        }\n        this.moveParticle(delta);\n        this.moveParallax();\n    }\n    moveParticle(delta) {\n        var _a, _b;\n        const particle = this.particle;\n        const particlesOptions = particle.options;\n        if (!particlesOptions.move.enable) {\n            return;\n        }\n        const container = this.container;\n        const slowFactor = this.getProximitySpeedFactor();\n        const baseSpeed = ((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : Utils_1.NumberUtils.getRangeValue(particle.options.move.speed) * container.retina.pixelRatio) *\n            container.retina.reduceFactor;\n        const maxSize = Utils_1.NumberUtils.getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const sizeFactor = particlesOptions.move.size ? particle.getRadius() / maxSize : 1;\n        const moveSpeed = (baseSpeed / 2) * sizeFactor * slowFactor * delta.factor;\n        const moveDrift = (_b = particle.moveDrift) !== null && _b !== void 0 ? _b : Utils_1.NumberUtils.getRangeValue(particle.options.move.drift) * container.retina.pixelRatio;\n        this.applyPath(delta);\n        const gravityOptions = particlesOptions.move.gravity;\n        if (gravityOptions.enable) {\n            particle.velocity.y += (gravityOptions.acceleration * delta.factor) / (60 * moveSpeed);\n        }\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n        const decay = 1 - particle.options.move.decay;\n        particle.velocity.multTo(decay);\n        const velocity = particle.velocity.mult(moveSpeed);\n        if (gravityOptions.enable && velocity.y >= gravityOptions.maxSpeed && gravityOptions.maxSpeed > 0) {\n            velocity.y = gravityOptions.maxSpeed;\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n        particle.position.addTo(velocity);\n        if (particlesOptions.move.vibrate) {\n            particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n            particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n        }\n        const initialPosition = particle.initialPosition;\n        const initialDistance = Utils_1.NumberUtils.getDistance(initialPosition, particle.position);\n        if (particle.maxDistance) {\n            if (initialDistance >= particle.maxDistance && !particle.misplaced) {\n                particle.misplaced = initialDistance > particle.maxDistance;\n                particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n                particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n            }\n            else if (initialDistance < particle.maxDistance && particle.misplaced) {\n                particle.misplaced = false;\n            }\n            else if (particle.misplaced) {\n                if ((particle.position.x < initialPosition.x && particle.velocity.x < 0) ||\n                    (particle.position.x > initialPosition.x && particle.velocity.x > 0)) {\n                    particle.velocity.x *= -Math.random();\n                }\n                if ((particle.position.y < initialPosition.y && particle.velocity.y < 0) ||\n                    (particle.position.y > initialPosition.y && particle.velocity.y > 0)) {\n                    particle.velocity.y *= -Math.random();\n                }\n            }\n        }\n    }\n    applyPath(delta) {\n        const particle = this.particle;\n        const particlesOptions = particle.options;\n        const pathOptions = particlesOptions.move.path;\n        const pathEnabled = pathOptions.enable;\n        if (!pathEnabled) {\n            return;\n        }\n        const container = this.container;\n        if (particle.lastPathTime <= particle.pathDelay) {\n            particle.lastPathTime += delta.value;\n            return;\n        }\n        let generator = container.pathGenerator;\n        if (pathOptions.generator) {\n            const customGenerator = Utils_1.Plugins.getPathGenerator(pathOptions.generator);\n            if (customGenerator) {\n                generator = customGenerator;\n            }\n        }\n        const path = generator.generate(particle);\n        particle.velocity.addTo(path);\n        if (pathOptions.clamp) {\n            particle.velocity.x = Utils_1.NumberUtils.clamp(particle.velocity.x, -1, 1);\n            particle.velocity.y = Utils_1.NumberUtils.clamp(particle.velocity.y, -1, 1);\n        }\n        particle.lastPathTime -= particle.pathDelay;\n    }\n    moveParallax() {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (Utils_1.Utils.isSsr() || !options.interactivity.events.onHover.parallax.enable) {\n            return;\n        }\n        const particle = this.particle;\n        const parallaxForce = options.interactivity.events.onHover.parallax.force;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasCenter = {\n            x: container.canvas.size.width / 2,\n            y: container.canvas.size.height / 2,\n        };\n        const parallaxSmooth = options.interactivity.events.onHover.parallax.smooth;\n        const factor = particle.getRadius() / parallaxForce;\n        const tmp = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        };\n        particle.offset.x += (tmp.x - particle.offset.x) / parallaxSmooth;\n        particle.offset.y += (tmp.y - particle.offset.y) / parallaxSmooth;\n    }\n    getProximitySpeedFactor() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const active = Utils_1.Utils.isInArray(Enums_1.HoverMode.slow, options.interactivity.events.onHover.mode);\n        if (!active) {\n            return 1;\n        }\n        const mousePos = this.container.interactivity.mouse.position;\n        if (!mousePos) {\n            return 1;\n        }\n        const particlePos = this.particle.getPosition();\n        const dist = Utils_1.NumberUtils.getDistance(mousePos, particlePos);\n        const radius = container.retina.slowModeRadius;\n        if (dist > radius) {\n            return 1;\n        }\n        const proximityFactor = dist / radius || 0;\n        const slowFactor = options.interactivity.modes.slow.factor;\n        return proximityFactor / slowFactor;\n    }\n}\nexports.Mover = Mover;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particle = void 0;\nconst Updater_1 = require(\"./Particle/Updater\");\nconst ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\nconst Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\nconst Enums_1 = require(\"../Enums\");\nconst Utils_1 = require(\"../Utils\");\nconst Infecter_1 = require(\"./Particle/Infecter\");\nconst Mover_1 = require(\"./Particle/Mover\");\nconst Vector_1 = require(\"./Particle/Vector\");\nclass Particle {\n    constructor(id, container, position, overrideOptions) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        this.id = id;\n        this.container = container;\n        this.links = [];\n        this.fill = true;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.splitCount = 0;\n        this.misplaced = false;\n        this.loops = {\n            opacity: 0,\n            size: 0,\n        };\n        const pxRatio = container.retina.pixelRatio;\n        const options = container.actualOptions;\n        const particlesOptions = new ParticlesOptions_1.ParticlesOptions();\n        particlesOptions.load(options.particles);\n        const shapeType = particlesOptions.shape.type;\n        const reduceDuplicates = particlesOptions.reduceDuplicates;\n        this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType, this.id, reduceDuplicates) : shapeType;\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape =\n                    overrideShapeType instanceof Array\n                        ? Utils_1.Utils.itemFromArray(overrideShapeType, this.id, reduceDuplicates)\n                        : overrideShapeType;\n            }\n            const shapeOptions = new Shape_1.Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                const shapeData = shapeOptions.options[this.shape];\n                if (shapeData) {\n                    this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array\n                        ? Utils_1.Utils.itemFromArray(shapeData, this.id, reduceDuplicates)\n                        : shapeData);\n                }\n            }\n        }\n        else {\n            const shapeData = particlesOptions.shape.options[this.shape];\n            if (shapeData) {\n                this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData, this.id, reduceDuplicates) : shapeData);\n            }\n        }\n        if (overrideOptions !== undefined) {\n            particlesOptions.load(overrideOptions);\n        }\n        if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n            particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n        }\n        this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n        this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n        this.options = particlesOptions;\n        this.pathDelay = Utils_1.NumberUtils.getValue(this.options.move.path.delay) * 1000;\n        container.retina.initParticle(this);\n        const color = this.options.color;\n        const sizeOptions = this.options.size;\n        const sizeValue = Utils_1.NumberUtils.getValue(sizeOptions) * container.retina.pixelRatio;\n        const randomSize = typeof sizeOptions.random === \"boolean\" ? sizeOptions.random : sizeOptions.random.enable;\n        this.size = {\n            value: sizeValue,\n        };\n        this.direction = this.options.move.direction;\n        this.bubble = {\n            inRange: false,\n        };\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        const rotateOptions = this.options.rotate;\n        this.rotate = {\n            value: (Utils_1.NumberUtils.getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === Enums_1.RotateDirection.random) {\n            const index = Math.floor(Math.random() * 2);\n            rotateDirection = index > 0 ? Enums_1.RotateDirection.counterClockwise : Enums_1.RotateDirection.clockwise;\n        }\n        switch (rotateDirection) {\n            case Enums_1.RotateDirection.counterClockwise:\n            case \"counterClockwise\":\n                this.rotate.status = Enums_1.AnimationStatus.decreasing;\n                break;\n            case Enums_1.RotateDirection.clockwise:\n                this.rotate.status = Enums_1.AnimationStatus.increasing;\n                break;\n        }\n        const rotateAnimation = this.options.rotate.animation;\n        if (rotateAnimation.enable) {\n            this.rotate.velocity = (rotateAnimation.speed / 360) * container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                this.rotate.velocity *= Math.random();\n            }\n        }\n        const sizeAnimation = this.options.size.animation;\n        if (sizeAnimation.enable) {\n            this.size.status = Enums_1.AnimationStatus.increasing;\n            if (!randomSize) {\n                switch (sizeAnimation.startValue) {\n                    case Enums_1.StartValueType.min:\n                        this.size.value = sizeAnimation.minimumValue * pxRatio;\n                        break;\n                    case Enums_1.StartValueType.random:\n                        this.size.value = Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(sizeAnimation.minimumValue * pxRatio, this.size.value));\n                        break;\n                    case Enums_1.StartValueType.max:\n                    default:\n                        this.size.status = Enums_1.AnimationStatus.decreasing;\n                        break;\n                }\n            }\n            this.size.velocity =\n                (((_g = this.sizeAnimationSpeed) !== null && _g !== void 0 ? _g : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= Math.random();\n            }\n        }\n        const hslColor = Utils_1.ColorUtils.colorToHsl(color, this.id, reduceDuplicates);\n        if (hslColor) {\n            this.color = {\n                h: {\n                    value: hslColor.h,\n                },\n                s: {\n                    value: hslColor.s,\n                },\n                l: {\n                    value: hslColor.l,\n                },\n            };\n            const colorAnimation = this.options.color.animation;\n            this.setColorAnimation(colorAnimation.h, this.color.h);\n            this.setColorAnimation(colorAnimation.s, this.color.s);\n            this.setColorAnimation(colorAnimation.l, this.color.l);\n        }\n        this.position = this.calcPosition(this.container, position);\n        this.initialPosition = this.position.copy();\n        this.offset = Vector_1.Vector.create(0, 0);\n        const opacityOptions = this.options.opacity;\n        const randomOpacity = typeof opacityOptions.random === \"boolean\" ? opacityOptions.random : opacityOptions.random.enable;\n        this.opacity = {\n            value: Utils_1.NumberUtils.getValue(opacityOptions),\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            this.opacity.status = Enums_1.AnimationStatus.increasing;\n            if (!randomOpacity) {\n                switch (opacityAnimation.startValue) {\n                    case Enums_1.StartValueType.min:\n                        this.opacity.value = opacityAnimation.minimumValue;\n                        break;\n                    case Enums_1.StartValueType.random:\n                        this.opacity.value = Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(opacityAnimation.minimumValue, this.opacity.value));\n                        break;\n                    case Enums_1.StartValueType.max:\n                    default:\n                        this.opacity.status = Enums_1.AnimationStatus.decreasing;\n                        break;\n                }\n            }\n            this.opacity.velocity = (opacityAnimation.speed / 100) * container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                this.opacity.velocity *= Math.random();\n            }\n        }\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = Utils_1.Plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        const imageShape = this.loadImageShape(container, drawer);\n        if (imageShape) {\n            this.image = imageShape.image;\n            this.fill = imageShape.fill;\n            this.close = imageShape.close;\n        }\n        this.stroke =\n            this.options.stroke instanceof Array\n                ? Utils_1.Utils.itemFromArray(this.options.stroke, this.id, reduceDuplicates)\n                : this.options.stroke;\n        this.strokeWidth = this.stroke.width * container.retina.pixelRatio;\n        const strokeHslColor = (_h = Utils_1.ColorUtils.colorToHsl(this.stroke.color)) !== null && _h !== void 0 ? _h : this.getFillColor();\n        if (strokeHslColor) {\n            this.strokeColor = {\n                h: {\n                    value: strokeHslColor.h,\n                },\n                s: {\n                    value: strokeHslColor.s,\n                },\n                l: {\n                    value: strokeHslColor.l,\n                },\n            };\n            const strokeColorAnimation = (_j = this.stroke.color) === null || _j === void 0 ? void 0 : _j.animation;\n            if (strokeColorAnimation && this.strokeColor) {\n                this.setColorAnimation(strokeColorAnimation.h, this.strokeColor.h);\n                this.setColorAnimation(strokeColorAnimation.s, this.strokeColor.s);\n                this.setColorAnimation(strokeColorAnimation.l, this.strokeColor.l);\n            }\n        }\n        const lifeOptions = particlesOptions.life;\n        this.lifeDelay = container.retina.reduceFactor\n            ? ((Utils_1.NumberUtils.getValue(lifeOptions.delay) * (lifeOptions.delay.sync ? 1 : Math.random())) /\n                container.retina.reduceFactor) *\n                1000\n            : 0;\n        this.lifeDelayTime = 0;\n        this.lifeDuration = container.retina.reduceFactor\n            ? ((Utils_1.NumberUtils.getValue(lifeOptions.duration) * (lifeOptions.duration.sync ? 1 : Math.random())) /\n                container.retina.reduceFactor) *\n                1000\n            : 0;\n        this.lifeTime = 0;\n        this.livesRemaining = particlesOptions.life.count;\n        this.spawning = this.lifeDelay > 0;\n        if (this.lifeDuration <= 0) {\n            this.lifeDuration = -1;\n        }\n        if (this.livesRemaining <= 0) {\n            this.livesRemaining = -1;\n        }\n        this.shadowColor = Utils_1.ColorUtils.colorToRgb(this.options.shadow.color);\n        this.updater = new Updater_1.Updater(container, this);\n        this.infecter = new Infecter_1.Infecter(container);\n        this.mover = new Mover_1.Mover(container, this);\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n    }\n    move(delta) {\n        this.mover.move(delta);\n    }\n    update(delta) {\n        this.updater.update(delta);\n    }\n    draw(delta) {\n        this.container.canvas.drawParticle(this, delta);\n    }\n    getPosition() {\n        return this.position.add(this.offset);\n    }\n    getRadius() {\n        return this.bubble.radius || this.size.value;\n    }\n    getMass() {\n        const radius = this.getRadius();\n        return (Math.pow(radius, 2) * Math.PI) / 2;\n    }\n    getFillColor() {\n        var _a;\n        return (_a = this.bubble.color) !== null && _a !== void 0 ? _a : Utils_1.ColorUtils.getHslFromAnimation(this.color);\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : Utils_1.ColorUtils.getHslFromAnimation(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n    destroy(override) {\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.links = [];\n        if (this.unbreakable) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        if (override) {\n            return;\n        }\n        const destroyOptions = this.options.destroy;\n        if (destroyOptions.mode === Enums_1.DestroyMode.split) {\n            this.split();\n        }\n    }\n    reset() {\n        this.loops.opacity = 0;\n        this.loops.size = 0;\n    }\n    split() {\n        const splitOptions = this.options.destroy.split;\n        if (splitOptions.count >= 0 && this.splitCount++ > splitOptions.count) {\n            return;\n        }\n        const rate = Utils_1.NumberUtils.getRangeValue(splitOptions.rate.value);\n        for (let i = 0; i < rate; i++) {\n            this.container.particles.addSplitParticle(this);\n        }\n    }\n    setColorAnimation(colorAnimation, colorValue) {\n        if (colorAnimation.enable) {\n            colorValue.velocity = (colorAnimation.speed / 100) * this.container.retina.reduceFactor;\n            if (colorAnimation.sync) {\n                return;\n            }\n            colorValue.status = Enums_1.AnimationStatus.increasing;\n            colorValue.velocity *= Math.random();\n            if (colorValue.value) {\n                colorValue.value *= Math.random();\n            }\n        }\n        else {\n            colorValue.velocity = 0;\n        }\n    }\n    calcPosition(container, position, tryCount = 0) {\n        var _a, _b;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector_1.Vector.create(pluginPos.x, pluginPos.y);\n            }\n        }\n        const pos = Vector_1.Vector.create((_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * container.canvas.size.width, (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * container.canvas.size.height);\n        const outMode = this.options.move.outMode;\n        if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceHorizontal)) {\n            if (pos.x > container.canvas.size.width - this.size.value * 2) {\n                pos.x -= this.size.value;\n            }\n            else if (pos.x < this.size.value * 2) {\n                pos.x += this.size.value;\n            }\n        }\n        if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceVertical)) {\n            if (pos.y > container.canvas.size.height - this.size.value * 2) {\n                pos.y -= this.size.value;\n            }\n            else if (pos.y < this.size.value * 2) {\n                pos.y += this.size.value;\n            }\n        }\n        if (this.checkOverlap(pos, tryCount)) {\n            return this.calcPosition(container, undefined, tryCount + 1);\n        }\n        return pos;\n    }\n    checkOverlap(pos, tryCount = 0) {\n        const overlapOptions = this.options.collisions.overlap;\n        if (!overlapOptions.enable) {\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(\"Particle is overlapping and can't be placed\");\n            }\n            let overlaps = false;\n            for (const particle of this.container.particles.array) {\n                if (Utils_1.NumberUtils.getDistance(pos, particle.position) < this.size.value + particle.size.value) {\n                    overlaps = true;\n                    break;\n                }\n            }\n            return overlaps;\n        }\n        return false;\n    }\n    calculateVelocity() {\n        const baseVelocity = Utils_1.NumberUtils.getParticleBaseVelocity(this.direction);\n        const res = baseVelocity.copy();\n        const moveOptions = this.options.move;\n        let rad;\n        let radOffset = Math.PI / 4;\n        if (typeof moveOptions.angle === \"number\") {\n            rad = (Math.PI / 180) * moveOptions.angle;\n        }\n        else {\n            rad = (Math.PI / 180) * moveOptions.angle.value;\n            radOffset = (Math.PI / 180) * moveOptions.angle.offset;\n        }\n        const range = {\n            left: Math.sin(radOffset + rad / 2) - Math.sin(radOffset - rad / 2),\n            right: Math.cos(radOffset + rad / 2) - Math.cos(radOffset - rad / 2),\n        };\n        if (!moveOptions.straight || moveOptions.random) {\n            res.x += Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(range.left, range.right)) / 2;\n            res.y += Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(range.left, range.right)) / 2;\n        }\n        return res;\n    }\n    loadImageShape(container, drawer) {\n        var _a, _b, _c, _d, _e;\n        if (!(this.shape === Enums_1.ShapeType.image || this.shape === Enums_1.ShapeType.images)) {\n            return;\n        }\n        const imageDrawer = drawer;\n        const images = imageDrawer.getImages(container).images;\n        const imageData = this.shapeData;\n        const image = (_a = images.find((t) => t.source === imageData.src)) !== null && _a !== void 0 ? _a : images[0];\n        const color = this.getFillColor();\n        let imageRes;\n        if (!image) {\n            return;\n        }\n        if (image.svgData !== undefined && imageData.replaceColor && color) {\n            const svgColoredData = Utils_1.ColorUtils.replaceColorSvg(image, color, this.opacity.value);\n            const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" });\n            const domUrl = URL || window.URL || window.webkitURL || window;\n            const url = domUrl.createObjectURL(svg);\n            const img = new Image();\n            imageRes = {\n                data: image,\n                loaded: false,\n                ratio: imageData.width / imageData.height,\n                replaceColor: (_b = imageData.replaceColor) !== null && _b !== void 0 ? _b : imageData.replace_color,\n                source: imageData.src,\n            };\n            img.addEventListener(\"load\", () => {\n                if (this.image) {\n                    this.image.loaded = true;\n                    image.element = img;\n                }\n                domUrl.revokeObjectURL(url);\n            });\n            img.addEventListener(\"error\", () => {\n                domUrl.revokeObjectURL(url);\n                Utils_1.Utils.loadImage(imageData.src).then((img2) => {\n                    if (this.image && img2) {\n                        image.element = img2.element;\n                        this.image.loaded = true;\n                    }\n                });\n            });\n            img.src = url;\n        }\n        else {\n            imageRes = {\n                data: image,\n                loaded: true,\n                ratio: imageData.width / imageData.height,\n                replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n                source: imageData.src,\n            };\n        }\n        if (!imageRes.ratio) {\n            imageRes.ratio = 1;\n        }\n        const fill = (_d = imageData.fill) !== null && _d !== void 0 ? _d : this.fill;\n        const close = (_e = imageData.close) !== null && _e !== void 0 ? _e : this.close;\n        return {\n            image: imageRes,\n            fill,\n            close,\n        };\n    }\n}\nexports.Particle = Particle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Grabber = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nclass Grabber {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const mouse = container.interactivity.mouse;\n        const events = container.actualOptions.interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        return Utils_1.Utils.isInArray(Modes_1.HoverMode.grab, hoverMode);\n    }\n    reset() {\n    }\n    interact() {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const interactivity = options.interactivity;\n        if (interactivity.events.onHover.enable && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n            const mousePos = container.interactivity.mouse.position;\n            if (mousePos === undefined) {\n                return;\n            }\n            const distance = container.retina.grabModeDistance;\n            const query = container.particles.quadTree.queryCircle(mousePos, distance);\n            for (const particle of query) {\n                const pos = particle.getPosition();\n                const pointDistance = Utils_1.NumberUtils.getDistance(pos, mousePos);\n                if (pointDistance <= distance) {\n                    const grabLineOptions = interactivity.modes.grab.links;\n                    const lineOpacity = grabLineOptions.opacity;\n                    const opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n                    if (opacityLine > 0) {\n                        const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.options.links.color;\n                        if (!container.particles.grabLineColor) {\n                            const linksOptions = container.actualOptions.interactivity.modes.grab.links;\n                            container.particles.grabLineColor = Utils_1.ColorUtils.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n                        }\n                        const colorLine = Utils_1.ColorUtils.getLinkColor(particle, undefined, container.particles.grabLineColor);\n                        if (colorLine === undefined) {\n                            return;\n                        }\n                        container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n                    }\n                }\n            }\n        }\n    }\n}\nexports.Grabber = Grabber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Repulser = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nconst Vector_1 = require(\"../../Core/Particle/Vector\");\nclass Repulser {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        const divs = events.onDiv;\n        const divRepulse = Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.repulse, divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return (Utils_1.Utils.isInArray(Enums_1.HoverMode.repulse, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.repulse, clickMode) || divRepulse);\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n        const events = options.interactivity.events;\n        const hoverEnabled = events.onHover.enable;\n        const hoverMode = events.onHover.mode;\n        const clickEnabled = events.onClick.enable;\n        const clickMode = events.onClick.mode;\n        const divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.repulse, hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.repulse, clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            Utils_1.Utils.divModeExecute(Enums_1.DivMode.repulse, divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container;\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item;\n            const pxRatio = container.retina.pixelRatio;\n            const pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            };\n            const repulseRadius = (elem.offsetWidth / 2) * pxRatio;\n            const area = div.type === Enums_1.DivType.circle\n                ? new Utils_1.Circle(pos.x, pos.y, repulseRadius)\n                : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n            const divs = container.actualOptions.interactivity.modes.repulse.divs;\n            const divRepulse = Utils_1.Utils.divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n    hoverRepulse() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const repulseRadius = container.retina.repulseModeDistance;\n        this.processRepulse(mousePos, repulseRadius, new Utils_1.Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(particle.position, position);\n            const normVec = {\n                x: dx / distance,\n                y: dy / distance,\n            };\n            const velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity.modes.repulse.speed) * 100;\n            const repulseFactor = Utils_1.NumberUtils.clamp((1 - Math.pow(distance / repulseRadius, 2)) * velocity, 0, 50);\n            particle.position.x += normVec.x * repulseFactor;\n            particle.position.y += normVec.y * repulseFactor;\n        }\n    }\n    clickRepulse() {\n        const container = this.container;\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance;\n            const repulseRadius = Math.pow(repulseDistance / 6, 3);\n            const mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Utils_1.Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius);\n            const query = container.particles.quadTree.query(range);\n            for (const particle of query) {\n                const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(mouseClickPos, particle.position);\n                const d = distance * distance;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const velocity = container.actualOptions.interactivity.modes.repulse.speed;\n                    const v = Vector_1.Vector.create(dx, dy);\n                    v.length = (-repulseRadius * velocity) / d;\n                    particle.velocity.setTo(v);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n}\nexports.Repulser = Repulser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bubbler = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue > optionsValue) {\n        const size = particleValue + (modeValue - optionsValue) * ratio;\n        return Utils_1.NumberUtils.clamp(size, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const size = particleValue - (optionsValue - modeValue) * ratio;\n        return Utils_1.NumberUtils.clamp(size, modeValue, particleValue);\n    }\n}\nclass Bubbler {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        const divs = events.onDiv;\n        const divBubble = Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.bubble, divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return (Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode) || divBubble);\n    }\n    reset(particle, force) {\n        if (!particle.bubble.inRange || force) {\n            delete particle.bubble.div;\n            delete particle.bubble.opacity;\n            delete particle.bubble.radius;\n            delete particle.bubble.color;\n        }\n    }\n    interact() {\n        const options = this.container.actualOptions;\n        const events = options.interactivity.events;\n        const onHover = events.onHover;\n        const onClick = events.onClick;\n        const hoverEnabled = onHover.enable;\n        const hoverMode = onHover.mode;\n        const clickEnabled = onClick.enable;\n        const clickMode = onClick.mode;\n        const divs = events.onDiv;\n        if (hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode)) {\n            this.hoverBubble();\n        }\n        else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode)) {\n            this.clickBubble();\n        }\n        else {\n            Utils_1.Utils.divModeExecute(Enums_1.DivMode.bubble, divs, (selector, div) => this.singleSelectorHover(selector, div));\n        }\n    }\n    singleSelectorHover(selector, div) {\n        const container = this.container;\n        const selectors = document.querySelectorAll(selector);\n        if (!selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item;\n            const pxRatio = container.retina.pixelRatio;\n            const pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            };\n            const repulseRadius = (elem.offsetWidth / 2) * pxRatio;\n            const area = div.type === Enums_1.DivType.circle\n                ? new Utils_1.Circle(pos.x, pos.y, repulseRadius)\n                : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n            const query = container.particles.quadTree.query(area);\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = container.actualOptions.interactivity.modes.bubble.divs;\n                const divBubble = Utils_1.Utils.divMode(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.reset(particle, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, divBubble);\n            }\n        });\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container;\n        const bubbleParam = data.bubbleObj.optValue;\n        if (bubbleParam === undefined) {\n            return;\n        }\n        const options = container.actualOptions;\n        const bubbleDuration = options.interactivity.modes.bubble.duration;\n        const bubbleDistance = container.retina.bubbleModeDistance;\n        const particlesParam = data.particlesObj.optValue;\n        const pObjBubble = data.bubbleObj.value;\n        const pObj = data.particlesObj.value || 0;\n        const type = data.type;\n        if (bubbleParam !== particlesParam) {\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === Enums_1.ProcessBubbleType.size) {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === Enums_1.ProcessBubbleType.opacity) {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === Enums_1.ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === Enums_1.ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else if (pObjBubble) {\n                if (type === Enums_1.ProcessBubbleType.size) {\n                    delete particle.bubble.radius;\n                }\n                if (type === Enums_1.ProcessBubbleType.opacity) {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n    }\n    clickBubble() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouseClickPos = container.interactivity.mouse.clickPosition;\n        if (mouseClickPos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance;\n        const query = container.particles.quadTree.queryCircle(mouseClickPos, distance);\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition();\n            const distMouse = Utils_1.NumberUtils.getDistance(pos, mouseClickPos);\n            const timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > options.interactivity.modes.bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: Utils_1.NumberUtils.getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: Enums_1.ProcessBubbleType.size,\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: options.interactivity.modes.bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: Utils_1.NumberUtils.getRangeMax(particle.options.opacity.value),\n                    value: particle.opacity.value,\n                },\n                type: Enums_1.ProcessBubbleType.opacity,\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= container.retina.bubbleModeDistance) {\n                    this.hoverBubbleColor(particle);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (mousePos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance;\n        const query = container.particles.quadTree.queryCircle(mousePos, distance);\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition();\n            const pointDistance = Utils_1.NumberUtils.getDistance(pos, mousePos);\n            const ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === Utils_1.Constants.mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container;\n        const modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size)\n            ? divBubble.size * container.retina.pixelRatio\n            : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = Utils_1.NumberUtils.getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a;\n        const options = this.container.actualOptions;\n        const modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n        if (modeOpacity === undefined) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = particle.opacity.value;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, Utils_1.NumberUtils.getRangeMax(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleColor(particle, divBubble) {\n        var _a;\n        const options = this.container.actualOptions;\n        if (particle.bubble.color === undefined) {\n            const modeColor = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.color) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.color;\n            if (modeColor === undefined) {\n                return;\n            }\n            const bubbleColor = modeColor instanceof Array ? Utils_1.Utils.itemFromArray(modeColor) : modeColor;\n            particle.bubble.color = Utils_1.ColorUtils.colorToHsl(bubbleColor);\n        }\n    }\n}\nexports.Bubbler = Bubbler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connector = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nclass Connector {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const mouse = container.interactivity.mouse;\n        const events = container.actualOptions.interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        return Utils_1.Utils.isInArray(Modes_1.HoverMode.connect, hoverMode);\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius);\n            const query = container.particles.quadTree.queryCircle(mousePos, distance);\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition();\n                    const distMax = Math.abs(container.retina.connectModeDistance);\n                    const xDiff = Math.abs(pos1.x - pos2.x);\n                    const yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        container.canvas.drawConnectLine(p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n}\nexports.Connector = Connector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Linker = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass Linker {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled(particle) {\n        return particle.options.links.enable;\n    }\n    reset() {\n    }\n    interact(p1) {\n        var _a;\n        const container = this.container;\n        const linkOpt1 = p1.options.links;\n        const optOpacity = linkOpt1.opacity;\n        const optDistance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n        const canvasSize = container.canvas.size;\n        const warp = linkOpt1.warp;\n        const pos1 = p1.getPosition();\n        const range = warp\n            ? new Utils_1.CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Utils_1.Circle(pos1.x, pos1.y, optDistance);\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 || !linkOpt2.enable || linkOpt1.id !== linkOpt2.id || p2.spawning || p2.destroyed) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            let distance = Utils_1.NumberUtils.getDistance(pos1, pos2);\n            if (warp) {\n                if (distance > optDistance) {\n                    const pos2NE = {\n                        x: pos2.x - canvasSize.width,\n                        y: pos2.y,\n                    };\n                    distance = Utils_1.NumberUtils.getDistance(pos1, pos2NE);\n                    if (distance > optDistance) {\n                        const pos2SE = {\n                            x: pos2.x - canvasSize.width,\n                            y: pos2.y - canvasSize.height,\n                        };\n                        distance = Utils_1.NumberUtils.getDistance(pos1, pos2SE);\n                        if (distance > optDistance) {\n                            const pos2SW = {\n                                x: pos2.x,\n                                y: pos2.y - canvasSize.height,\n                            };\n                            distance = Utils_1.NumberUtils.getDistance(pos1, pos2SW);\n                        }\n                    }\n                }\n            }\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            const linksOptions = p1.options.links;\n            let linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors.get(linksOptions.id)\n                : container.particles.linksColor;\n            if (!linkColor) {\n                const optColor = linksOptions.color;\n                linkColor = Utils_1.ColorUtils.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n                if (linksOptions.id !== undefined) {\n                    container.particles.linksColors.set(linksOptions.id, linkColor);\n                }\n                else {\n                    container.particles.linksColor = linkColor;\n                }\n            }\n            if (p2.links.map((t) => t.destination).indexOf(p1) === -1 &&\n                p1.links.map((t) => t.destination).indexOf(p2) === -1) {\n                p1.links.push({\n                    destination: p2,\n                    opacity: opacityLine,\n                });\n            }\n        }\n    }\n}\nexports.Linker = Linker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attractor = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass Attractor {\n    constructor(container) {\n        this.container = container;\n    }\n    interact(p1) {\n        var _a;\n        const container = this.container;\n        const distance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n        const pos1 = p1.getPosition();\n        const query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            const { dx, dy } = Utils_1.NumberUtils.getDistances(pos1, pos2);\n            const rotate = p1.options.move.attract.rotate;\n            const ax = dx / (rotate.x * 1000);\n            const ay = dy / (rotate.y * 1000);\n            p1.velocity.x -= ax;\n            p1.velocity.y -= ay;\n            p2.velocity.x += ax;\n            p2.velocity.y += ay;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\nexports.Attractor = Attractor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collider = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nfunction bounce(p1, p2) {\n    Utils_1.Utils.circleBounce(Utils_1.Utils.circleBounceDataFromParticle(p1), Utils_1.Utils.circleBounceDataFromParticle(p2));\n}\nfunction destroy(p1, p2) {\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n            p2.destroy();\n        }\n        else {\n            p1.destroy();\n        }\n    }\n}\nclass Collider {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n    interact(p1) {\n        const container = this.container;\n        const pos1 = p1.getPosition();\n        const query = container.particles.quadTree.queryCircle(pos1, p1.getRadius() * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            const dist = Utils_1.NumberUtils.getDistance(pos1, pos2);\n            const radius1 = p1.getRadius();\n            const radius2 = p2.getRadius();\n            const distP = radius1 + radius2;\n            if (dist <= distP) {\n                this.resolveCollision(p1, p2);\n            }\n        }\n    }\n    resolveCollision(p1, p2) {\n        switch (p1.options.collisions.mode) {\n            case Enums_1.CollisionMode.absorb: {\n                this.absorb(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.bounce: {\n                bounce(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.destroy: {\n                destroy(p1, p2);\n                break;\n            }\n        }\n    }\n    absorb(p1, p2) {\n        const container = this.container;\n        const fps = container.actualOptions.fpsLimit / 1000;\n        if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n            p2.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n            if (p1.getRadius() >= p2.getRadius()) {\n                const factor = Utils_1.NumberUtils.clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n                p1.size.value += factor;\n                p2.size.value -= factor;\n                if (p2.getRadius() <= container.retina.pixelRatio) {\n                    p2.size.value = 0;\n                    p2.destroy();\n                }\n            }\n            else {\n                const factor = Utils_1.NumberUtils.clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n                p1.size.value -= factor;\n                p2.size.value += factor;\n                if (p1.getRadius() <= container.retina.pixelRatio) {\n                    p1.size.value = 0;\n                    p1.destroy();\n                }\n            }\n        }\n    }\n}\nexports.Collider = Collider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Infecter = void 0;\nclass Infecter {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        return this.container.actualOptions.infection.enable;\n    }\n    reset() {\n    }\n    interact(p1, delta) {\n        var _a, _b;\n        const infecter1 = p1.infecter;\n        infecter1.updateInfection(delta.value);\n        if (infecter1.infectionStage === undefined) {\n            return;\n        }\n        const container = this.container;\n        const options = container.actualOptions;\n        const infectionOptions = options.infection;\n        if (!infectionOptions.enable || infectionOptions.stages.length < 1) {\n            return;\n        }\n        const infectionStage1 = infectionOptions.stages[infecter1.infectionStage];\n        const pxRatio = container.retina.pixelRatio;\n        const radius = p1.getRadius() * 2 + infectionStage1.radius * pxRatio;\n        const pos = p1.getPosition();\n        const infectedStage1 = (_a = infectionStage1.infectedStage) !== null && _a !== void 0 ? _a : infecter1.infectionStage;\n        const query = container.particles.quadTree.queryCircle(pos, radius);\n        const infections = infectionStage1.rate;\n        const neighbors = query.length;\n        for (const p2 of query) {\n            if (p2 === p1 ||\n                p2.destroyed ||\n                p2.spawning ||\n                !(p2.infecter.infectionStage === undefined || p2.infecter.infectionStage !== infecter1.infectionStage)) {\n                continue;\n            }\n            const infecter2 = p2.infecter;\n            if (Math.random() < infections / neighbors) {\n                if (infecter2.infectionStage === undefined) {\n                    infecter2.startInfection(infectedStage1);\n                }\n                else if (infecter2.infectionStage < infecter1.infectionStage) {\n                    infecter2.updateInfectionStage(infectedStage1);\n                }\n                else if (infecter2.infectionStage > infecter1.infectionStage) {\n                    const infectionStage2 = infectionOptions.stages[infecter2.infectionStage];\n                    const infectedStage2 = (_b = infectionStage2 === null || infectionStage2 === void 0 ? void 0 : infectionStage2.infectedStage) !== null && _b !== void 0 ? _b : infecter2.infectionStage;\n                    infecter1.updateInfectionStage(infectedStage2);\n                }\n            }\n        }\n    }\n}\nexports.Infecter = Infecter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrailMaker = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nclass TrailMaker {\n    constructor(container) {\n        this.container = container;\n        this.delay = 0;\n    }\n    interact(delta) {\n        if (!this.container.retina.reduceFactor) {\n            return;\n        }\n        const container = this.container;\n        const options = container.actualOptions;\n        const trailOptions = options.interactivity.modes.trail;\n        const optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this.delay < optDelay) {\n            this.delay += delta.value;\n        }\n        if (this.delay >= optDelay) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n            this.delay -= optDelay;\n        }\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        return ((mouse.clicking &&\n            mouse.inside &&\n            !!mouse.position &&\n            Utils_1.Utils.isInArray(Modes_1.ClickMode.trail, events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && Utils_1.Utils.isInArray(Modes_1.HoverMode.trail, events.onHover.mode)));\n    }\n    reset() {\n    }\n}\nexports.TrailMaker = TrailMaker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attractor = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nclass Attractor {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        if (!((events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode);\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n        const events = options.interactivity.events;\n        const hoverEnabled = events.onHover.enable;\n        const hoverMode = events.onHover.mode;\n        const clickEnabled = events.onClick.enable;\n        const clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode)) {\n            this.clickAttract();\n        }\n    }\n    hoverAttract() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(particle.position, position);\n            const normVec = {\n                x: dx / distance,\n                y: dy / distance,\n            };\n            const velocity = container.actualOptions.interactivity.modes.attract.speed;\n            const attractFactor = Utils_1.NumberUtils.clamp((1 - Math.pow(distance / attractRadius, 2)) * velocity, 0, 50);\n            particle.position.x -= normVec.x * attractFactor;\n            particle.position.y -= normVec.y * attractFactor;\n        }\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition;\n            if (!mousePos) {\n                return;\n            }\n            const attractRadius = container.retina.attractModeDistance;\n            this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n}\nexports.Attractor = Attractor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Lighter = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nclass Lighter {\n    constructor(container) {\n        this.container = container;\n    }\n    interact(particle) {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n            const mousePos = this.container.interactivity.mouse.position;\n            if (mousePos) {\n                container.canvas.drawParticleShadow(particle, mousePos);\n            }\n        }\n    }\n    isEnabled() {\n        const container = this.container;\n        const mouse = container.interactivity.mouse;\n        const events = container.actualOptions.interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        return Utils_1.Utils.isInArray(Modes_1.HoverMode.light, hoverMode);\n    }\n    reset() {\n    }\n}\nexports.Lighter = Lighter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Lighter = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Modes_1 = require(\"../../Enums/Modes\");\nclass Lighter {\n    constructor(container) {\n        this.container = container;\n    }\n    interact() {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            container.canvas.drawLight(mousePos);\n        }\n    }\n    isEnabled() {\n        const container = this.container;\n        const mouse = container.interactivity.mouse;\n        const events = container.actualOptions.interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        return Utils_1.Utils.isInArray(Modes_1.HoverMode.light, hoverMode);\n    }\n    reset() {\n    }\n}\nexports.Lighter = Lighter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bouncer = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nconst Vector_1 = require(\"../../Core/Particle/Vector\");\nclass Bouncer {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        const divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && Utils_1.Utils.isInArray(Enums_1.HoverMode.bounce, events.onHover.mode)) ||\n            Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.bounce, divs));\n    }\n    interact() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const events = options.interactivity.events;\n        const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n        const hoverEnabled = events.onHover.enable;\n        const hoverMode = events.onHover.mode;\n        const divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.bounce, hoverMode)) {\n            this.processMouseBounce();\n        }\n        else {\n            Utils_1.Utils.divModeExecute(Enums_1.DivMode.bounce, divs, (selector, div) => this.singleSelectorBounce(selector, div));\n        }\n    }\n    reset() {\n    }\n    processMouseBounce() {\n        const container = this.container;\n        const pxRatio = container.retina.pixelRatio;\n        const tolerance = 10 * pxRatio;\n        const mousePos = container.interactivity.mouse.position;\n        const radius = container.retina.bounceModeDistance;\n        if (mousePos) {\n            this.processBounce(mousePos, radius, new Utils_1.Circle(mousePos.x, mousePos.y, radius + tolerance));\n        }\n    }\n    singleSelectorBounce(selector, div) {\n        const container = this.container;\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item;\n            const pxRatio = container.retina.pixelRatio;\n            const pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            };\n            const radius = (elem.offsetWidth / 2) * pxRatio;\n            const tolerance = 10 * pxRatio;\n            const area = div.type === Enums_1.DivType.circle\n                ? new Utils_1.Circle(pos.x, pos.y, radius + tolerance)\n                : new Utils_1.Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n            this.processBounce(pos, radius, area);\n        });\n    }\n    processBounce(position, radius, area) {\n        const query = this.container.particles.quadTree.query(area);\n        for (const particle of query) {\n            if (area instanceof Utils_1.Circle) {\n                Utils_1.Utils.circleBounce(Utils_1.Utils.circleBounceDataFromParticle(particle), {\n                    position,\n                    radius,\n                    mass: (Math.pow(radius, 2) * Math.PI) / 2,\n                    velocity: Vector_1.Vector.create(0, 0),\n                    factor: {\n                        horizontal: 0,\n                        vertical: 0,\n                    },\n                });\n            }\n            else if (area instanceof Utils_1.Rectangle) {\n                Utils_1.Utils.rectBounce(particle, Utils_1.Utils.calculateBounds(position, radius));\n            }\n        }\n    }\n}\nexports.Bouncer = Bouncer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InteractionManager = void 0;\nconst Grabber_1 = require(\"../../Interactions/External/Grabber\");\nconst Repulser_1 = require(\"../../Interactions/External/Repulser\");\nconst Bubbler_1 = require(\"../../Interactions/External/Bubbler\");\nconst Connector_1 = require(\"../../Interactions/External/Connector\");\nconst Linker_1 = require(\"../../Interactions/Particles/Linker\");\nconst Attractor_1 = require(\"../../Interactions/Particles/Attractor\");\nconst Collider_1 = require(\"../../Interactions/Particles/Collider\");\nconst Infecter_1 = require(\"../../Interactions/Particles/Infecter\");\nconst TrailMaker_1 = require(\"../../Interactions/External/TrailMaker\");\nconst Attractor_2 = require(\"../../Interactions/External/Attractor\");\nconst Lighter_1 = require(\"../../Interactions/Particles/Lighter\");\nconst Lighter_2 = require(\"../../Interactions/External/Lighter\");\nconst Bouncer_1 = require(\"../../Interactions/External/Bouncer\");\nclass InteractionManager {\n    constructor(container) {\n        this.container = container;\n        this.externalInteractors = [\n            new Bouncer_1.Bouncer(container),\n            new Bubbler_1.Bubbler(container),\n            new Connector_1.Connector(container),\n            new Grabber_1.Grabber(container),\n            new Lighter_2.Lighter(container),\n            new Attractor_2.Attractor(container),\n            new Repulser_1.Repulser(container),\n            new TrailMaker_1.TrailMaker(container),\n        ];\n        this.particleInteractors = [\n            new Attractor_1.Attractor(container),\n            new Lighter_1.Lighter(container),\n            new Collider_1.Collider(container),\n            new Infecter_1.Infecter(container),\n            new Linker_1.Linker(container),\n        ];\n    }\n    init() {\n    }\n    externalInteract(delta) {\n        for (const interactor of this.externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this.externalInteractors) {\n            interactor.reset(particle);\n        }\n        for (const interactor of this.particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n}\nexports.InteractionManager = InteractionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particles = void 0;\nconst Particle_1 = require(\"./Particle\");\nconst Utils_1 = require(\"../Utils\");\nconst InteractionManager_1 = require(\"./Particle/InteractionManager\");\nconst ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\nclass Particles {\n    constructor(container) {\n        this.container = container;\n        this.nextId = 0;\n        this.array = [];\n        this.limit = 0;\n        this.linksFreq = new Map();\n        this.trianglesFreq = new Map();\n        this.interactionManager = new InteractionManager_1.InteractionManager(container);\n        const canvasSize = this.container.canvas.size;\n        this.linksColors = new Map();\n        this.quadTree = new Utils_1.QuadTree(new Utils_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n    }\n    get count() {\n        return this.array.length;\n    }\n    init() {\n        const container = this.container;\n        const options = container.actualOptions;\n        this.linksFreq = new Map();\n        this.trianglesFreq = new Map();\n        let handled = false;\n        for (const particle of options.manualParticles) {\n            const pos = particle.position\n                ? {\n                    x: (particle.position.x * container.canvas.size.width) / 100,\n                    y: (particle.position.y * container.canvas.size.height) / 100,\n                }\n                : undefined;\n            this.addParticle(pos, particle.options);\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n        if (options.infection.enable) {\n            for (let i = 0; i < options.infection.infections; i++) {\n                const notInfected = this.array.filter((p) => p.infecter.infectionStage === undefined);\n                const infected = Utils_1.Utils.itemFromArray(notInfected);\n                infected.infecter.startInfection(0);\n            }\n        }\n        this.interactionManager.init();\n        container.pathGenerator.init();\n    }\n    redraw() {\n        this.clear();\n        this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    removeAt(index, quantity, override) {\n        if (index >= 0 && index <= this.count) {\n            for (const particle of this.array.splice(index, quantity !== null && quantity !== void 0 ? quantity : 1)) {\n                particle.destroy(override);\n            }\n        }\n    }\n    remove(particle, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, override);\n    }\n    update(delta) {\n        const container = this.container;\n        const particlesToDelete = [];\n        container.pathGenerator.update();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.update !== undefined) {\n                plugin.update(delta);\n            }\n        }\n        for (const particle of this.array) {\n            const resizeFactor = this.container.canvas.resizeFactor;\n            if (resizeFactor) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.move(delta);\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Utils_1.Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        this.interactionManager.externalInteract(delta);\n        for (const particle of this.container.particles.array) {\n            particle.update(delta);\n            if (!particle.destroyed && !particle.spawning) {\n                this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    draw(delta) {\n        const container = this.container;\n        container.canvas.clear();\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new Utils_1.QuadTree(new Utils_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.array) {\n            p.draw(delta);\n        }\n    }\n    clear() {\n        this.array = [];\n    }\n    push(nb, mouse, overrideOptions) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const limit = options.particles.number.limit * container.density;\n        this.pushing = true;\n        if (limit > 0) {\n            const countToRemove = this.count + nb - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions);\n        }\n        this.pushing = false;\n    }\n    addParticle(position, overrideOptions) {\n        return this.pushParticle(position, overrideOptions);\n    }\n    addSplitParticle(parent) {\n        const splitOptions = parent.options.destroy.split;\n        const options = new ParticlesOptions_1.ParticlesOptions();\n        options.load(parent.options);\n        const factor = Utils_1.NumberUtils.getRangeValue(splitOptions.factor.value);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitOptions.particles);\n        const offset = Utils_1.NumberUtils.setRangeValue(-parent.size.value, parent.size.value);\n        const position = {\n            x: parent.position.x + Utils_1.NumberUtils.randomInRange(offset),\n            y: parent.position.y + Utils_1.NumberUtils.randomInRange(offset),\n        };\n        return this.pushParticle(position, options, (particle) => {\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = parent.splitCount + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    removeQuantity(quantity) {\n        this.removeAt(0, quantity);\n    }\n    getLinkFrequency(p1, p2) {\n        const key = `${Math.min(p1.id, p2.id)}_${Math.max(p1.id, p2.id)}`;\n        let res = this.linksFreq.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.linksFreq.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.trianglesFreq.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.trianglesFreq.set(key, res);\n        }\n        return res;\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        this.applyDensity(options.particles);\n    }\n    applyDensity(options) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number;\n        const densityFactor = this.initDensityFactor(numberOptions.density);\n        const optParticlesNumber = numberOptions.value;\n        const optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n        const particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor;\n        const particlesCount = this.count;\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber);\n        }\n    }\n    initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element;\n        const pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio * pxRatio * densityOptions.area);\n    }\n    pushParticle(position, overrideOptions, initializer) {\n        try {\n            const particle = new Particle_1.Particle(this.nextId, this.container, position, overrideOptions);\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.nextId++;\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\nexports.Particles = Particles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Retina = void 0;\nconst Utils_1 = require(\"../Utils\");\nclass Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container;\n        const options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n        const motionOptions = this.container.actualOptions.motion;\n        if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n            if (Utils_1.Utils.isSsr() || typeof matchMedia === \"undefined\" || !matchMedia) {\n                this.reduceFactor = 1;\n            }\n            else {\n                const mediaQuery = matchMedia(\"(prefers-reduced-motion: reduce)\");\n                if (mediaQuery) {\n                    this.handleMotionChange(mediaQuery);\n                    const handleChange = () => {\n                        this.handleMotionChange(mediaQuery);\n                        container.refresh().catch(() => {\n                        });\n                    };\n                    if (mediaQuery.addEventListener !== undefined) {\n                        mediaQuery.addEventListener(\"change\", handleChange);\n                    }\n                    else if (mediaQuery.addListener !== undefined) {\n                        mediaQuery.addListener(handleChange);\n                    }\n                }\n            }\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.linksDistance = particles.links.distance * ratio;\n        this.linksWidth = particles.links.width * ratio;\n        this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n        const modes = options.interactivity.modes;\n        this.connectModeDistance = modes.connect.distance * ratio;\n        this.connectModeRadius = modes.connect.radius * ratio;\n        this.grabModeDistance = modes.grab.distance * ratio;\n        this.repulseModeDistance = modes.repulse.distance * ratio;\n        this.bounceModeDistance = modes.bounce.distance * ratio;\n        this.attractModeDistance = modes.attract.distance * ratio;\n        this.slowModeRadius = modes.slow.radius * ratio;\n        this.bubbleModeDistance = modes.bubble.distance * ratio;\n        if (modes.bubble.size) {\n            this.bubbleModeSize = modes.bubble.size * ratio;\n        }\n    }\n    initParticle(particle) {\n        const particlesOptions = particle.options;\n        const ratio = this.pixelRatio;\n        particle.linksDistance = particlesOptions.links.distance * ratio;\n        particle.linksWidth = particlesOptions.links.width * ratio;\n        particle.moveDrift = Utils_1.NumberUtils.getRangeValue(particlesOptions.move.drift) * ratio;\n        particle.moveSpeed = Utils_1.NumberUtils.getRangeValue(particlesOptions.move.speed) * ratio;\n        particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n        particle.maxDistance = particlesOptions.move.distance * ratio;\n    }\n    handleMotionChange(mediaQuery) {\n        const options = this.container.actualOptions;\n        if (mediaQuery.matches) {\n            const motion = options.motion;\n            this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n    }\n}\nexports.Retina = Retina;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrameManager = void 0;\nclass FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    nextFrame(timestamp) {\n        try {\n            const container = this.container;\n            if (container.lastFrameTime !== undefined &&\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n                container.draw();\n                return;\n            }\n            const deltaValue = timestamp - container.lastFrameTime;\n            const delta = {\n                value: deltaValue,\n                factor: (60 * deltaValue) / 1000,\n            };\n            container.lastFrameTime = timestamp;\n            container.particles.draw(delta);\n            if (container.getAnimationStatus()) {\n                container.draw();\n            }\n        }\n        catch (e) {\n            console.error(\"tsParticles error in animation loop\", e);\n        }\n    }\n}\nexports.FrameManager = FrameManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClickEvent = void 0;\nclass ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\nexports.ClickEvent = ClickEvent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DivEvent = void 0;\nconst Enums_1 = require(\"../../../../Enums\");\nclass DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = Enums_1.DivType.circle;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get ids() {\n        return this.selectors instanceof Array\n            ? this.selectors.map((t) => t.replace(\"#\", \"\"))\n            : this.selectors.replace(\"#\", \"\");\n    }\n    set ids(value) {\n        this.selectors = value instanceof Array ? value.map((t) => `#${t}`) : `#${value}`;\n    }\n    load(data) {\n        var _a, _b;\n        if (data === undefined) {\n            return;\n        }\n        const ids = (_b = (_a = data.ids) !== null && _a !== void 0 ? _a : data.elementId) !== null && _b !== void 0 ? _b : data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\nexports.DivEvent = DivEvent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Parallax = void 0;\nclass Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\nexports.Parallax = Parallax;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HoverEvent = void 0;\nconst Parallax_1 = require(\"./Parallax\");\nclass HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax_1.Parallax();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\nexports.HoverEvent = HoverEvent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Events = void 0;\nconst ClickEvent_1 = require(\"./ClickEvent\");\nconst DivEvent_1 = require(\"./DivEvent\");\nconst HoverEvent_1 = require(\"./HoverEvent\");\nclass Events {\n    constructor() {\n        this.onClick = new ClickEvent_1.ClickEvent();\n        this.onDiv = new DivEvent_1.DivEvent();\n        this.onHover = new HoverEvent_1.HoverEvent();\n        this.resize = true;\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        this.onClick.load((_a = data.onClick) !== null && _a !== void 0 ? _a : data.onclick);\n        const onDiv = (_b = data.onDiv) !== null && _b !== void 0 ? _b : data.ondiv;\n        if (onDiv !== undefined) {\n            if (onDiv instanceof Array) {\n                this.onDiv = onDiv.map((div) => {\n                    const tmp = new DivEvent_1.DivEvent();\n                    tmp.load(div);\n                    return tmp;\n                });\n            }\n            else {\n                this.onDiv = new DivEvent_1.DivEvent();\n                this.onDiv.load(onDiv);\n            }\n        }\n        this.onHover.load((_c = data.onHover) !== null && _c !== void 0 ? _c : data.onhover);\n        if (data.resize !== undefined) {\n            this.resize = data.resize;\n        }\n    }\n}\nexports.Events = Events;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BubbleBase = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            if (data.color instanceof Array) {\n                this.color = data.color.map((s) => OptionsColor_1.OptionsColor.create(undefined, s));\n            }\n            else {\n                if (this.color instanceof Array) {\n                    this.color = new OptionsColor_1.OptionsColor();\n                }\n                this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\nexports.BubbleBase = BubbleBase;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BubbleDiv = void 0;\nconst BubbleBase_1 = require(\"./BubbleBase\");\nclass BubbleDiv extends BubbleBase_1.BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return this.selectors instanceof Array\n            ? this.selectors.map((t) => t.replace(\"#\", \"\"))\n            : this.selectors.replace(\"#\", \"\");\n    }\n    set ids(value) {\n        this.selectors = value instanceof Array ? value.map((t) => `#${t}`) : `#${value}`;\n    }\n    load(data) {\n        super.load(data);\n        if (data === undefined) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\nexports.BubbleDiv = BubbleDiv;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bubble = void 0;\nconst BubbleDiv_1 = require(\"./BubbleDiv\");\nconst BubbleBase_1 = require(\"./BubbleBase\");\nclass Bubble extends BubbleBase_1.BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!(data !== undefined && data.divs !== undefined)) {\n            return;\n        }\n        if (data.divs instanceof Array) {\n            this.divs = data.divs.map((s) => {\n                const tmp = new BubbleDiv_1.BubbleDiv();\n                tmp.load(s);\n                return tmp;\n            });\n        }\n        else {\n            if (this.divs instanceof Array || !this.divs) {\n                this.divs = new BubbleDiv_1.BubbleDiv();\n            }\n            this.divs.load(data.divs);\n        }\n    }\n}\nexports.Bubble = Bubble;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectLinks = void 0;\nclass ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!(data !== undefined && data.opacity !== undefined)) {\n            return;\n        }\n        this.opacity = data.opacity;\n    }\n}\nexports.ConnectLinks = ConnectLinks;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connect = void 0;\nconst ConnectLinks_1 = require(\"./ConnectLinks\");\nclass Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks_1.ConnectLinks();\n        this.radius = 60;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (data === undefined) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\nexports.Connect = Connect;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GrabLinks = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\nexports.GrabLinks = GrabLinks;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Grab = void 0;\nconst GrabLinks_1 = require(\"./GrabLinks\");\nclass Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks_1.GrabLinks();\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (data === undefined) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n    }\n}\nexports.Grab = Grab;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Remove = void 0;\nclass Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\nexports.Remove = Remove;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Push = void 0;\nclass Push {\n    constructor() {\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\nexports.Push = Push;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RepulseBase = void 0;\nclass RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.speed = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\nexports.RepulseBase = RepulseBase;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RepulseDiv = void 0;\nconst RepulseBase_1 = require(\"./RepulseBase\");\nclass RepulseDiv extends RepulseBase_1.RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        if (this.selectors instanceof Array) {\n            return this.selectors.map((t) => t.replace(\"#\", \"\"));\n        }\n        else {\n            return this.selectors.replace(\"#\", \"\");\n        }\n    }\n    set ids(value) {\n        if (value instanceof Array) {\n            this.selectors = value.map(() => `#${value}`);\n        }\n        else {\n            this.selectors = `#${value}`;\n        }\n    }\n    load(data) {\n        super.load(data);\n        if (data === undefined) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\nexports.RepulseDiv = RepulseDiv;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Repulse = void 0;\nconst RepulseDiv_1 = require(\"./RepulseDiv\");\nconst RepulseBase_1 = require(\"./RepulseBase\");\nclass Repulse extends RepulseBase_1.RepulseBase {\n    load(data) {\n        super.load(data);\n        if ((data === null || data === void 0 ? void 0 : data.divs) === undefined) {\n            return;\n        }\n        if (data.divs instanceof Array) {\n            this.divs = data.divs.map((s) => {\n                const tmp = new RepulseDiv_1.RepulseDiv();\n                tmp.load(s);\n                return tmp;\n            });\n        }\n        else {\n            if (this.divs instanceof Array || !this.divs) {\n                this.divs = new RepulseDiv_1.RepulseDiv();\n            }\n            this.divs.load(data.divs);\n        }\n    }\n}\nexports.Repulse = Repulse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Slow = void 0;\nclass Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    get active() {\n        return false;\n    }\n    set active(_value) {\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\nexports.Slow = Slow;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Trail = void 0;\nconst Utils_1 = require(\"../../../../Utils\");\nclass Trail {\n    constructor() {\n        this.delay = 1;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = Utils_1.Utils.deepExtend({}, data.particles);\n        }\n    }\n}\nexports.Trail = Trail;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attract = void 0;\nclass Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.speed = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\nexports.Attract = Attract;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LightGradient = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass LightGradient {\n    constructor() {\n        this.start = new OptionsColor_1.OptionsColor();\n        this.stop = new OptionsColor_1.OptionsColor();\n        this.start.value = \"#ffffff\";\n        this.stop.value = \"#000000\";\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.start = OptionsColor_1.OptionsColor.create(this.start, data.start);\n        this.stop = OptionsColor_1.OptionsColor.create(this.stop, data.stop);\n    }\n}\nexports.LightGradient = LightGradient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LightArea = void 0;\nconst LightGradient_1 = require(\"./LightGradient\");\nclass LightArea {\n    constructor() {\n        this.gradient = new LightGradient_1.LightGradient();\n        this.radius = 1000;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.gradient.load(data.gradient);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\nexports.LightArea = LightArea;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LightShadow = void 0;\nconst OptionsColor_1 = require(\"../../OptionsColor\");\nclass LightShadow {\n    constructor() {\n        this.color = new OptionsColor_1.OptionsColor();\n        this.color.value = \"#000000\";\n        this.length = 2000;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\nexports.LightShadow = LightShadow;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Light = void 0;\nconst LightArea_1 = require(\"./LightArea\");\nconst LightShadow_1 = require(\"./LightShadow\");\nclass Light {\n    constructor() {\n        this.area = new LightArea_1.LightArea();\n        this.shadow = new LightShadow_1.LightShadow();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.area.load(data.area);\n        this.shadow.load(data.shadow);\n    }\n}\nexports.Light = Light;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bounce = void 0;\nclass Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\nexports.Bounce = Bounce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Modes = void 0;\nconst Bubble_1 = require(\"./Bubble\");\nconst Connect_1 = require(\"./Connect\");\nconst Grab_1 = require(\"./Grab\");\nconst Remove_1 = require(\"./Remove\");\nconst Push_1 = require(\"./Push\");\nconst Repulse_1 = require(\"./Repulse\");\nconst Slow_1 = require(\"./Slow\");\nconst Trail_1 = require(\"./Trail\");\nconst Attract_1 = require(\"./Attract\");\nconst Light_1 = require(\"./Light\");\nconst Bounce_1 = require(\"./Bounce\");\nclass Modes {\n    constructor() {\n        this.attract = new Attract_1.Attract();\n        this.bounce = new Bounce_1.Bounce();\n        this.bubble = new Bubble_1.Bubble();\n        this.connect = new Connect_1.Connect();\n        this.grab = new Grab_1.Grab();\n        this.light = new Light_1.Light();\n        this.push = new Push_1.Push();\n        this.remove = new Remove_1.Remove();\n        this.repulse = new Repulse_1.Repulse();\n        this.slow = new Slow_1.Slow();\n        this.trail = new Trail_1.Trail();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.attract.load(data.attract);\n        this.bubble.load(data.bubble);\n        this.connect.load(data.connect);\n        this.grab.load(data.grab);\n        this.light.load(data.light);\n        this.push.load(data.push);\n        this.remove.load(data.remove);\n        this.repulse.load(data.repulse);\n        this.slow.load(data.slow);\n        this.trail.load(data.trail);\n    }\n}\nexports.Modes = Modes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Interactivity = void 0;\nconst Enums_1 = require(\"../../../Enums\");\nconst Events_1 = require(\"./Events/Events\");\nconst Modes_1 = require(\"./Modes/Modes\");\nclass Interactivity {\n    constructor() {\n        this.detectsOn = Enums_1.InteractivityDetect.canvas;\n        this.events = new Events_1.Events();\n        this.modes = new Modes_1.Modes();\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        const detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n        if (((_c = (_b = data.modes) === null || _b === void 0 ? void 0 : _b.slow) === null || _c === void 0 ? void 0 : _c.active) === true) {\n            if (this.events.onHover.mode instanceof Array) {\n                if (this.events.onHover.mode.indexOf(Enums_1.HoverMode.slow) < 0) {\n                    this.events.onHover.mode.push(Enums_1.HoverMode.slow);\n                }\n            }\n            else if (this.events.onHover.mode !== Enums_1.HoverMode.slow) {\n                this.events.onHover.mode = [this.events.onHover.mode, Enums_1.HoverMode.slow];\n            }\n        }\n    }\n}\nexports.Interactivity = Interactivity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BackgroundMaskCover = void 0;\nconst OptionsColor_1 = require(\"../OptionsColor\");\nclass BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor_1.OptionsColor();\n        this.opacity = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\nexports.BackgroundMaskCover = BackgroundMaskCover;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BackgroundMask = void 0;\nconst BackgroundMaskCover_1 = require(\"./BackgroundMaskCover\");\nclass BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover_1.BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (typeof data.cover === \"string\" ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\nexports.BackgroundMask = BackgroundMask;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Background = void 0;\nconst OptionsColor_1 = require(\"../OptionsColor\");\nclass Background {\n    constructor() {\n        this.color = new OptionsColor_1.OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\nexports.Background = Background;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InfectionStage = void 0;\nconst OptionsColor_1 = require(\"../OptionsColor\");\nclass InfectionStage {\n    constructor() {\n        this.color = new OptionsColor_1.OptionsColor();\n        this.color.value = \"#ff0000\";\n        this.radius = 0;\n        this.rate = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        }\n        this.duration = data.duration;\n        this.infectedStage = data.infectedStage;\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n        if (data.rate !== undefined) {\n            this.rate = data.rate;\n        }\n    }\n}\nexports.InfectionStage = InfectionStage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Infection = void 0;\nconst InfectionStage_1 = require(\"./InfectionStage\");\nclass Infection {\n    constructor() {\n        this.cure = false;\n        this.delay = 0;\n        this.enable = false;\n        this.infections = 0;\n        this.stages = [];\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.cure !== undefined) {\n            this.cure = data.cure;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.infections !== undefined) {\n            this.infections = data.infections;\n        }\n        if (data.stages === undefined) {\n            return;\n        }\n        this.stages = data.stages.map((t) => {\n            const s = new InfectionStage_1.InfectionStage();\n            s.load(t);\n            return s;\n        });\n    }\n}\nexports.Infection = Infection;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ThemeDefault = void 0;\nconst Modes_1 = require(\"../../../Enums/Modes\");\nclass ThemeDefault {\n    constructor() {\n        this.mode = Modes_1.ThemeMode.any;\n        this.value = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\nexports.ThemeDefault = ThemeDefault;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Theme = void 0;\nconst Utils_1 = require(\"../../../Utils\");\nconst ThemeDefault_1 = require(\"./ThemeDefault\");\nclass Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault_1.ThemeDefault();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = Utils_1.Utils.deepExtend({}, data.options);\n        }\n    }\n}\nexports.Theme = Theme;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FullScreen = void 0;\nclass FullScreen {\n    constructor() {\n        this.enable = false;\n        this.zIndex = -1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\nexports.FullScreen = FullScreen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MotionReduce = void 0;\nclass MotionReduce {\n    constructor() {\n        this.factor = 4;\n        this.value = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\nexports.MotionReduce = MotionReduce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Motion = void 0;\nconst MotionReduce_1 = require(\"./MotionReduce\");\nclass Motion {\n    constructor() {\n        this.disable = false;\n        this.reduce = new MotionReduce_1.MotionReduce();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.disable !== undefined) {\n            this.disable = data.disable;\n        }\n        this.reduce.load(data.reduce);\n    }\n}\nexports.Motion = Motion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ManualParticle = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass ManualParticle {\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.position !== undefined) {\n            this.position = {\n                x: (_a = data.position.x) !== null && _a !== void 0 ? _a : 50,\n                y: (_b = data.position.y) !== null && _b !== void 0 ? _b : 50,\n            };\n        }\n        if (data.options !== undefined) {\n            this.options = Utils_1.Utils.deepExtend({}, data.options);\n        }\n    }\n}\nexports.ManualParticle = ManualParticle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Responsive = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.options !== undefined) {\n            this.options = Utils_1.Utils.deepExtend({}, data.options);\n        }\n    }\n}\nexports.Responsive = Responsive;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Options = void 0;\nconst Interactivity_1 = require(\"./Interactivity/Interactivity\");\nconst ParticlesOptions_1 = require(\"./Particles/ParticlesOptions\");\nconst BackgroundMask_1 = require(\"./BackgroundMask/BackgroundMask\");\nconst Background_1 = require(\"./Background/Background\");\nconst Infection_1 = require(\"./Infection/Infection\");\nconst Utils_1 = require(\"../../Utils\");\nconst Theme_1 = require(\"./Theme/Theme\");\nconst Enums_1 = require(\"../../Enums\");\nconst FullScreen_1 = require(\"./FullScreen/FullScreen\");\nconst Motion_1 = require(\"./Motion/Motion\");\nconst ManualParticle_1 = require(\"./ManualParticle\");\nconst Responsive_1 = require(\"./Responsive\");\nclass Options {\n    constructor() {\n        this.autoPlay = true;\n        this.background = new Background_1.Background();\n        this.backgroundMask = new BackgroundMask_1.BackgroundMask();\n        this.fullScreen = new FullScreen_1.FullScreen();\n        this.detectRetina = true;\n        this.fpsLimit = 60;\n        this.infection = new Infection_1.Infection();\n        this.interactivity = new Interactivity_1.Interactivity();\n        this.manualParticles = [];\n        this.motion = new Motion_1.Motion();\n        this.particles = new ParticlesOptions_1.ParticlesOptions();\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.themes = [];\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            if (data.preset instanceof Array) {\n                for (const preset of data.preset) {\n                    this.importPreset(preset);\n                }\n            }\n            else {\n                this.importPreset(data.preset);\n            }\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        this.background.load(data.background);\n        this.fullScreen.load((_c = data.fullScreen) !== null && _c !== void 0 ? _c : data.backgroundMode);\n        this.backgroundMask.load(data.backgroundMask);\n        this.infection.load(data.infection);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles !== undefined) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle_1.ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.motion.load(data.motion);\n        this.particles.load(data.particles);\n        Utils_1.Plugins.loadOptions(this, data);\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive_1.Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const optTheme = new Theme_1.Theme();\n                optTheme.load(theme);\n                this.themes.push(optTheme);\n            }\n        }\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const clientDarkMode = typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n            let defaultTheme = this.themes.find((theme) => theme.default.value &&\n                ((theme.default.mode === Enums_1.ThemeMode.dark && clientDarkMode) ||\n                    (theme.default.mode === Enums_1.ThemeMode.light && !clientDarkMode)));\n            if (!defaultTheme) {\n                defaultTheme = this.themes.find((theme) => theme.default.value && theme.default.mode === Enums_1.ThemeMode.any);\n            }\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n    importPreset(preset) {\n        this.load(Utils_1.Plugins.getPreset(preset));\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        var _a;\n        this.load(defaultOptions);\n        this.load((_a = this.responsive.find((t) => t.maxWidth * pxRatio > width)) === null || _a === void 0 ? void 0 : _a.options);\n    }\n}\nexports.Options = Options;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Container = void 0;\nconst Canvas_1 = require(\"./Canvas\");\nconst Particles_1 = require(\"./Particles\");\nconst Retina_1 = require(\"./Retina\");\nconst FrameManager_1 = require(\"./FrameManager\");\nconst Options_1 = require(\"../Options/Classes/Options\");\nconst Utils_1 = require(\"../Utils\");\nconst Vector_1 = require(\"./Particle/Vector\");\nclass Container {\n    constructor(id, sourceOptions, ...presets) {\n        this.id = id;\n        this.fpsLimit = 60;\n        this.firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this.paused = true;\n        this.lastFrameTime = 0;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this.retina = new Retina_1.Retina(this);\n        this.canvas = new Canvas_1.Canvas(this);\n        this.particles = new Particles_1.Particles(this);\n        this.drawer = new FrameManager_1.FrameManager(this);\n        this.pathGenerator = {\n            generate: () => {\n                const v = Vector_1.Vector.create(0, 0);\n                v.length = Math.random();\n                v.angle = Math.random() * Math.PI * 2;\n                return v;\n            },\n            init: () => {\n            },\n            update: () => {\n            },\n        };\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.bubble = {};\n        this.repulse = { particles: [] };\n        this.attract = { particles: [] };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this.density = 1;\n        this._options = new Options_1.Options();\n        this.actualOptions = new Options_1.Options();\n        for (const preset of presets) {\n            this._options.load(Utils_1.Plugins.getPreset(preset));\n        }\n        const shapes = Utils_1.Plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = Utils_1.Plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        if (this._options) {\n            this._options.load(this._sourceOptions);\n        }\n        this.eventListeners = new Utils_1.EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this.intersectionObserver = new IntersectionObserver((entries) => this.intersectionManager(entries));\n        }\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    play(force) {\n        const needsUpdate = this.paused || force;\n        if (this.firstStart && !this.actualOptions.autoPlay) {\n            this.firstStart = false;\n            return;\n        }\n        if (this.paused) {\n            this.paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n            this.lastFrameTime = performance.now();\n        }\n        this.draw();\n    }\n    pause() {\n        if (this.drawAnimationFrame !== undefined) {\n            Utils_1.Utils.cancelAnimation(this.drawAnimationFrame);\n            delete this.drawAnimationFrame;\n        }\n        if (this.paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this.paused = true;\n        }\n    }\n    draw() {\n        this.drawAnimationFrame = Utils_1.Utils.animate((timestamp) => this.drawer.nextFrame(timestamp));\n    }\n    getAnimationStatus() {\n        return !this.paused;\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator) {\n            return;\n        }\n        if (typeof pathOrGenerator === \"function\") {\n            this.pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                this.pathGenerator.init = init;\n            }\n            if (update) {\n                this.pathGenerator.update = update;\n            }\n        }\n        else {\n            if (pathOrGenerator.generate) {\n                this.pathGenerator.generate = pathOrGenerator.generate;\n            }\n            if (pathOrGenerator.init) {\n                this.pathGenerator.init = pathOrGenerator.init;\n            }\n            if (pathOrGenerator.update) {\n                this.pathGenerator.update = pathOrGenerator.update;\n            }\n        }\n    }\n    destroy() {\n        this.stop();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this.destroyed = true;\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    exportImage(callback, type, quality) {\n        var _a;\n        return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, undefined, 2);\n    }\n    refresh() {\n        this.stop();\n        return this.start();\n    }\n    reset() {\n        this._options = new Options_1.Options();\n        return this.refresh();\n    }\n    stop() {\n        if (!this.started) {\n            return;\n        }\n        this.firstStart = true;\n        this.started = false;\n        this.eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.clear();\n        if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n            this.intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this.particles.linksColors = new Map();\n        delete this.particles.grabLineColor;\n        delete this.particles.linksColor;\n    }\n    loadTheme(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.actualOptions.setTheme(name);\n            yield this.refresh();\n        });\n    }\n    start() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.started) {\n                return;\n            }\n            yield this.init();\n            this.started = true;\n            this.eventListeners.addListeners();\n            if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n                this.intersectionObserver.observe(this.interactivity.element);\n            }\n            for (const [, plugin] of this.plugins) {\n                if (plugin.startAsync !== undefined) {\n                    yield plugin.startAsync();\n                }\n                else if (plugin.start !== undefined) {\n                    plugin.start();\n                }\n            }\n            this.play();\n        });\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.actualOptions = new Options_1.Options();\n            this.actualOptions.load(this._options);\n            this.retina.init();\n            this.canvas.init();\n            this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n            this.actualOptions.setTheme(undefined);\n            this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 60;\n            const availablePlugins = Utils_1.Plugins.getAvailablePlugins(this);\n            for (const [id, plugin] of availablePlugins) {\n                this.plugins.set(id, plugin);\n            }\n            for (const [, drawer] of this.drawers) {\n                if (drawer.init) {\n                    yield drawer.init(this);\n                }\n            }\n            for (const [, plugin] of this.plugins) {\n                if (plugin.init) {\n                    plugin.init(this.actualOptions);\n                }\n                else if (plugin.initAsync !== undefined) {\n                    yield plugin.initAsync(this.actualOptions);\n                }\n            }\n            this.canvas.resize();\n            this.particles.init();\n            this.particles.setDensity();\n        });\n    }\n    intersectionManager(entries) {\n        if (!this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            if (entry.isIntersecting) {\n                this.play();\n            }\n            else {\n                this.pause();\n            }\n        }\n    }\n}\nexports.Container = Container;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Loader = void 0;\nconst Container_1 = require(\"./Container\");\nconst Utils_1 = require(\"../Utils\");\nconst tsParticlesDom = [];\nfunction fetchError(statusCode) {\n    console.error(`Error tsParticles - fetch status: ${statusCode}`);\n    console.error(\"Error tsParticles - File config not found\");\n}\nclass Loader {\n    static dom() {\n        return tsParticlesDom;\n    }\n    static domItem(index) {\n        const dom = Loader.dom();\n        const item = dom[index];\n        if (item && !item.destroyed) {\n            return item;\n        }\n        dom.splice(index, 1);\n    }\n    static load(tagId, options, index) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const domContainer = document.getElementById(tagId);\n            if (!domContainer) {\n                return;\n            }\n            return Loader.set(tagId, domContainer, options, index);\n        });\n    }\n    static set(id, domContainer, options, index) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentOptions = options instanceof Array ? Utils_1.Utils.itemFromArray(options, index) : options;\n            const dom = Loader.dom();\n            const oldIndex = dom.findIndex((v) => v.id === id);\n            if (oldIndex >= 0) {\n                const old = Loader.domItem(oldIndex);\n                if (old && !old.destroyed) {\n                    old.destroy();\n                    dom.splice(oldIndex, 1);\n                }\n            }\n            let canvasEl;\n            let generatedCanvas;\n            if (domContainer.tagName.toLowerCase() === \"canvas\") {\n                canvasEl = domContainer;\n                generatedCanvas = false;\n            }\n            else {\n                const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n                if (existingCanvases.length) {\n                    canvasEl = existingCanvases[0];\n                    if (!canvasEl.className) {\n                        canvasEl.className = Utils_1.Constants.canvasClass;\n                    }\n                    generatedCanvas = false;\n                }\n                else {\n                    generatedCanvas = true;\n                    canvasEl = document.createElement(\"canvas\");\n                    canvasEl.className = Utils_1.Constants.canvasClass;\n                    canvasEl.style.width = \"100%\";\n                    canvasEl.style.height = \"100%\";\n                    domContainer.appendChild(canvasEl);\n                }\n            }\n            const newItem = new Container_1.Container(id, currentOptions);\n            if (oldIndex >= 0) {\n                dom.splice(oldIndex, 0, newItem);\n            }\n            else {\n                dom.push(newItem);\n            }\n            newItem.canvas.loadCanvas(canvasEl, generatedCanvas);\n            yield newItem.start();\n            return newItem;\n        });\n    }\n    static loadJSON(tagId, jsonUrl, index) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = jsonUrl instanceof Array ? Utils_1.Utils.itemFromArray(jsonUrl, index) : jsonUrl;\n            const response = yield fetch(url);\n            if (response.ok) {\n                return Loader.load(tagId, yield response.json());\n            }\n            else {\n                fetchError(response.status);\n            }\n        });\n    }\n    static setJSON(id, domContainer, jsonUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield fetch(jsonUrl);\n            if (response.ok) {\n                const options = yield response.json();\n                return Loader.set(id, domContainer, options);\n            }\n            else {\n                fetchError(response.status);\n            }\n        });\n    }\n    static setOnClickHandler(callback) {\n        const dom = Loader.dom();\n        if (dom.length === 0) {\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n        }\n        for (const domItem of dom) {\n            const el = domItem.interactivity.element;\n            if (!el) {\n                continue;\n            }\n            const clickOrTouchHandler = (e, pos) => {\n                if (domItem.destroyed) {\n                    return;\n                }\n                const pxRatio = domItem.retina.pixelRatio;\n                const posRetina = {\n                    x: pos.x * pxRatio,\n                    y: pos.y * pxRatio,\n                };\n                const particles = domItem.particles.quadTree.queryCircle(posRetina, domItem.retina.sizeValue);\n                callback(e, particles);\n            };\n            const clickHandler = (e) => {\n                if (domItem.destroyed) {\n                    return;\n                }\n                const mouseEvent = e;\n                const pos = {\n                    x: mouseEvent.offsetX || mouseEvent.clientX,\n                    y: mouseEvent.offsetY || mouseEvent.clientY,\n                };\n                clickOrTouchHandler(e, pos);\n            };\n            const touchStartHandler = () => {\n                if (domItem.destroyed) {\n                    return;\n                }\n                touched = true;\n                touchMoved = false;\n            };\n            const touchMoveHandler = () => {\n                if (domItem.destroyed) {\n                    return;\n                }\n                touchMoved = true;\n            };\n            const touchEndHandler = (e) => {\n                var _a, _b, _c;\n                if (domItem.destroyed) {\n                    return;\n                }\n                if (touched && !touchMoved) {\n                    const touchEvent = e;\n                    const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                    const canvasRect = (_a = domItem.canvas.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n                    const pos = {\n                        x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n                        y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0),\n                    };\n                    clickOrTouchHandler(e, pos);\n                }\n                touched = false;\n                touchMoved = false;\n            };\n            const touchCancelHandler = () => {\n                if (domItem.destroyed) {\n                    return;\n                }\n                touched = false;\n                touchMoved = false;\n            };\n            let touched = false;\n            let touchMoved = false;\n            el.addEventListener(\"click\", clickHandler);\n            el.addEventListener(\"touchstart\", touchStartHandler);\n            el.addEventListener(\"touchmove\", touchMoveHandler);\n            el.addEventListener(\"touchend\", touchEndHandler);\n            el.addEventListener(\"touchcancel\", touchCancelHandler);\n        }\n    }\n}\nexports.Loader = Loader;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n};\nvar _initialized;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MainSlim = void 0;\nconst SquareDrawer_1 = require(\"./ShapeDrawers/SquareDrawer\");\nconst TextDrawer_1 = require(\"./ShapeDrawers/TextDrawer\");\nconst ImageDrawer_1 = require(\"./ShapeDrawers/ImageDrawer\");\nconst Utils_1 = require(\"./Utils\");\nconst Types_1 = require(\"./Enums/Types\");\nconst LineDrawer_1 = require(\"./ShapeDrawers/LineDrawer\");\nconst CircleDrawer_1 = require(\"./ShapeDrawers/CircleDrawer\");\nconst TriangleDrawer_1 = require(\"./ShapeDrawers/TriangleDrawer\");\nconst StarDrawer_1 = require(\"./ShapeDrawers/StarDrawer\");\nconst PolygonDrawer_1 = require(\"./ShapeDrawers/PolygonDrawer\");\nconst Loader_1 = require(\"./Core/Loader\");\nclass MainSlim {\n    constructor() {\n        _initialized.set(this, void 0);\n        __classPrivateFieldSet(this, _initialized, false);\n        const squareDrawer = new SquareDrawer_1.SquareDrawer();\n        const textDrawer = new TextDrawer_1.TextDrawer();\n        const imageDrawer = new ImageDrawer_1.ImageDrawer();\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.line, new LineDrawer_1.LineDrawer());\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.circle, new CircleDrawer_1.CircleDrawer());\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.edge, squareDrawer);\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.square, squareDrawer);\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.triangle, new TriangleDrawer_1.TriangleDrawer());\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.star, new StarDrawer_1.StarDrawer());\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.polygon, new PolygonDrawer_1.PolygonDrawer());\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.char, textDrawer);\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.character, textDrawer);\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.image, imageDrawer);\n        Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.images, imageDrawer);\n    }\n    init() {\n        if (!__classPrivateFieldGet(this, _initialized)) {\n            __classPrivateFieldSet(this, _initialized, true);\n        }\n    }\n    loadFromArray(tagId, options, index) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Loader_1.Loader.load(tagId, options, index);\n        });\n    }\n    load(tagId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Loader_1.Loader.load(tagId, options);\n        });\n    }\n    set(id, element, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Loader_1.Loader.set(id, element, options);\n        });\n    }\n    loadJSON(tagId, pathConfigJson, index) {\n        return Loader_1.Loader.loadJSON(tagId, pathConfigJson, index);\n    }\n    setOnClickHandler(callback) {\n        Loader_1.Loader.setOnClickHandler(callback);\n    }\n    dom() {\n        return Loader_1.Loader.dom();\n    }\n    domItem(index) {\n        return Loader_1.Loader.domItem(index);\n    }\n    addShape(shape, drawer, init, afterEffect, destroy) {\n        let customDrawer;\n        if (typeof drawer === \"function\") {\n            customDrawer = {\n                afterEffect: afterEffect,\n                destroy: destroy,\n                draw: drawer,\n                init: init,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        Utils_1.Plugins.addShapeDrawer(shape, customDrawer);\n    }\n    addPreset(preset, options) {\n        Utils_1.Plugins.addPreset(preset, options);\n    }\n    addPlugin(plugin) {\n        Utils_1.Plugins.addPlugin(plugin);\n    }\n    addPathGenerator(name, generator) {\n        Utils_1.Plugins.addPathGenerator(name, generator);\n    }\n}\nexports.MainSlim = MainSlim;\n_initialized = new WeakMap();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Vector_1 = require(\"../../Core/Particle/Vector\");\nclass AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n        this.options = options;\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = Utils_1.NumberUtils.getValue(options.size) * container.retina.pixelRatio;\n        this.mass = this.size * options.size.density * container.retina.reduceFactor;\n        const limit = options.size.limit;\n        this.limit = limit !== undefined ? limit * container.retina.pixelRatio * container.retina.reduceFactor : limit;\n        const color = typeof options.color === \"string\" ? { value: options.color } : options.color;\n        this.color = (_a = Utils_1.ColorUtils.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const options = this.options;\n        if (options.draggable) {\n            const mouse = this.container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = Utils_1.NumberUtils.getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition();\n        const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(this.position, pos);\n        const v = Vector_1.Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * this.container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * this.container.retina.pixelRatio;\n            if (this.size > particle.getRadius() && distance < this.size - particle.getRadius()) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit === undefined || this.size < this.limit) {\n                this.size += sizeFactor;\n            }\n            this.mass += sizeFactor * this.options.size.density * this.container.retina.reduceFactor;\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = Utils_1.ColorUtils.getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.options.position;\n        return Vector_1.Vector.create((((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width, (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const canvasSize = this.container.canvas.size;\n        if (particle.needsNewPosition) {\n            const pSize = particle.getRadius();\n            particle.position.x = Math.random() * (canvasSize.width - pSize * 2) + pSize;\n            particle.position.y = Math.random() * (canvasSize.height - pSize * 2) + pSize;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.orbit === undefined) {\n                particle.orbit = Vector_1.Vector.create(0, 0);\n                particle.orbit.length = Utils_1.NumberUtils.getDistance(particle.getPosition(), this.position);\n                particle.orbit.angle = Math.random() * Math.PI * 2;\n            }\n            if (particle.orbit.length <= this.size && !this.options.destroy) {\n                particle.orbit.length = Math.random() * Math.max(canvasSize.width, canvasSize.height);\n            }\n            particle.velocity.x = 0;\n            particle.velocity.y = 0;\n            particle.position.setTo(particle.orbit.add(this.position));\n            particle.orbit.length -= v.length;\n            particle.orbit.angle +=\n                (((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : Utils_1.NumberUtils.getRangeValue(particle.options.move.speed) * this.container.retina.pixelRatio) /\n                    100) *\n                    this.container.retina.reduceFactor;\n        }\n        else {\n            particle.velocity.addTo(v);\n        }\n    }\n}\nexports.AbsorberInstance = AbsorberInstance;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberSize = void 0;\nconst ValueWithRandom_1 = require(\"../../../../Options/Classes/ValueWithRandom\");\nclass AbsorberSize extends ValueWithRandom_1.ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.random.minimumValue = 1;\n        this.value = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (data.limit !== undefined) {\n            this.limit = data.limit;\n        }\n        if (data.limit !== undefined) {\n            this.limit = data.limit;\n        }\n    }\n}\nexports.AbsorberSize = AbsorberSize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Absorber = void 0;\nconst AbsorberSize_1 = require(\"./AbsorberSize\");\nconst OptionsColor_1 = require(\"../../../../Options/Classes/OptionsColor\");\nclass Absorber {\n    constructor() {\n        this.color = new OptionsColor_1.OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize_1.AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {\n                x: data.position.x,\n                y: data.position.y,\n            };\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\nexports.Absorber = Absorber;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberClickMode = void 0;\nvar AbsorberClickMode;\n(function (AbsorberClickMode) {\n    AbsorberClickMode[\"absorber\"] = \"absorber\";\n})(AbsorberClickMode = exports.AbsorberClickMode || (exports.AbsorberClickMode = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./AbsorberClickMode\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Absorbers = void 0;\nconst AbsorberInstance_1 = require(\"./AbsorberInstance\");\nconst Utils_1 = require(\"../../Utils\");\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\nconst Enums_1 = require(\"./Enums\");\nclass Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        const overridableContainer = container;\n        overridableContainer.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.absorbers) {\n            if (options.absorbers instanceof Array) {\n                this.absorbers = options.absorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.absorbers instanceof Array) {\n                    this.absorbers = new Absorber_1.Absorber();\n                }\n                this.absorbers.load(options.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                this.interactivityAbsorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityAbsorbers instanceof Array) {\n                    this.interactivityAbsorbers = new Absorber_1.Absorber();\n                }\n                this.interactivityAbsorbers.load(interactivityAbsorbers);\n            }\n        }\n        if (this.absorbers instanceof Array) {\n            for (const absorberOptions of this.absorbers) {\n                this.addAbsorber(absorberOptions);\n            }\n        }\n        else {\n            this.addAbsorber(this.absorbers);\n        }\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            context.save();\n            absorber.draw(context);\n            context.restore();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const absorberOptions = this.absorbers;\n        const modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === Enums_1.AbsorberClickMode.absorber) {\n            let absorbersModeOptions;\n            if (modeAbsorbers instanceof Array) {\n                if (modeAbsorbers.length > 0) {\n                    absorbersModeOptions = Utils_1.Utils.itemFromArray(modeAbsorbers);\n                }\n            }\n            else {\n                absorbersModeOptions = modeAbsorbers;\n            }\n            const absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : (absorberOptions instanceof Array ? Utils_1.Utils.itemFromArray(absorberOptions) : absorberOptions);\n            const aPosition = container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance_1.AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\nexports.Absorbers = Absorbers;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorbersPlugin = void 0;\nconst Absorbers_1 = require(\"./Absorbers\");\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"./Enums\");\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers_1.Absorbers(container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (options === undefined) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        let loadAbsorbers = false;\n        if (absorbers instanceof Array) {\n            if (absorbers.length) {\n                loadAbsorbers = true;\n            }\n        }\n        else if (absorbers !== undefined) {\n            loadAbsorbers = true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            Utils_1.Utils.isInArray(Enums_1.AbsorberClickMode.absorber, options.interactivity.events.onClick.mode)) {\n            loadAbsorbers = true;\n        }\n        return loadAbsorbers;\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            if ((source === null || source === void 0 ? void 0 : source.absorbers) instanceof Array) {\n                optionsCast.absorbers = source === null || source === void 0 ? void 0 : source.absorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.absorbers = absorberOptions = new Absorber_1.Absorber();\n                }\n                absorberOptions.load(source === null || source === void 0 ? void 0 : source.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                optionsCast.interactivity.modes.absorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.interactivity.modes.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.interactivity.modes.absorbers = absorberOptions = new Absorber_1.Absorber();\n                }\n                absorberOptions.load(interactivityAbsorbers);\n            }\n        }\n    }\n}\nconst plugin = new AbsorbersPlugin();\nexports.AbsorbersPlugin = plugin;\n__exportStar(require(\"./Enums\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmitterSize = void 0;\nconst Enums_1 = require(\"../../../../Enums\");\nclass EmitterSize {\n    constructor() {\n        this.mode = Enums_1.SizeMode.percent;\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\nexports.EmitterSize = EmitterSize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmitterInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nconst EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\nfunction randomCoordinate(position, offset) {\n    return position + offset * (Math.random() - 0.5);\n}\nfunction randomPosition(position, offset) {\n    return {\n        x: randomCoordinate(position.x, offset.x),\n        y: randomCoordinate(position.y, offset.y),\n    };\n}\nclass EmitterInstance {\n    constructor(emitters, container, emitterOptions, position) {\n        var _a, _b, _c, _d;\n        this.emitters = emitters;\n        this.container = container;\n        this.firstSpawn = true;\n        this.currentDuration = 0;\n        this.currentEmitDelay = 0;\n        this.currentSpawnDelay = 0;\n        this.initialPosition = position;\n        this.emitterOptions = Utils_1.Utils.deepExtend({}, emitterOptions);\n        this.spawnDelay = (((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = emitterOptions.name;\n        let particlesOptions = Utils_1.Utils.deepExtend({}, this.emitterOptions.particles);\n        if (particlesOptions === undefined) {\n            particlesOptions = {};\n        }\n        if (particlesOptions.move === undefined) {\n            particlesOptions.move = {};\n        }\n        if (particlesOptions.move.direction === undefined) {\n            particlesOptions.move.direction = this.emitterOptions.direction;\n        }\n        if (this.emitterOptions.spawnColor !== undefined) {\n            this.spawnColor = Utils_1.ColorUtils.colorToHsl(this.emitterOptions.spawnColor);\n        }\n        this.paused = !this.emitterOptions.autoPlay;\n        this.particlesOptions = particlesOptions;\n        this.size =\n            (_c = this.emitterOptions.size) !== null && _c !== void 0 ? _c : (() => {\n                const size = new EmitterSize_1.EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: Enums_1.SizeMode.percent,\n                    width: 0,\n                });\n                return size;\n            })();\n        this.lifeCount = (_d = this.emitterOptions.life.count) !== null && _d !== void 0 ? _d : -1;\n        this.immortal = this.lifeCount <= 0;\n        this.play();\n    }\n    externalPlay() {\n        this.paused = false;\n        this.play();\n    }\n    externalPause() {\n        this.paused = true;\n        this.pause();\n    }\n    play() {\n        if (this.paused) {\n            return;\n        }\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\n            if (this.emitDelay === undefined) {\n                this.emitDelay = (1000 * this.emitterOptions.rate.delay) / this.container.retina.reduceFactor;\n            }\n            if (this.lifeCount > 0 || this.immortal) {\n                this.prepareToDie();\n            }\n        }\n    }\n    pause() {\n        if (this.paused) {\n            return;\n        }\n        delete this.emitDelay;\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this.paused) {\n            return;\n        }\n        if (this.firstSpawn) {\n            this.firstSpawn = false;\n            this.currentSpawnDelay = (_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this.currentEmitDelay = (_b = this.emitDelay) !== null && _b !== void 0 ? _b : 0;\n            delta.value = 0;\n        }\n        if (this.duration !== undefined) {\n            this.currentDuration += delta.value;\n            if (this.currentDuration >= this.duration) {\n                this.pause();\n                if (this.spawnDelay !== undefined) {\n                    delete this.spawnDelay;\n                }\n                if (!this.immortal) {\n                    this.lifeCount--;\n                }\n                if (this.lifeCount > 0 || this.immortal) {\n                    this.position = this.calcPosition();\n                    this.spawnDelay =\n                        (((_c = this.emitterOptions.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this.currentDuration -= this.duration;\n                delete this.duration;\n            }\n        }\n        if (this.spawnDelay !== undefined) {\n            this.currentSpawnDelay += delta.value;\n            if (this.currentSpawnDelay >= this.spawnDelay) {\n                this.play();\n                this.currentSpawnDelay -= this.currentSpawnDelay;\n                delete this.spawnDelay;\n            }\n        }\n        if (this.emitDelay !== undefined) {\n            this.currentEmitDelay += delta.value;\n            if (this.currentEmitDelay >= this.emitDelay) {\n                this.emit();\n                this.currentEmitDelay -= this.emitDelay;\n            }\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this.paused) {\n            return;\n        }\n        const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this.duration = duration * 1000;\n        }\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.emitterOptions.position;\n        return {\n            x: (((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width,\n            y: (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height,\n        };\n    }\n    emit() {\n        var _a;\n        if (this.paused) {\n            return;\n        }\n        const container = this.container;\n        const position = this.position;\n        const offset = {\n            x: this.size.mode === Enums_1.SizeMode.percent\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            y: this.size.mode === Enums_1.SizeMode.percent\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n        for (let i = 0; i < this.emitterOptions.rate.quantity; i++) {\n            const particlesOptions = Utils_1.Utils.deepExtend({}, this.particlesOptions);\n            if (this.spawnColor !== undefined) {\n                const colorAnimation = (_a = this.emitterOptions.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (colorAnimation) {\n                    const hueAnimation = colorAnimation;\n                    if (hueAnimation.enable) {\n                        this.spawnColor.h = this.setColorAnimation(hueAnimation, this.spawnColor.h, 360);\n                    }\n                    else {\n                        const hslAnimation = colorAnimation;\n                        this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                        this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                        this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                    }\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            container.particles.addParticle(randomPosition(position, offset), particlesOptions);\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = Utils_1.NumberUtils.randomInRange(animation.offset);\n        const emitFactor = (1000 * this.emitterOptions.rate.delay) / container.retina.reduceFactor;\n        const colorSpeed = (_a = animation.speed) !== null && _a !== void 0 ? _a : 0;\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\nexports.EmitterInstance = EmitterInstance;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmitterRate = void 0;\nclass EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n    }\n}\nexports.EmitterRate = EmitterRate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmitterLife = void 0;\nclass EmitterLife {\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n    }\n}\nexports.EmitterLife = EmitterLife;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = void 0;\nconst Enums_1 = require(\"../../../../Enums\");\nconst EmitterRate_1 = require(\"./EmitterRate\");\nconst EmitterLife_1 = require(\"./EmitterLife\");\nconst Utils_1 = require(\"../../../../Utils\");\nconst EmitterSize_1 = require(\"./EmitterSize\");\nconst AnimatableColor_1 = require(\"../../../../Options/Classes/Particles/AnimatableColor\");\nclass Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.direction = Enums_1.MoveDirection.none;\n        this.life = new EmitterLife_1.EmitterLife();\n        this.rate = new EmitterRate_1.EmitterRate();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (this.size === undefined) {\n                this.size = new EmitterSize_1.EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        if (data.particles !== undefined) {\n            this.particles = Utils_1.Utils.deepExtend({}, data.particles);\n        }\n        this.rate.load(data.rate);\n        if (data.position !== undefined) {\n            this.position = {\n                x: data.position.x,\n                y: data.position.y,\n            };\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor_1.AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n    }\n}\nexports.Emitter = Emitter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmitterClickMode = void 0;\nvar EmitterClickMode;\n(function (EmitterClickMode) {\n    EmitterClickMode[\"emitter\"] = \"emitter\";\n})(EmitterClickMode = exports.EmitterClickMode || (exports.EmitterClickMode = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./EmitterClickMode\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitters = void 0;\nconst EmitterInstance_1 = require(\"./EmitterInstance\");\nconst Utils_1 = require(\"../../Utils\");\nconst Emitter_1 = require(\"./Options/Classes/Emitter\");\nconst Enums_1 = require(\"./Enums\");\nclass Emitters {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = [];\n        const overridableContainer = container;\n        overridableContainer.addEmitter = (options, position) => this.addEmitter(options, position);\n        overridableContainer.playEmitter = (idxOrName) => {\n            const emitter = idxOrName === undefined || typeof idxOrName === \"number\"\n                ? this.array[idxOrName || 0]\n                : this.array.find((t) => t.name === idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        overridableContainer.pauseEmitter = (idxOrName) => {\n            const emitter = idxOrName === undefined || typeof idxOrName === \"number\"\n                ? this.array[idxOrName || 0]\n                : this.array.find((t) => t.name === idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.emitters) {\n            if (options.emitters instanceof Array) {\n                this.emitters = options.emitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.emitters instanceof Array) {\n                    this.emitters = new Emitter_1.Emitter();\n                }\n                this.emitters.load(options.emitters);\n            }\n        }\n        const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                this.interactivityEmitters = interactivityEmitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityEmitters instanceof Array) {\n                    this.interactivityEmitters = new Emitter_1.Emitter();\n                }\n                this.interactivityEmitters.load(interactivityEmitters);\n            }\n        }\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const emitterOptions = this.emitters;\n        const modeEmitters = this.interactivityEmitters;\n        if (mode === Enums_1.EmitterClickMode.emitter) {\n            let emitterModeOptions;\n            if (modeEmitters instanceof Array) {\n                if (modeEmitters.length > 0) {\n                    emitterModeOptions = Utils_1.Utils.itemFromArray(modeEmitters);\n                }\n            }\n            else {\n                emitterModeOptions = modeEmitters;\n            }\n            const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : (emitterOptions instanceof Array ? Utils_1.Utils.itemFromArray(emitterOptions) : emitterOptions);\n            const ePosition = container.interactivity.mouse.clickPosition;\n            this.addEmitter(Utils_1.Utils.deepExtend({}, emittersOptions), ePosition);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    addEmitter(options, position) {\n        const emitter = new EmitterInstance_1.EmitterInstance(this, this.container, options, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\nexports.Emitters = Emitters;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmittersPlugin = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Emitters_1 = require(\"./Emitters\");\nconst Enums_1 = require(\"./Enums\");\nconst Emitter_1 = require(\"./Options/Classes/Emitter\");\nclass EmittersPlugin {\n    constructor() {\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters_1.Emitters(container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (options === undefined) {\n            return false;\n        }\n        const emitters = options.emitters;\n        let loadEmitters = false;\n        if (emitters instanceof Array) {\n            if (emitters.length) {\n                loadEmitters = true;\n            }\n        }\n        else if (emitters !== undefined) {\n            loadEmitters = true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            Utils_1.Utils.isInArray(Enums_1.EmitterClickMode.emitter, options.interactivity.events.onClick.mode)) {\n            loadEmitters = true;\n        }\n        return loadEmitters;\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        if (source === null || source === void 0 ? void 0 : source.emitters) {\n            if ((source === null || source === void 0 ? void 0 : source.emitters) instanceof Array) {\n                optionsCast.emitters = source === null || source === void 0 ? void 0 : source.emitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let emitterOptions = optionsCast.emitters;\n                if ((emitterOptions === null || emitterOptions === void 0 ? void 0 : emitterOptions.load) === undefined) {\n                    optionsCast.emitters = emitterOptions = new Emitter_1.Emitter();\n                }\n                emitterOptions.load(source === null || source === void 0 ? void 0 : source.emitters);\n            }\n        }\n        const interactivityEmitters = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                optionsCast.interactivity.modes.emitters = interactivityEmitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let emitterOptions = optionsCast.interactivity.modes.emitters;\n                if ((emitterOptions === null || emitterOptions === void 0 ? void 0 : emitterOptions.load) === undefined) {\n                    optionsCast.interactivity.modes.emitters = emitterOptions = new Emitter_1.Emitter();\n                }\n                emitterOptions.load(interactivityEmitters);\n            }\n        }\n    }\n}\nconst plugin = new EmittersPlugin();\nexports.EmittersPlugin = plugin;\n__exportStar(require(\"./Enums\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlineArrangement = void 0;\nvar InlineArrangement;\n(function (InlineArrangement) {\n    InlineArrangement[\"equidistant\"] = \"equidistant\";\n    InlineArrangement[\"onePerPoint\"] = \"one-per-point\";\n    InlineArrangement[\"perPoint\"] = \"per-point\";\n    InlineArrangement[\"randomLength\"] = \"random-length\";\n    InlineArrangement[\"randomPoint\"] = \"random-point\";\n})(InlineArrangement = exports.InlineArrangement || (exports.InlineArrangement = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MoveType = void 0;\nvar MoveType;\n(function (MoveType) {\n    MoveType[\"path\"] = \"path\";\n    MoveType[\"radius\"] = \"radius\";\n})(MoveType = exports.MoveType || (exports.MoveType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Type = void 0;\nvar Type;\n(function (Type) {\n    Type[\"inline\"] = \"inline\";\n    Type[\"inside\"] = \"inside\";\n    Type[\"outside\"] = \"outside\";\n    Type[\"none\"] = \"none\";\n})(Type = exports.Type || (exports.Type = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InlineArrangement\"), exports);\n__exportStar(require(\"./MoveType\"), exports);\n__exportStar(require(\"./Type\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DrawStroke = void 0;\nconst OptionsColor_1 = require(\"../../../../Options/Classes/OptionsColor\");\nconst Utils_1 = require(\"../../../../Utils\");\nclass DrawStroke {\n    constructor() {\n        this.color = new OptionsColor_1.OptionsColor();\n        this.width = 0.5;\n        this.opacity = 1;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            this.color = OptionsColor_1.OptionsColor.create(this.color, data.color);\n            if (typeof this.color.value === \"string\") {\n                this.opacity = (_a = Utils_1.ColorUtils.stringToAlpha(this.color.value)) !== null && _a !== void 0 ? _a : this.opacity;\n            }\n            if (data.opacity !== undefined) {\n                this.opacity = data.opacity;\n            }\n            if (data.width !== undefined) {\n                this.width = data.width;\n            }\n        }\n    }\n}\nexports.DrawStroke = DrawStroke;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Draw = void 0;\nconst DrawStroke_1 = require(\"./DrawStroke\");\nconst OptionsColor_1 = require(\"../../../../Options/Classes/OptionsColor\");\nclass Draw {\n    constructor() {\n        this.enable = false;\n        this.stroke = new DrawStroke_1.DrawStroke();\n    }\n    get lineWidth() {\n        return this.stroke.width;\n    }\n    set lineWidth(value) {\n        this.stroke.width = value;\n    }\n    get lineColor() {\n        return this.stroke.color;\n    }\n    set lineColor(value) {\n        this.stroke.color = OptionsColor_1.OptionsColor.create(this.stroke.color, value);\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            const stroke = (_a = data.stroke) !== null && _a !== void 0 ? _a : {\n                color: data.lineColor,\n                width: data.lineWidth,\n            };\n            this.stroke.load(stroke);\n        }\n    }\n}\nexports.Draw = Draw;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Move = void 0;\nconst Enums_1 = require(\"../../Enums\");\nclass Move {\n    constructor() {\n        this.radius = 10;\n        this.type = Enums_1.MoveType.path;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.radius !== undefined) {\n                this.radius = data.radius;\n            }\n            if (data.type !== undefined) {\n                this.type = data.type;\n            }\n        }\n    }\n}\nexports.Move = Move;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Inline = void 0;\nconst Enums_1 = require(\"../../Enums\");\nclass Inline {\n    constructor() {\n        this.arrangement = Enums_1.InlineArrangement.onePerPoint;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.arrangement !== undefined) {\n                this.arrangement = data.arrangement;\n            }\n        }\n    }\n}\nexports.Inline = Inline;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LocalSvg = void 0;\nclass LocalSvg {\n    constructor() {\n        this.path = [];\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.path !== undefined) {\n                this.path = data.path;\n            }\n            if (data.size !== undefined) {\n                if (data.size.width !== undefined) {\n                    this.size.width = data.size.width;\n                }\n                if (data.size.height !== undefined) {\n                    this.size.height = data.size.height;\n                }\n            }\n        }\n    }\n}\nexports.LocalSvg = LocalSvg;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolygonMask = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Draw_1 = require(\"./Draw\");\nconst Move_1 = require(\"./Move\");\nconst Inline_1 = require(\"./Inline\");\nconst LocalSvg_1 = require(\"./LocalSvg\");\nconst Utils_1 = require(\"../../../../Utils\");\nclass PolygonMask {\n    constructor() {\n        this.draw = new Draw_1.Draw();\n        this.enable = false;\n        this.inline = new Inline_1.Inline();\n        this.move = new Move_1.Move();\n        this.scale = 1;\n        this.type = Enums_1.Type.none;\n    }\n    get inlineArrangement() {\n        return this.inline.arrangement;\n    }\n    set inlineArrangement(value) {\n        this.inline.arrangement = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            this.draw.load(data.draw);\n            const inline = (_a = data.inline) !== null && _a !== void 0 ? _a : {\n                arrangement: data.inlineArrangement,\n            };\n            if (inline !== undefined) {\n                this.inline.load(inline);\n            }\n            this.move.load(data.move);\n            if (data.scale !== undefined) {\n                this.scale = data.scale;\n            }\n            if (data.type !== undefined) {\n                this.type = data.type;\n            }\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            else {\n                this.enable = this.type !== Enums_1.Type.none;\n            }\n            if (data.url !== undefined) {\n                this.url = data.url;\n            }\n            if (data.data !== undefined) {\n                if (typeof data.data === \"string\") {\n                    this.data = data.data;\n                }\n                else {\n                    this.data = new LocalSvg_1.LocalSvg();\n                    this.data.load(data.data);\n                }\n            }\n            if (data.position !== undefined) {\n                this.position = Utils_1.Utils.deepExtend({}, data.position);\n            }\n        }\n    }\n}\nexports.PolygonMask = PolygonMask;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolygonMaskInstance = void 0;\nconst Enums_1 = require(\"./Enums\");\nconst Utils_1 = require(\"../../Utils\");\nconst PolygonMask_1 = require(\"./Options/Classes/PolygonMask\");\nfunction polygonBounce(particle) {\n    particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n    particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n}\nfunction drawPolygonMask(context, rawData, stroke) {\n    const color = Utils_1.ColorUtils.colorToRgb(stroke.color);\n    if (!color) {\n        return;\n    }\n    context.beginPath();\n    context.moveTo(rawData[0].x, rawData[0].y);\n    for (const item of rawData) {\n        context.lineTo(item.x, item.y);\n    }\n    context.closePath();\n    context.strokeStyle = Utils_1.ColorUtils.getStyleFromRgb(color);\n    context.lineWidth = stroke.width;\n    context.stroke();\n}\nfunction drawPolygonMaskPath(context, path, stroke, position) {\n    context.translate(position.x, position.y);\n    const color = Utils_1.ColorUtils.colorToRgb(stroke.color);\n    if (!color) {\n        return;\n    }\n    context.strokeStyle = Utils_1.ColorUtils.getStyleFromRgb(color, stroke.opacity);\n    context.lineWidth = stroke.width;\n    context.stroke(path);\n}\nfunction parsePaths(paths, scale, offset) {\n    const res = [];\n    for (const path of paths) {\n        const segments = path.element.pathSegList;\n        const len = segments.numberOfItems;\n        const p = {\n            x: 0,\n            y: 0,\n        };\n        for (let i = 0; i < len; i++) {\n            const segment = segments.getItem(i);\n            const svgPathSeg = window.SVGPathSeg;\n            switch (segment.pathSegType) {\n                case svgPathSeg.PATHSEG_MOVETO_ABS:\n                case svgPathSeg.PATHSEG_LINETO_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                case svgPathSeg.PATHSEG_ARC_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: {\n                    const absSeg = segment;\n                    p.x = absSeg.x;\n                    p.y = absSeg.y;\n                    break;\n                }\n                case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                    p.x = segment.x;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                    p.y = segment.y;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_REL:\n                case svgPathSeg.PATHSEG_MOVETO_REL:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                case svgPathSeg.PATHSEG_ARC_REL:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: {\n                    const relSeg = segment;\n                    p.x += relSeg.x;\n                    p.y += relSeg.y;\n                    break;\n                }\n                case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                    p.x += segment.x;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                    p.y += segment.y;\n                    break;\n                case svgPathSeg.PATHSEG_UNKNOWN:\n                case svgPathSeg.PATHSEG_CLOSEPATH:\n                    continue;\n            }\n            res.push({\n                x: p.x * scale + offset.x,\n                y: p.y * scale + offset.y,\n            });\n        }\n    }\n    return res;\n}\nclass PolygonMaskInstance {\n    constructor(container) {\n        this.container = container;\n        this.dimension = {\n            height: 0,\n            width: 0,\n        };\n        this.path2DSupported = !!window.Path2D;\n        this.options = new PolygonMask_1.PolygonMask();\n        this.polygonMaskMoveRadius = this.options.move.radius * container.retina.pixelRatio;\n    }\n    initAsync(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.options.load(options === null || options === void 0 ? void 0 : options.polygon);\n            const polygonMaskOptions = this.options;\n            this.polygonMaskMoveRadius = polygonMaskOptions.move.radius * this.container.retina.pixelRatio;\n            if (polygonMaskOptions.enable) {\n                yield this.initRawData();\n            }\n        });\n    }\n    resize() {\n        const container = this.container;\n        const options = this.options;\n        if (!(options.enable && options.type !== Enums_1.Type.none)) {\n            return;\n        }\n        if (this.redrawTimeout) {\n            clearTimeout(this.redrawTimeout);\n        }\n        this.redrawTimeout = window.setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n            yield this.initRawData(true);\n            container.particles.redraw();\n        }), 250);\n    }\n    stop() {\n        delete this.raw;\n        delete this.paths;\n    }\n    particlesInitialization() {\n        const options = this.options;\n        if (options.enable &&\n            options.type === Enums_1.Type.inline &&\n            (options.inline.arrangement === Enums_1.InlineArrangement.onePerPoint ||\n                options.inline.arrangement === Enums_1.InlineArrangement.perPoint)) {\n            this.drawPoints();\n            return true;\n        }\n        return false;\n    }\n    particlePosition(position) {\n        var _a, _b;\n        const options = this.options;\n        if (!(options.enable && ((_b = (_a = this.raw) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0)) {\n            return;\n        }\n        return Utils_1.Utils.deepExtend({}, position ? position : this.randomPoint());\n    }\n    particleBounce(particle) {\n        const options = this.options;\n        if (options.enable && options.type !== Enums_1.Type.none && options.type !== Enums_1.Type.inline) {\n            if (!this.checkInsidePolygon(particle.getPosition())) {\n                polygonBounce(particle);\n                return true;\n            }\n        }\n        else if (options.enable && options.type === Enums_1.Type.inline && particle.initialPosition) {\n            const dist = Utils_1.NumberUtils.getDistance(particle.initialPosition, particle.getPosition());\n            if (dist > this.polygonMaskMoveRadius) {\n                polygonBounce(particle);\n                return true;\n            }\n        }\n        return false;\n    }\n    clickPositionValid(position) {\n        const options = this.options;\n        return (options.enable &&\n            options.type !== Enums_1.Type.none &&\n            options.type !== Enums_1.Type.inline &&\n            this.checkInsidePolygon(position));\n    }\n    draw(context) {\n        var _a;\n        if (!((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            return;\n        }\n        const options = this.options;\n        const polygonDraw = options.draw;\n        if (!(options.enable && polygonDraw.enable)) {\n            return;\n        }\n        const rawData = this.raw;\n        for (const path of this.paths) {\n            const path2d = path.path2d;\n            const path2dSupported = this.path2DSupported;\n            if (!context) {\n                continue;\n            }\n            if (path2dSupported && path2d && this.offset) {\n                drawPolygonMaskPath(context, path2d, polygonDraw.stroke, this.offset);\n            }\n            else if (rawData) {\n                drawPolygonMask(context, rawData, polygonDraw.stroke);\n            }\n        }\n    }\n    checkInsidePolygon(position) {\n        var _a, _b;\n        const container = this.container;\n        const options = this.options;\n        if (!options.enable || options.type === Enums_1.Type.none || options.type === Enums_1.Type.inline) {\n            return true;\n        }\n        if (!this.raw) {\n            throw new Error(Utils_1.Constants.noPolygonFound);\n        }\n        const canvasSize = container.canvas.size;\n        const x = (_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * canvasSize.width;\n        const y = (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * canvasSize.height;\n        let inside = false;\n        for (let i = 0, j = this.raw.length - 1; i < this.raw.length; j = i++) {\n            const pi = this.raw[i];\n            const pj = this.raw[j];\n            const intersect = pi.y > y !== pj.y > y && x < ((pj.x - pi.x) * (y - pi.y)) / (pj.y - pi.y) + pi.x;\n            if (intersect) {\n                inside = !inside;\n            }\n        }\n        return options.type === Enums_1.Type.inside ? inside : options.type === Enums_1.Type.outside ? !inside : false;\n    }\n    parseSvgPath(xml, force) {\n        var _a, _b, _c;\n        const forceDownload = force !== null && force !== void 0 ? force : false;\n        if (this.paths !== undefined && !forceDownload) {\n            return this.raw;\n        }\n        const container = this.container;\n        const options = this.options;\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(xml, \"image/svg+xml\");\n        const svg = doc.getElementsByTagName(\"svg\")[0];\n        let svgPaths = svg.getElementsByTagName(\"path\");\n        if (!svgPaths.length) {\n            svgPaths = doc.getElementsByTagName(\"path\");\n        }\n        this.paths = [];\n        for (let i = 0; i < svgPaths.length; i++) {\n            const path = svgPaths.item(i);\n            if (path) {\n                this.paths.push({\n                    element: path,\n                    length: path.getTotalLength(),\n                });\n            }\n        }\n        const pxRatio = container.retina.pixelRatio;\n        const scale = options.scale / pxRatio;\n        this.dimension.width = parseFloat((_a = svg.getAttribute(\"width\")) !== null && _a !== void 0 ? _a : \"0\") * scale;\n        this.dimension.height = parseFloat((_b = svg.getAttribute(\"height\")) !== null && _b !== void 0 ? _b : \"0\") * scale;\n        const position = (_c = options.position) !== null && _c !== void 0 ? _c : {\n            x: 50,\n            y: 50,\n        };\n        this.offset = {\n            x: (container.canvas.size.width * position.x) / (100 * pxRatio) - this.dimension.width / 2,\n            y: (container.canvas.size.height * position.y) / (100 * pxRatio) - this.dimension.height / 2,\n        };\n        return parsePaths(this.paths, scale, this.offset);\n    }\n    downloadSvgPath(svgUrl, force) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = this.options;\n            const url = svgUrl || options.url;\n            const forceDownload = force !== null && force !== void 0 ? force : false;\n            if (!url || (this.paths !== undefined && !forceDownload)) {\n                return this.raw;\n            }\n            const req = yield fetch(url);\n            if (!req.ok) {\n                throw new Error(\"tsParticles Error - Error occurred during polygon mask download\");\n            }\n            return this.parseSvgPath(yield req.text(), force);\n        });\n    }\n    drawPoints() {\n        if (!this.raw) {\n            return;\n        }\n        for (const item of this.raw) {\n            this.container.particles.addParticle({\n                x: item.x,\n                y: item.y,\n            });\n        }\n    }\n    randomPoint() {\n        const container = this.container;\n        const options = this.options;\n        let position;\n        if (options.type === Enums_1.Type.inline) {\n            switch (options.inline.arrangement) {\n                case Enums_1.InlineArrangement.randomPoint:\n                    position = this.getRandomPoint();\n                    break;\n                case Enums_1.InlineArrangement.randomLength:\n                    position = this.getRandomPointByLength();\n                    break;\n                case Enums_1.InlineArrangement.equidistant:\n                    position = this.getEquidistantPointByIndex(container.particles.count);\n                    break;\n                case Enums_1.InlineArrangement.onePerPoint:\n                case Enums_1.InlineArrangement.perPoint:\n                default:\n                    position = this.getPointByIndex(container.particles.count);\n            }\n        }\n        else {\n            position = {\n                x: Math.random() * container.canvas.size.width,\n                y: Math.random() * container.canvas.size.height,\n            };\n        }\n        if (this.checkInsidePolygon(position)) {\n            return position;\n        }\n        else {\n            return this.randomPoint();\n        }\n    }\n    getRandomPoint() {\n        if (!this.raw || !this.raw.length) {\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        }\n        const coords = Utils_1.Utils.itemFromArray(this.raw);\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    }\n    getRandomPointByLength() {\n        var _a, _b, _c;\n        const options = this.options;\n        if (!this.raw || !this.raw.length || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        }\n        const path = Utils_1.Utils.itemFromArray(this.paths);\n        const distance = Math.floor(Math.random() * path.length) + 1;\n        const point = path.element.getPointAtLength(distance);\n        return {\n            x: point.x * options.scale + (((_b = this.offset) === null || _b === void 0 ? void 0 : _b.x) || 0),\n            y: point.y * options.scale + (((_c = this.offset) === null || _c === void 0 ? void 0 : _c.y) || 0),\n        };\n    }\n    getEquidistantPointByIndex(index) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const options = this.container.actualOptions;\n        const polygonMaskOptions = this.options;\n        if (!this.raw || !this.raw.length || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length))\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        let offset = 0;\n        let point;\n        const totalLength = this.paths.reduce((tot, path) => tot + path.length, 0);\n        const distance = totalLength / options.particles.number.value;\n        for (const path of this.paths) {\n            const pathDistance = distance * index - offset;\n            if (pathDistance <= path.length) {\n                point = path.element.getPointAtLength(pathDistance);\n                break;\n            }\n            else {\n                offset += path.length;\n            }\n        }\n        return {\n            x: ((_b = point === null || point === void 0 ? void 0 : point.x) !== null && _b !== void 0 ? _b : 0) * polygonMaskOptions.scale + ((_d = (_c = this.offset) === null || _c === void 0 ? void 0 : _c.x) !== null && _d !== void 0 ? _d : 0),\n            y: ((_e = point === null || point === void 0 ? void 0 : point.y) !== null && _e !== void 0 ? _e : 0) * polygonMaskOptions.scale + ((_g = (_f = this.offset) === null || _f === void 0 ? void 0 : _f.y) !== null && _g !== void 0 ? _g : 0),\n        };\n    }\n    getPointByIndex(index) {\n        if (!this.raw || !this.raw.length) {\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        }\n        const coords = this.raw[index % this.raw.length];\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    }\n    createPath2D() {\n        var _a, _b;\n        const options = this.options;\n        if (!this.path2DSupported || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            return;\n        }\n        for (const path of this.paths) {\n            const pathData = (_b = path.element) === null || _b === void 0 ? void 0 : _b.getAttribute(\"d\");\n            if (pathData) {\n                const path2d = new Path2D(pathData);\n                const matrix = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\").createSVGMatrix();\n                const finalPath = new Path2D();\n                const transform = matrix.scale(options.scale);\n                if (finalPath.addPath) {\n                    finalPath.addPath(path2d, transform);\n                    path.path2d = finalPath;\n                }\n                else {\n                    delete path.path2d;\n                }\n            }\n            else {\n                delete path.path2d;\n            }\n            if (path.path2d || !this.raw) {\n                continue;\n            }\n            path.path2d = new Path2D();\n            path.path2d.moveTo(this.raw[0].x, this.raw[0].y);\n            this.raw.forEach((pos, i) => {\n                var _a;\n                if (i > 0) {\n                    (_a = path.path2d) === null || _a === void 0 ? void 0 : _a.lineTo(pos.x, pos.y);\n                }\n            });\n            path.path2d.closePath();\n        }\n    }\n    initRawData(force) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = this.options;\n            if (options.url) {\n                this.raw = yield this.downloadSvgPath(options.url, force);\n            }\n            else if (options.data) {\n                const data = options.data;\n                let svg;\n                if (typeof data !== \"string\") {\n                    const path = data.path instanceof Array\n                        ? data.path.map((t) => `<path d=\"${t}\" />`).join(\"\")\n                        : `<path d=\"${data.path}\" />`;\n                    const namespaces = 'xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n                    svg = `<svg ${namespaces} width=\"${data.size.width}\" height=\"${data.size.height}\">${path}</svg>`;\n                }\n                else {\n                    svg = data;\n                }\n                this.raw = this.parseSvgPath(svg, force);\n            }\n            this.createPath2D();\n        });\n    }\n}\nexports.PolygonMaskInstance = PolygonMaskInstance;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolygonMaskPlugin = void 0;\nconst PolygonMaskInstance_1 = require(\"./PolygonMaskInstance\");\nconst PolygonMask_1 = require(\"./Options/Classes/PolygonMask\");\nconst Enums_1 = require(\"./Enums\");\nclass PolygonMaskPlugin {\n    constructor() {\n        this.id = \"polygonMask\";\n    }\n    getPlugin(container) {\n        return new PolygonMaskInstance_1.PolygonMaskInstance(container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.polygon) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : (((_c = options === null || options === void 0 ? void 0 : options.polygon) === null || _c === void 0 ? void 0 : _c.type) !== undefined && options.polygon.type !== Enums_1.Type.none);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        let polygonOptions = optionsCast.polygon;\n        if ((polygonOptions === null || polygonOptions === void 0 ? void 0 : polygonOptions.load) === undefined) {\n            optionsCast.polygon = polygonOptions = new PolygonMask_1.PolygonMask();\n        }\n        polygonOptions.load(source === null || source === void 0 ? void 0 : source.polygon);\n    }\n}\nconst plugin = new PolygonMaskPlugin();\nexports.PolygonMaskPlugin = plugin;\n__exportStar(require(\"./Enums\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Main = void 0;\nconst main_slim_1 = require(\"./main.slim\");\nconst AbsorbersPlugin_1 = require(\"./Plugins/Absorbers/AbsorbersPlugin\");\nconst EmittersPlugin_1 = require(\"./Plugins/Emitters/EmittersPlugin\");\nconst PolygonMaskPlugin_1 = require(\"./Plugins/PolygonMask/PolygonMaskPlugin\");\nclass Main extends main_slim_1.MainSlim {\n    constructor() {\n        super();\n        this.addPlugin(AbsorbersPlugin_1.AbsorbersPlugin);\n        this.addPlugin(EmittersPlugin_1.EmittersPlugin);\n        this.addPlugin(PolygonMaskPlugin_1.PolygonMaskPlugin);\n    }\n}\nexports.Main = Main;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./RangeValue\"), exports);\n__exportStar(require(\"./RecursivePartial\"), exports);\n__exportStar(require(\"./ShapeData\"), exports);\n__exportStar(require(\"./ShapeDrawerFunctions\"), exports);\n__exportStar(require(\"./SingleOrMultiple\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tsParticles = exports.pJSDom = exports.particlesJS = exports.Main = exports.Utils = exports.Constants = exports.ColorUtils = exports.CanvasUtils = void 0;\nconst pjs_1 = require(\"./pjs\");\nconst main_1 = require(\"./main\");\nObject.defineProperty(exports, \"Main\", { enumerable: true, get: function () { return main_1.Main; } });\nconst Utils_1 = require(\"./Utils\");\nObject.defineProperty(exports, \"CanvasUtils\", { enumerable: true, get: function () { return Utils_1.CanvasUtils; } });\nObject.defineProperty(exports, \"ColorUtils\", { enumerable: true, get: function () { return Utils_1.ColorUtils; } });\nObject.defineProperty(exports, \"Constants\", { enumerable: true, get: function () { return Utils_1.Constants; } });\nObject.defineProperty(exports, \"Utils\", { enumerable: true, get: function () { return Utils_1.Utils; } });\nconst tsParticles = new main_1.Main();\nexports.tsParticles = tsParticles;\ntsParticles.init();\nconst { particlesJS, pJSDom } = pjs_1.initPjs(tsParticles);\nexports.particlesJS = particlesJS;\nexports.pJSDom = pJSDom;\n__exportStar(require(\"./Core/Particle/Vector\"), exports);\n__exportStar(require(\"./Core/Container\"), exports);\n__exportStar(require(\"./Enums\"), exports);\n__exportStar(require(\"./Plugins/Absorbers/Enums\"), exports);\n__exportStar(require(\"./Plugins/Emitters/Enums\"), exports);\n__exportStar(require(\"./Plugins/PolygonMask/Enums\"), exports);\n__exportStar(require(\"./Types\"), exports);\n","import { tsParticles } from \"tsparticles\";\r\nimport { } from 'typescript';\r\n\r\nwindow.onload = () => {\r\n\r\n    tsParticles\r\n        .load(\"background_particles\", {\r\n                \"autoPlay\": true,\r\n                \"backgroundMask\": {\r\n                    \"composite\": \"destination-out\",\r\n                    \"cover\": {\r\n                        \"color\": {\r\n                            \"value\": \"#fff\"\r\n                        },\r\n                        \"opacity\": 1\r\n                    },\r\n                    \"enable\": false,\r\n                },\r\n                \"fullScreen\": {\r\n                    \"enable\": true,\r\n                    \"zIndex\": -1\r\n                },\r\n                \"detectRetina\": true,\r\n                \"fpsLimit\": 60,\r\n                \"infection\": {\r\n                    \"cure\": false,\r\n                    \"delay\": 0,\r\n                    \"enable\": false,\r\n                    \"infections\": 0,\r\n                    \"stages\": []\r\n                },\r\n                \"interactivity\": {\r\n                    \"detectsOn\": \"canvas\",\r\n                    \"events\": {\r\n                        \"onClick\": {\r\n                            \"enable\": true,\r\n                            \"mode\": \"repulse\"\r\n                        },\r\n                        \"onHover\": {\r\n                            \"enable\": true,\r\n                            \"mode\": \"bubble\",\r\n                            \"parallax\": {\r\n                                \"enable\": false,\r\n                                \"force\": 2,\r\n                                \"smooth\": 10\r\n                            }\r\n                        },\r\n                        \"resize\": true\r\n                    },\r\n                    \"modes\": {\r\n                        \"attract\": {\r\n                            \"distance\": 200,\r\n                            \"duration\": 0.4,\r\n                            \"speed\": 1\r\n                        },\r\n                        \"bubble\": {\r\n                            \"distance\": 250,\r\n                            \"duration\": 2,\r\n                            \"opacity\": 0,\r\n                            \"size\": 0\r\n                        },\r\n                        \"connect\": {\r\n                            \"distance\": 80,\r\n                            \"links\": {\r\n                                \"opacity\": 0.5\r\n                            },\r\n                            \"radius\": 60\r\n                        },\r\n                        \"grab\": {\r\n                            \"distance\": 400,\r\n                            \"links\": {\r\n                                \"blink\": false,\r\n                                \"consent\": false,\r\n                                \"opacity\": 1\r\n                            }\r\n                        },\r\n                        \"light\": {\r\n                            \"area\": {\r\n                                \"gradient\": {\r\n                                    \"start\": {\r\n                                        \"value\": \"#ffffff\"\r\n                                    },\r\n                                    \"stop\": {\r\n                                        \"value\": \"#000000\"\r\n                                    }\r\n                                },\r\n                                \"radius\": 1000\r\n                            },\r\n                            \"shadow\": {\r\n                                \"color\": {\r\n                                    \"value\": \"#000000\"\r\n                                },\r\n                                \"length\": 2000\r\n                            }\r\n                        },\r\n                        \"push\": {\r\n                            \"quantity\": 4\r\n                        },\r\n                        \"remove\": {\r\n                            \"quantity\": 2\r\n                        },\r\n                        \"repulse\": {\r\n                            \"distance\": 400,\r\n                            \"duration\": 0.4,\r\n                            \"speed\": 1\r\n                        },\r\n                        \"slow\": {\r\n                            \"factor\": 3,\r\n                            \"radius\": 200\r\n                        },\r\n                        \"trail\": {\r\n                            \"delay\": 1,\r\n                            \"quantity\": 1\r\n                        }\r\n                    }\r\n                },\r\n                \"manualParticles\": [],\r\n                \"motion\": {\r\n                    \"disable\": false,\r\n                    \"reduce\": {\r\n                        \"factor\": 4,\r\n                        \"value\": true\r\n                    }\r\n                },\r\n                \"particles\": {\r\n                    \"bounce\": {\r\n                        \"horizontal\": {\r\n                            \"random\": {\r\n                                \"enable\": false,\r\n                                \"minimumValue\": 0.1\r\n                            },\r\n                            \"value\": 1\r\n                        },\r\n                        \"vertical\": {\r\n                            \"random\": {\r\n                                \"enable\": false,\r\n                                \"minimumValue\": 0.1\r\n                            },\r\n                            \"value\": 1\r\n                        }\r\n                    },\r\n                    \"collisions\": {\r\n                        \"bounce\": {\r\n                            \"horizontal\": {\r\n                                \"random\": {\r\n                                    \"enable\": false,\r\n                                    \"minimumValue\": 0.1\r\n                                },\r\n                                \"value\": 1\r\n                            },\r\n                            \"vertical\": {\r\n                                \"random\": {\r\n                                    \"enable\": false,\r\n                                    \"minimumValue\": 0.1\r\n                                },\r\n                                \"value\": 1\r\n                            }\r\n                        },\r\n                        \"enable\": false,\r\n                        \"mode\": \"bounce\",\r\n                        \"overlap\": {\r\n                            \"enable\": true,\r\n                            \"retries\": 0\r\n                        }\r\n                    },\r\n                    \"color\": {\r\n                        \"value\": \"#ffffff\",\r\n                        \"animation\": {\r\n                            \"h\": {\r\n                                \"count\": 0,\r\n                                \"enable\": false,\r\n                                \"offset\": 0,\r\n                                \"speed\": 1,\r\n                                \"sync\": true\r\n                            },\r\n                            \"s\": {\r\n                                \"count\": 0,\r\n                                \"enable\": false,\r\n                                \"offset\": 0,\r\n                                \"speed\": 1,\r\n                                \"sync\": true\r\n                            },\r\n                            \"l\": {\r\n                                \"count\": 0,\r\n                                \"enable\": false,\r\n                                \"offset\": 0,\r\n                                \"speed\": 1,\r\n                                \"sync\": true\r\n                            }\r\n                        }\r\n                    },\r\n                    \"destroy\": {\r\n                        \"split\": {\r\n                            \"count\": 1,\r\n                            \"factor\": {\r\n                                \"random\": {\r\n                                    \"enable\": false,\r\n                                    \"minimumValue\": 0\r\n                                },\r\n                                \"value\": 3\r\n                            },\r\n                            \"rate\": {\r\n                                \"random\": {\r\n                                    \"enable\": false,\r\n                                    \"minimumValue\": 0\r\n                                },\r\n                                \"value\": {\r\n                                    \"min\": 4,\r\n                                    \"max\": 9\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"life\": {\r\n                        \"count\": 0,\r\n                        \"delay\": {\r\n                            \"random\": {\r\n                                \"enable\": false,\r\n                                \"minimumValue\": 0\r\n                            },\r\n                            \"value\": 0,\r\n                            \"sync\": false\r\n                        },\r\n                        \"duration\": {\r\n                            \"random\": {\r\n                                \"enable\": false,\r\n                                \"minimumValue\": 0.0001\r\n                            },\r\n                            \"value\": 0,\r\n                            \"sync\": false\r\n                        }\r\n                    },\r\n                    \"links\": {\r\n                        \"blink\": false,\r\n                        \"color\": {\r\n                            \"value\": \"#ffffff\"\r\n                        },\r\n                        \"consent\": false,\r\n                        \"distance\": 150,\r\n                        \"enable\": false,\r\n                        \"frequency\": 1,\r\n                        \"opacity\": 0.4,\r\n                        \"shadow\": {\r\n                            \"blur\": 5,\r\n                            \"color\": {\r\n                                \"value\": \"#00ff00\"\r\n                            },\r\n                            \"enable\": false\r\n                        },\r\n                        \"triangles\": {\r\n                            \"enable\": false,\r\n                            \"frequency\": 1\r\n                        },\r\n                        \"width\": 1,\r\n                        \"warp\": false\r\n                    },\r\n                    \"move\": {\r\n                        \"angle\": {\r\n                            \"offset\": 45,\r\n                            \"value\": 90\r\n                        },\r\n                        \"attract\": {\r\n                            \"enable\": false,\r\n                            \"rotate\": {\r\n                                \"x\": 600,\r\n                                \"y\": 600\r\n                            }\r\n                        },\r\n                        \"decay\": 0,\r\n                        \"distance\": 0,\r\n                        \"direction\": \"none\",\r\n                        \"drift\": 0,\r\n                        \"enable\": true,\r\n                        \"gravity\": {\r\n                            \"acceleration\": 9.81,\r\n                            \"enable\": false,\r\n                            \"maxSpeed\": 50\r\n                        },\r\n                        \"path\": {\r\n                            \"clamp\": true,\r\n                            \"delay\": {\r\n                                \"random\": {\r\n                                    \"enable\": false,\r\n                                    \"minimumValue\": 0\r\n                                },\r\n                                \"value\": 0\r\n                            },\r\n                            \"enable\": false\r\n                        },\r\n                        \"outModes\": {\r\n                            \"default\": \"out\",\r\n                            \"bottom\": \"out\",\r\n                            \"left\": \"out\",\r\n                            \"right\": \"out\",\r\n                            \"top\": \"out\"\r\n                        },\r\n                        \"random\": true,\r\n                        \"size\": false,\r\n                        \"speed\": 1,\r\n                        \"straight\": false,\r\n                        \"trail\": {\r\n                            \"enable\": false,\r\n                            \"length\": 10,\r\n                            \"fillColor\": {\r\n                                \"value\": \"#000000\"\r\n                            }\r\n                        },\r\n                        \"vibrate\": false,\r\n                        \"warp\": false\r\n                    },\r\n                    \"number\": {\r\n                        \"density\": {\r\n                            \"enable\": true,\r\n                            \"area\": 800,\r\n                            \"factor\": 1000\r\n                        },\r\n                        \"limit\": 0,\r\n                        \"value\": 160\r\n                    },\r\n                    \"opacity\": {\r\n                        \"random\": {\r\n                            \"enable\": true,\r\n                            \"minimumValue\": 0.1\r\n                        },\r\n                        \"value\": {\r\n                            \"min\": 0,\r\n                            \"max\": 1\r\n                        },\r\n                        \"animation\": {\r\n                            \"count\": 0,\r\n                            \"enable\": true,\r\n                            \"speed\": 1,\r\n                            \"sync\": false,\r\n                            \"destroy\": \"none\",\r\n                            \"minimumValue\": 0,\r\n                            \"startValue\": \"random\"\r\n                        }\r\n                    },\r\n                    \"reduceDuplicates\": false,\r\n                    \"rotate\": {\r\n                        \"random\": {\r\n                            \"enable\": false,\r\n                            \"minimumValue\": 0\r\n                        },\r\n                        \"value\": 0,\r\n                        \"animation\": {\r\n                            \"enable\": false,\r\n                            \"speed\": 0,\r\n                            \"sync\": false\r\n                        },\r\n                        \"direction\": \"clockwise\",\r\n                        \"path\": false\r\n                    },\r\n                    \"shadow\": {\r\n                        \"blur\": 0,\r\n                        \"color\": {\r\n                            \"value\": \"#000000\"\r\n                        },\r\n                        \"enable\": false,\r\n                        \"offset\": {\r\n                            \"x\": 0,\r\n                            \"y\": 0\r\n                        }\r\n                    },\r\n                    \"shape\": {\r\n                        \"options\": {},\r\n                        \"type\": \"circle\"\r\n                    },\r\n                    \"size\": {\r\n                        \"random\": {\r\n                            \"enable\": true,\r\n                            \"minimumValue\": 1\r\n                        },\r\n                        \"value\": {\r\n                            \"min\": 1,\r\n                            \"max\": 3\r\n                        },\r\n                        \"animation\": {\r\n                            \"count\": 0,\r\n                            \"enable\": false,\r\n                            \"speed\": 4,\r\n                            \"sync\": false,\r\n                            \"destroy\": \"none\",\r\n                            \"minimumValue\": 0.3,\r\n                            \"startValue\": \"random\"\r\n                        }\r\n                    },\r\n                    \"stroke\": {\r\n                        \"width\": 0\r\n                    },\r\n                    \"twinkle\": {\r\n                        \"lines\": {\r\n                            \"enable\": false,\r\n                            \"frequency\": 0.05,\r\n                            \"opacity\": 1\r\n                        },\r\n                        \"particles\": {\r\n                            \"enable\": false,\r\n                            \"frequency\": 0.05,\r\n                            \"opacity\": 1\r\n                        }\r\n                    }\r\n                },\r\n                \"pauseOnBlur\": true,\r\n                \"pauseOnOutsideViewport\": true,\r\n                \"responsive\": [],\r\n                \"themes\": []\r\n            })\r\n        .catch((error) => {\r\n            console.error(error);\r\n        });\r\n}\r\n"]}